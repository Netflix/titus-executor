// Code generated by go-bindata. DO NOT EDIT.
// sources:
// default.json (18.462kB)
// fuse-container.json (18.668kB)
// allow-perf-syscalls.json (18.512kB)

package seccomp

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _defaultJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\xdd\x6f\x1b\xb9\x11\x7f\xbf\xbf\x42\xf0\x73\x50\xf8\xab\x3e\x3b\x6f\xaa\xe2\x36\xc6\xd9\x71\x6a\xa7\xb8\x3b\x14\x07\x82\xe6\xce\xae\x58\xf3\x2b\x24\x57\xb6\x10\xe4\x7f\x2f\xb8\x94\x64\xc9\x33\xdc\x38\xb7\x36\x9c\xf8\xf2\xd0\x26\xf7\xfb\xf1\x63\x38\x33\x9c\x19\x92\xab\x7c\xfa\x69\x34\x1a\x6d\x71\x2f\xa6\x67\xdc\x6d\xbd\x1e\xfd\x37\xfd\xf7\x68\x34\xfa\xb4\xf8\x73\xc9\xca\x08\x22\xb6\x1e\xb6\x5e\x8f\xb6\x2e\x27\x67\xef\xd9\xf8\x62\xf2\x96\xfd\x76\x78\xc0\x0e\xf6\xb7\x5e\xad\x35\x0e\xed\xd5\x78\xad\x7d\x58\x1b\x73\xd1\x62\xa3\xfb\x7a\xdf\x7b\xe4\xde\xee\xd6\x1d\xf7\xc7\xe2\xaf\x9f\x5f\x7d\x95\x80\xe3\xf4\xff\x03\x24\x1c\x5f\x9c\x0d\x17\xe2\xec\xe4\xfd\xe5\x00\x19\x52\xf7\xb2\x9a\xf2\xe0\xef\x1e\x43\x59\x77\x43\x3d\xa5\xa8\x8f\x23\xe7\xf1\xe9\x40\x8d\x1e\x9f\xf6\x0b\x9a\x26\x78\x34\xad\x2e\x07\x7b\x6a\x81\x87\x4b\x7b\xb9\x77\xb4\xfd\xdb\x9f\x96\x33\xf5\xa6\x64\x48\x7f\xfe\xd1\x0d\xba\x55\x41\xcd\x5b\x15\xc7\x22\x4a\x6b\xee\xe6\x9e\x7c\x60\xc7\x17\x17\xef\xce\xf3\xd4\x5b\x61\x1e\x04\x57\x2a\x94\x22\x12\xee\x3d\x3e\x3d\x3d\xff\x75\x43\x70\xee\x9b\xae\xff\x62\xe6\x05\x2a\xac\xd6\x60\x62\xea\xbb\xd1\x1a\x6e\x85\x6a\xab\x6e\x79\x9f\xee\x94\x96\x18\x69\x4a\x8c\xe1\x9a\xd2\x07\x17\x02\x5c\xbc\x6f\xad\x8c\xee\x53\x70\x08\x08\xad\xfe\x17\xa5\x86\x5b\x84\x2b\xee\xf5\x7d\xf0\x4a\x9a\x0a\x61\xfe\xfa\x3e\x24\xb8\x6b\x00\x89\x25\xb8\x0b\x04\x3a\xad\xa4\xc7\xa0\xb6\x68\x22\x31\xb5\x37\x86\x04\x37\xfd\xbd\x83\x95\x15\xd7\x6c\xb1\xb6\x5e\xf2\x00\xe9\x29\xd3\x0d\xc4\xe4\x82\x3d\x1c\xfb\x42\xf7\xf2\xd4\x0b\xb2\xd4\xd7\x70\x63\x83\x02\x70\x5f\xa0\xcb\x02\x04\x6a\xe2\x00\xcc\x73\xd3\x60\xca\x1a\x03\x02\x1b\xc6\xba\x39\xab\xa5\x2a\xf5\xf2\xc0\x51\x9f\xaa\x45\x32\x57\xad\x43\xd6\xa9\x5a\xb7\x77\x1f\x03\x67\x95\x62\xdd\xa8\x68\xae\x75\x6e\xa7\x40\x46\x55\x24\x98\x55\xc8\x99\x32\xe9\x6e\xb8\x44\x8b\x58\xa3\x90\xe4\x99\x2b\xf7\x4a\x0c\x39\xdd\x0c\x4c\xac\x4b\x30\x9e\xe6\x16\xc4\x0c\xab\xa1\x43\xb1\xd6\xe1\x96\x10\xe7\x56\x46\xd6\x78\x8b\x0d\x52\xe7\x38\x80\x87\x59\x11\x48\x9c\x9a\x57\x33\x19\x08\x57\x5b\x11\x8c\xe2\x94\xb2\x82\xb0\x66\xcd\x8d\x8d\xb2\x9e\x33\xcd\x71\xe8\xa8\xc9\x78\x50\x93\x01\x21\xa3\xc4\x42\xc8\x48\x51\x17\x42\x45\xc6\xa9\x51\x0c\xf6\xa9\x0e\x24\xd6\x5a\xf1\xc8\xc3\xdc\x08\x44\x34\x10\x6f\x79\x8c\x78\x45\x4a\x86\x12\x63\x05\x56\x8b\x25\x54\xe5\x41\xdb\x19\xd0\x83\x84\xd2\xbc\x21\x12\x4b\x4d\x20\xb1\xaa\x04\x17\x89\x1a\x05\xc7\x05\x4c\xb5\xa7\x54\x13\x7d\x6b\x48\xff\x58\x12\xc4\x40\x6d\xc4\x99\xaa\x03\x0b\xb1\xb0\x6e\x13\x4e\x38\x7b\x03\x51\xb8\x96\x42\x6f\x90\x9f\x35\x10\x2b\x30\x11\xad\x77\x89\xe3\x69\x1b\x88\xd0\x48\x6a\xa0\x04\x63\x1f\x4c\x44\x4b\xb7\x6f\x0b\xed\xe9\xe1\x4b\xa3\x77\x91\x80\x5a\x40\x26\xc8\x3e\x32\xa9\x0e\x39\x50\x03\xd1\x01\xf8\x54\x90\x50\x14\x2d\x96\x6b\x3c\x8a\x43\x09\xa6\x1b\x17\x60\x2f\xad\x97\x71\x4e\x50\x9e\x9b\xca\xa2\x62\x25\x67\x69\x5a\xa0\x4c\x90\xcb\xf6\x10\x68\x53\x64\x82\xee\xa3\xa4\xc6\x31\xb8\x81\xc8\xbc\xbd\x6a\x43\x64\x69\xb7\x53\xfd\xda\xc0\x71\x6a\x6d\x20\x06\x52\x82\x60\xc5\x75\x41\xf1\x89\xb2\xb8\x14\x4c\x22\xc4\xa9\x07\x5e\x31\xee\x81\x13\x74\x24\x67\x4a\xa6\xb7\x75\xc5\x29\x6d\xd3\xda\x29\xa9\x86\x8c\x42\x72\x91\x01\x78\x55\xb1\x1b\x1e\xc5\xb4\xd4\x40\x1a\xac\xd6\x75\x0e\x55\x03\x4b\xd2\xeb\xc2\xc0\x96\x09\x6e\x04\xa0\xc8\x2e\x2d\x51\x42\x48\xcb\x2a\x08\xd1\x5b\xa4\x07\x69\x53\x15\xd7\xe5\x6f\xb4\xad\xa4\x65\xee\x61\x64\x21\x6a\x49\x9b\x9c\x9d\x11\x35\xf4\x82\x21\xea\xe8\x8c\xe2\x74\x9f\xf0\xf6\x8a\xf0\x4e\x69\x59\xeb\xa5\x69\x18\x98\x88\xb7\xf9\x8a\xf5\xd0\xc8\xd0\xd7\x80\x9e\xd5\xa1\x78\x7f\x2d\x15\xd2\xaf\x22\x33\xb5\x2a\x64\x6a\x55\x72\x27\x25\x0d\xca\x8e\x09\xc3\x61\x3f\xed\x43\xc0\x13\x96\x72\xb1\x2a\x32\x4c\xa9\x00\x80\x67\xed\xc9\xc9\x74\x87\x52\xa2\x56\x54\xa2\x56\x74\xa2\xd6\xb9\x0c\x43\x30\xe8\x2b\xee\xbd\xc4\xc6\xd3\xa0\xeb\xaa\x50\x6c\x6b\x69\x84\xf5\x18\xbe\x26\xea\xb2\x0e\xc4\x62\xea\x6b\x83\xab\xb5\x0e\x24\xda\x52\xe5\x4e\x07\x22\xfb\x77\x28\xc7\x5e\xa4\x35\x47\x0e\x98\x30\x3c\x80\xf3\x36\x12\x47\x1d\xfd\x31\xed\xb5\x00\x91\x32\x84\xfe\xc8\x72\x4c\x21\x08\xeb\xb0\x33\xe9\x8f\xdd\xae\xae\x3c\x08\x90\xb8\x88\xbf\x47\x17\x22\xc0\xb2\x55\x00\x7c\xe0\x5e\xe7\xca\xdd\x5b\x43\xed\x0a\xed\x81\x52\x56\x68\x88\xe0\xa7\x43\x43\x44\x20\x1d\x1a\x2f\x66\x04\x1a\x08\x49\xa9\xba\x4f\xb7\x86\x34\x79\x86\x29\xf3\xb6\x86\x90\xb9\x78\x48\x36\x70\xb3\x28\x5c\xd1\x9e\x35\x70\x13\x40\x11\x0e\x40\xd9\x31\x61\x78\x8c\x8c\x22\xcf\x72\xbc\xc5\xfb\xcf\xc9\xaa\xae\x48\x1f\xc9\x4c\x67\xc0\x20\x1b\xc3\xd1\x9a\x9d\x74\xc4\x70\x0e\xf0\xc4\x16\x2b\xcc\x15\xc1\x82\xbb\x38\x4f\x98\xdf\xa5\xaa\x81\x6a\x0b\xbc\x42\xf6\xcf\x28\x96\x2e\x17\x46\xc4\x28\xd9\x0e\xe8\x52\x7e\x89\x97\x04\xbd\xf1\x92\x3a\x17\x64\x1c\x4b\x95\x61\x24\x56\x12\x96\xc2\xf8\xb4\x40\x50\x5b\x69\x89\x63\x1f\x21\x35\xe4\x01\xef\x9a\x84\xd5\x1e\x57\xae\x09\xd7\x3a\x34\x25\xbc\xa0\x9d\x8e\xa6\x7a\x69\xee\xf2\x4d\x8e\xe3\x0d\xbe\xd3\xea\x49\x59\x1e\xa8\x72\x33\xa3\xd4\xba\x33\x4e\xe8\x3b\x44\xee\x23\x5b\xdc\xb5\x22\x5a\x13\xa9\xc5\x07\xf8\x88\xb0\x98\xb6\xcb\xe2\x4a\x96\xe4\x1c\x98\x4a\x1a\xac\x82\x4c\x7a\x2b\x34\x0f\xd8\x92\x1d\xfb\xb1\x85\x16\xa4\xa9\x2d\x4d\x7b\x88\xad\x2f\xcc\x1a\xda\xe0\x88\x40\x9d\xc9\x2e\x56\x53\x37\x46\xf7\xe8\x92\x51\x23\x8b\x4d\x9f\x78\x41\x4c\xa1\x4a\xf9\x8b\xd7\x75\x2a\x89\x51\x9e\xba\x6b\x40\x58\x78\x45\x3a\xee\x39\x72\xc4\x15\xcb\x96\xa7\x2f\xa6\x39\x3a\x80\x53\xad\x24\x52\xd5\xaa\x55\xf7\x97\x56\xe1\xaa\x24\xb7\xf0\xbe\x1b\x4a\xa6\xaa\x74\x86\x23\x23\xd9\xa8\xa0\xbb\xdc\x36\x7c\x49\x35\x85\xc4\xbf\x22\x7b\x54\x13\xbe\xb8\x9c\xb9\x04\x7c\x1d\x18\x40\x08\xab\x51\xea\xa2\x93\x53\x00\x4d\x84\xe7\x00\x9a\xc8\xce\x01\xb4\x25\x86\xd5\x9d\x97\xf5\x31\x25\x0d\x12\x6e\x9d\xb0\x14\x4d\x4a\x38\x3d\x0a\x15\xcf\x3a\x9c\x86\x23\xf6\x73\x88\x35\x75\x9a\x5f\xe2\xf8\xbc\xd0\x31\xc4\x69\x75\x89\x93\x3d\xe8\x19\x4a\xe3\xd3\xf7\x2a\xa1\x7c\xaf\x12\x4a\xf7\x2a\x81\xbe\x3c\x09\xe5\x8b\x8f\x00\xd1\x53\xb7\x4c\x4b\x9c\x9c\x9c\xbe\x11\x09\xe5\x1b\x91\x50\xba\x11\x09\xe5\x1b\x91\x8e\x2a\x75\x29\xf6\x20\xef\x50\x42\xff\x1d\x4a\x20\xaf\x4a\x42\xf1\x3e\x24\xf4\xdf\x87\x74\xb4\xac\x18\xaf\x2a\x4f\xbc\x95\x05\xf2\xf2\x23\x14\x2e\x3f\x4a\x27\xbb\x30\xd5\x38\x77\x86\x29\xb9\xc9\xa7\xba\xa2\x9a\x52\x3b\x7f\xda\xc6\x8a\x38\x4c\xa7\x84\xa9\x62\x88\x1c\x97\xdc\xb9\xf4\xc4\xaf\x12\x4b\x1c\xef\xe3\x72\x0e\x2d\x66\xc8\x64\x08\x42\xda\x0e\xa5\x8a\x81\xcc\x38\x8e\x2b\x82\xe0\x94\x14\x38\xea\x10\x85\x3e\x7d\x4a\xa6\x2f\xad\x4b\x77\xd6\x09\xc7\x99\x6e\xae\xa9\x52\x70\x01\x13\x82\x10\xe7\x9f\x84\xf5\xbc\xab\x25\x9a\x90\x72\x1e\xa8\xdc\x1f\x01\xf5\x8f\x0d\x75\xd1\x42\xbd\x45\x76\x61\xa8\x70\x09\x90\xb9\x0a\x14\x94\xb8\x06\xa2\x9d\x81\xf7\x2d\xb2\xf8\x8a\x2f\x4f\x5a\x7c\x00\xcd\x74\xe8\xeb\x1b\x7a\xfb\x16\xaf\x35\x96\x6c\x9f\x5c\x77\x74\x79\xf4\x3e\xd9\xee\x68\xba\x3f\x32\x6b\x24\x6d\x55\x78\x17\x29\x3f\x8b\xb4\xc5\x2b\xe8\x96\xda\xab\x2d\x55\xd4\xd3\xf7\x05\x19\xc5\x8e\xdd\x52\x3a\xe8\x40\x43\x3c\xb6\xac\x88\x42\x95\xd1\x92\xca\x99\x51\x8f\x5e\x33\x4d\x87\x81\x54\x41\xa3\x71\x13\x88\xe3\x75\x42\x89\x27\x86\xee\xac\x48\x82\xb3\x07\x7f\xec\xf2\x15\x1f\x8b\x98\x56\xa9\x75\x78\xd8\xd7\x22\x9b\x52\x6b\x69\x7e\x01\x6f\x40\xa5\xd1\xf6\xff\x76\xb8\x26\xff\x43\xbe\x2a\x49\x31\x1e\x42\x60\x33\xcd\x0a\x87\xfd\x15\x5f\x38\x77\x47\xcf\x05\x3c\x85\xd6\x36\x25\xdd\x5c\x76\xd6\x49\x05\xb7\x5b\xaf\x47\xdb\xaf\x10\x65\xdd\x6a\x8a\xf4\xbf\xe3\x7f\x6f\xe1\x36\x33\xae\x5a\x48\xdd\x37\x98\xcf\x6b\x0b\x79\x3c\x93\x3d\xcc\x14\xe0\x83\x35\x5c\xa5\xf2\xef\xfb\x55\xe7\xe1\x0f\x75\x3e\xa6\x3a\x77\xf6\x76\xb6\x7f\xde\xfd\xa1\xd3\xc7\xd6\xe9\xe1\x8f\x6d\xff\xa8\x3a\xdd\xdf\x3d\xda\x3f\x3a\xf8\x79\xf7\xe8\xef\x7f\x15\xbd\x3e\xe6\x82\x36\x25\xe7\x5e\x4c\x89\x15\x75\x8b\x72\xe2\x60\x5f\xad\xa7\xdb\xb5\x35\x3d\x30\xe5\xdf\x3b\x94\x3c\xfc\x63\xe4\x6f\x5e\x3b\xf8\x2b\xd6\x05\xba\xf1\x0d\xf3\xd7\x6b\x8c\x7b\xcd\xfa\x3e\x7f\x4b\xfc\x03\x8e\x7a\x1b\x4a\xbf\xc7\x5f\x79\xe0\xd7\xce\x4a\x43\x7c\x4a\x2b\xa6\x50\xab\x36\xa0\xef\x1b\xba\x1b\x0c\x15\x5e\x90\xfd\x34\x7e\x84\x4a\xf8\xed\xc6\x17\xf3\x7f\xc6\x7e\x62\xca\xf2\xc3\xd7\x5f\x42\x57\x04\x7a\x78\x30\x48\x83\xda\x56\xb2\x9e\x33\x55\xc5\x97\xa3\xc1\xb0\x77\xb4\x4d\xa8\x2a\xc1\xb7\xc3\x02\xec\xde\xd1\x36\x73\x42\x32\xad\xa5\x65\xd4\x03\xe4\x66\x0b\xf2\x34\xda\x35\xf1\xad\x49\xc7\x65\x26\x4d\x88\xfe\x3b\xd3\xbc\xe0\x8e\xd6\xfb\x64\xfc\x9e\xbd\x19\x4f\xd8\xc5\xf1\xf8\x0d\xbb\x3c\x1e\x5f\x4c\xde\x0e\x52\xb7\x75\x60\xd8\xd5\x9c\x4d\xb9\xa9\x14\x30\xfe\xbd\xb9\x68\xaf\xa2\x2e\x7f\xbf\x64\xe3\x37\x67\x27\xef\x06\xa9\x48\x28\x6b\xbe\xf1\x33\xfa\xd9\xf8\xf2\x97\xe3\x37\xfd\x45\xe6\xee\xce\xce\xfe\xf6\xc1\xf6\xee\xe1\xe3\x1d\x32\x9f\x22\x5a\xa0\x04\xfe\x78\xf6\xfd\xea\x2a\xf8\xd9\x2d\xbf\xf3\xcc\x96\x4f\x06\x1a\x75\xaf\xba\x10\xc1\x8f\xac\xaf\xc0\x4b\xd3\x8c\x6a\xeb\x47\x9d\x72\x46\x32\x8c\x2a\x59\xd7\xe0\x61\xb3\xf8\xea\xf1\x93\xa7\x32\xe9\xf3\xe7\xae\xa7\xf3\x97\x67\x0c\xa0\xff\x38\x3f\xff\x30\x48\x2b\x1e\xae\xac\x7d\x71\x79\x65\xf2\xf6\x62\xa8\x62\xc4\xd4\xbf\x40\xc5\x9c\x9d\xbf\xf9\xcf\xe9\xf1\x20\xc5\xe4\xe7\x34\xa6\x6d\xd5\xe2\xaf\x27\xa4\x91\xb1\x40\xd5\xeb\xdc\x0b\x53\xeb\xfb\xf1\x64\x32\xcc\xdd\xb8\x10\x2f\xce\xd9\xde\x7f\xb8\x18\x4f\x86\x39\xdb\xb5\xc0\xdf\x17\xe5\xcf\x4e\x1b\x20\x7e\x89\xb8\x7c\xd3\x29\x7c\x4a\xfe\x2d\x3f\x09\x3d\xa3\x9d\x2e\xc6\xbf\x9e\x9c\x0f\x32\x93\xb4\x8e\xf8\xd5\x89\x03\xaf\x5f\x9a\xae\x3e\x9c\x9c\x0d\xf3\xe8\xd0\xf3\xb3\xa4\x50\xfe\xb1\xf5\xf2\xc1\xfe\xa5\xa9\xf3\xc3\xef\x6c\x72\xfe\xee\x9f\x27\xff\x1a\xa4\xd4\xd9\x94\x9b\xa6\x75\x2f\x4d\x3b\xef\x4e\x06\x86\xcf\x06\x22\xd3\xa0\x9d\x55\x52\xe0\x5f\x7e\x50\xff\x0e\x42\xd8\xe8\xf1\xb2\xf4\x79\x7a\x3e\xcc\xcb\xc2\x3c\x28\xdb\x14\xff\xbd\x8e\x9f\x3e\xff\xf4\xff\x00\x00\x00\xff\xff\xce\xa4\x2c\x77\x1e\x48\x00\x00")

func defaultJsonBytes() ([]byte, error) {
	return bindataRead(
		_defaultJson,
		"default.json",
	)
}

func defaultJson() (*asset, error) {
	bytes, err := defaultJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "default.json", size: 18462, mode: os.FileMode(0644), modTime: time.Unix(1617322623, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x23, 0x9f, 0xef, 0x82, 0x95, 0x41, 0xe, 0xed, 0x2c, 0xb5, 0x12, 0xf3, 0x3e, 0xf8, 0x11, 0xa0, 0xc0, 0xcd, 0x1a, 0x90, 0x58, 0x34, 0x19, 0x7c, 0x99, 0x1a, 0xa5, 0xee, 0xb5, 0x61, 0x35, 0xb7}}
	return a, nil
}

var _fuseContainerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\xdd\x6f\x1b\xc7\x11\x7f\xcf\x5f\x41\xe8\x39\x28\xf4\x55\x45\xca\x1b\x2b\xab\xb5\x10\xc9\x72\x25\x17\x49\x50\x04\x8b\xd5\xde\xdc\x71\xab\xfd\xf2\xce\x1e\x25\xc2\xf0\xff\x5e\xec\x1d\x49\x91\x9a\xd9\xb3\x1c\x4a\xb0\xad\xf8\xa1\xb5\xf3\xfb\xed\xc7\xec\xcc\xdc\xcc\xec\x07\xfd\xe1\x87\xd1\x68\xb4\x25\xa3\x9a\x9c\xcb\xb0\xf5\xf3\xe8\xbf\xf9\xbf\x47\xa3\xd1\x87\xf9\x9f\x0b\x56\x27\x50\xa9\x8d\xb0\xf5\xf3\x68\xeb\xea\xf8\xfc\xad\x18\x5f\x1e\xbf\x16\xbf\x1d\x1e\x88\x83\xfd\xad\x1f\x57\x1a\x63\x7b\x3d\x5e\x69\x8f\x2b\x63\xce\x5b\xac\x75\x5f\xed\xfb\x80\xdc\xdb\xdd\xba\xe7\xfe\x98\xff\xf5\xe3\x8f\x9f\x25\xe0\x38\xff\xff\x06\x12\x8e\x2f\xcf\x37\x17\xe2\xfc\xf4\xed\xd5\x06\x32\xe4\xee\x65\x35\xf5\x83\xbf\x79\x0a\x65\xdd\x0f\xf5\x9c\xa2\x3e\x8d\x9c\x27\x67\x1b\x6a\xf4\xe4\x6c\x58\xd0\x3c\xc1\x93\x69\x75\x31\xd8\x73\x0b\xbc\xb9\xb4\x57\x7b\x47\xdb\xbf\xfd\x69\x39\x73\x6f\x4e\x86\xfc\xe7\x1f\xdd\xa0\x5b\x15\xd4\xb2\x35\x69\xac\x92\xf6\xee\x7e\xee\xe3\x77\xe2\xe4\xf2\xf2\xcd\x45\x3f\xf5\x16\xce\x50\x49\x63\xb0\x14\x91\x68\xef\xf1\xd9\xd9\xc5\xaf\x6b\x82\xcb\xd8\x74\xfd\xe7\x33\xcf\x51\xe5\xad\x05\x97\x72\xdf\xb5\xd6\x70\xa7\x4c\x5b\x75\xcb\xfb\x70\xaf\xb4\xcc\x68\x57\x62\x9c\xb4\x9c\x3e\xa4\x52\x10\xd2\x43\x6b\xf5\xe8\x3e\x07\x23\x12\xb4\xfa\x5f\xd2\x16\xee\x08\x6e\x64\xb4\x0f\xc1\x6b\xed\x2a\x82\xc5\x9b\x87\x90\x92\xa1\x01\x22\x96\x92\x01\x19\x74\x52\xe9\x48\x41\xeb\xc9\x44\x6a\xe2\x6f\x1d\x0b\xae\xfb\x7b\x07\x1b\xaf\x6e\xc4\x7c\x6d\x83\xe4\x01\xd1\x53\x4f\x37\x90\xb2\x0b\x0e\x70\xe2\x13\xdd\xcb\x53\xcf\xc9\x52\x5f\x27\x9d\x47\x03\x10\x3e\x41\x97\x05\x40\x6e\x62\x04\x11\xa5\x6b\x28\xe5\x9d\x03\x45\x0d\xe3\xc3\x4c\xd4\xda\x94\x7a\x45\x90\xa4\x4f\xd5\x12\x99\xab\x36\x10\xeb\x54\x6d\xd8\x7b\x88\x41\xf0\xc6\x88\x6e\x54\x32\xd7\x2a\xb7\x53\x20\x93\x29\x12\xc2\x1b\xe2\x4c\x3d\x19\x6e\xa5\x26\x8b\x58\xa1\x88\xe4\x3d\x57\xee\x95\x19\x76\xba\x29\xb8\x54\x97\x60\x3a\xcd\x1d\xa8\x29\x55\x43\x87\x52\xad\xc3\x1d\x23\xce\x9d\x4e\xa2\x89\x9e\x1a\xa4\xee\xe3\x00\x1d\x66\x49\x10\x71\x6a\x59\x4d\x35\x32\xae\xb6\x24\x04\xc7\x19\xe3\x15\x63\xcd\x5a\x3a\x9f\x74\x3d\x13\x56\xd2\xd0\x51\xb3\xf1\xa0\x66\x03\x42\x8f\x32\x0b\x61\x23\x45\x5d\x08\x15\x3d\xce\x8d\xe2\xa8\x4f\x75\x20\xb3\xd6\x4a\x26\x89\x33\xa7\x08\xd1\x40\xba\x93\x29\xd1\x15\x19\x8d\x25\xc6\x2b\xaa\x16\xcf\xa8\x2a\x82\xf5\x53\xe0\x07\xc1\xd2\xbc\x98\x98\xa5\x66\x90\x59\x55\x86\x8b\x44\x4d\x82\xe3\x1c\xe6\xda\x73\xaa\x49\xb1\x75\xac\x7f\x2c\x08\x66\xa0\x36\xd1\x4c\xd5\x81\x85\x58\x58\xb7\x19\x67\x9c\xbd\x81\xa4\x42\xcb\xa1\xb7\xc4\xcf\x1a\x48\x15\xb8\x44\xd6\xbb\xc0\xe9\xb4\x0d\x24\x68\x34\x37\x50\x86\xa9\x0f\x66\xa2\xe5\xdb\xb7\x85\xf6\xfc\xf0\xa5\xd1\xbb\x48\xc0\x2d\xa0\x27\xd8\x3e\x3a\xab\x8e\x38\x50\x03\x29\x00\xc4\x5c\x90\x70\x14\x2f\x56\x68\x22\x89\x43\x19\xe6\x1b\x17\xe0\xa8\x7d\xd4\x69\xc6\x50\x51\xba\xca\x93\x62\xa5\xcf\xd2\xbc\x40\x3d\xc1\x2e\x3b\x02\xf2\xa6\xe8\x09\xbe\x8f\xd1\x96\xc6\xe0\x06\x92\x88\xfe\xba\xc5\x24\xf2\xd7\xce\xf5\x6b\x51\xd2\xd4\xda\x40\x42\x56\x02\xf4\xea\xa6\xa0\xf8\x4c\x79\x5a\x0a\x66\x11\xd2\x24\x82\xac\x84\x8c\x20\x19\x3a\xb1\x33\x65\xd3\xfb\xba\x92\x9c\xb6\x79\xed\x94\x54\xc3\x46\x21\x3d\xcf\x00\xb2\xaa\xc4\xad\x4c\x6a\x52\x6a\xa0\x1d\x55\xeb\x2a\x47\xaa\x81\x05\x19\x6d\x61\x60\x2f\x94\x74\x0a\x48\x64\xd7\x9e\x29\x21\xb4\x17\x15\x60\x8a\x9e\xe8\x41\xfb\x5c\xc5\x75\xf9\x9b\x7c\x56\xda\x8b\xf0\x38\xb2\x10\xb5\xb4\xcf\xce\x2e\x98\x1a\x7a\xce\x30\x75\x74\x8f\xd2\x74\x9f\xf1\xf6\x9a\xf1\x4e\xed\x45\x1b\xb5\x6b\x04\xb8\x44\x3f\xf3\x25\x1b\xa1\xd1\x38\xd4\x80\x9f\x35\x90\x78\x7f\xa3\x0d\xd1\xaf\x61\x33\xb5\x29\x64\x6a\x53\x72\x27\xa3\x1d\xc9\x8e\x19\xa3\x61\x3f\x7f\x87\x40\x27\x2c\xe5\x62\x53\x64\x84\x31\x08\x40\x67\x1d\xc8\xc9\x7c\x87\x52\xa2\x36\x5c\xa2\x36\x7c\xa2\xb6\x7d\x19\x46\x60\xb0\xd7\x32\x46\x4d\x8d\x67\xc1\xd6\x55\xa1\xd8\xb6\xda\x29\x1f\x29\x7c\xc3\xd4\x65\x1d\x48\xc5\xb4\x37\x8e\x56\x6b\x1d\xc8\xb4\xe5\xca\x9d\x0e\x24\xf6\xef\x50\x49\xbd\xc8\x5a\x49\x1c\x30\x63\x74\x80\x10\x7d\x62\xb6\x3a\xf6\x7d\xfe\xd6\x10\x12\x67\x08\xfb\x5e\xf4\x31\x85\x21\x7c\xa0\xce\x64\xdf\x77\x5f\x75\x15\x41\x81\xa6\x45\xfc\x03\xba\x10\x01\x16\xad\x10\xe8\x86\x7b\x95\x2b\x77\x6f\x1d\xf7\x55\xd8\x08\x9c\xb2\xb0\x61\x82\x9f\xc5\x86\x89\x40\x16\x9b\xa8\xa6\x0c\x8a\x8c\xa4\x5c\xdd\x67\x5b\xc7\x9a\xbc\x87\x39\xf3\xb6\x8e\x91\xb9\xb8\x49\x76\x70\x3b\x2f\x5c\xc9\x37\xeb\xe0\x16\xc1\x30\x0e\xc0\xd9\x31\x63\x74\x8c\x1e\x25\x9e\x15\x64\x4b\xbf\xbf\xa0\xab\xba\x62\x7d\xa4\x67\x3a\x03\xa2\x6e\x9c\x24\x6b\x0e\x3a\x30\xc3\x05\xa0\x13\x7b\xaa\xb0\x50\x04\x0b\xee\x12\x22\x63\xfe\x90\xab\x06\xae\x2d\xc8\x8a\xd8\xbf\x47\xa9\x74\x7d\x61\xc4\x8c\xd2\xdb\x81\x1c\xca\x2f\xf0\x92\xa0\xb7\x51\x73\xfb\x82\x1e\xa7\x52\xf5\x30\x11\x2b\x0b\xcb\x61\x72\x52\x20\xb8\x4f\x69\x81\x53\x1f\x61\x35\x14\x81\x7e\x35\x19\xab\x23\xad\x5c\x33\x6e\x2d\x36\x25\xbc\xa0\x9d\x8e\xe6\x7a\x59\x19\xfa\x93\x9c\x20\x1b\x7a\xa6\x35\x90\xb2\x22\x70\xe5\x66\x8f\x72\xeb\xee\x71\x46\xdf\x98\x64\x4c\x62\x7e\xd6\x4a\x68\xcb\xa4\x96\x88\xf0\x9e\x60\x29\x7f\x2e\xf3\x23\x59\x96\x0b\xe0\x2a\xed\xa8\x0a\x7a\x32\x7a\x65\x25\x52\x4b\x76\xec\xfb\x16\x5a\xd0\xae\xf6\x3c\x1d\x21\xb5\xb1\x30\x2b\xb6\x18\x98\x40\xdd\x93\x5d\xac\xe6\x4e\x8c\x1e\xd0\x25\xa3\x26\x91\x9a\x21\xf1\x50\x4d\xa0\xca\xf9\x4b\xd6\x75\x2e\x89\x49\x9e\xba\x6f\xc0\x58\x78\x49\x06\x19\x25\x71\xc4\x25\x2b\x16\xbb\x2f\x61\x25\xd9\x80\x73\xad\x34\x51\xd5\xb2\x55\xf7\x97\xd6\xd0\xaa\xa4\x6f\x11\x63\x37\x94\xce\x55\xe9\x94\x46\x46\xb6\x51\x41\x77\x7d\x5b\xfc\x94\x6a\x0a\x89\x7f\x49\x0e\xa8\x06\x3f\xb9\x9c\x99\x06\x7a\x1c\x88\xa0\x94\xb7\x24\x75\xf1\xc9\x09\xc1\x32\xe1\x19\xc1\x32\xd9\x19\xc1\x7a\x66\x58\xdb\x79\xd9\x10\x53\xd2\x20\xe3\xd6\x19\xcb\xd1\xa4\x84\xf3\xa3\x70\xf1\xac\xc3\x79\x38\x51\x3f\x87\x54\x73\xbb\xf9\x05\x4e\xf7\x0b\x1d\xc3\xec\x56\x17\x38\xdb\x83\x9f\xa1\x34\x3e\x7f\xae\x82\xe5\x73\x15\x2c\x9d\xab\x20\x7f\x78\x82\xe5\x83\x0f\x84\x14\xb9\x53\xa6\x05\xce\x4e\xce\x9f\x88\x60\xf9\x44\x04\x4b\x27\x22\x58\x3e\x11\xe9\xa8\x52\x97\x62\x0f\xf6\x0c\x05\x87\xcf\x50\x90\x3d\x2a\xc1\xe2\x79\x08\x0e\x9f\x87\x74\xb4\xae\x84\xac\xaa\xc8\xdc\x95\x21\x7b\xf8\x81\x85\xc3\x8f\xd2\xce\x0e\x27\x96\xe6\x4e\x9c\xb0\x1f\xf9\xc4\x56\x5c\x53\xee\xcb\x9f\xb4\xa9\x62\x36\xd3\x39\x61\x9a\x84\x49\xd2\x92\xbb\x2f\x3d\xe9\xad\xc4\x02\xa7\xdf\x71\x39\x87\x16\x33\x64\x36\x04\x23\x6d\x87\x72\xc5\x40\xcf\x04\x49\x2b\x02\x0c\x46\x2b\x1a\x75\x98\x42\x9f\xdf\x25\xf3\x87\xd6\xa5\x33\xeb\x8c\xd3\x4c\x37\xb3\x5c\x29\x38\x87\x19\x41\x98\xfd\x4f\xc6\x06\xee\xd5\x32\xcd\x48\x39\x43\x2e\xf7\x27\x20\xfd\x53\xc3\x1d\xb4\x70\x77\x91\x5d\x18\x2a\x1c\x02\xf4\x5c\x05\x06\x4a\x5c\x03\xc9\x4f\x21\xc6\x96\x58\x7c\xc9\x97\x27\x2d\x5e\x80\xf6\x34\x0e\xf5\xc5\xc1\xbe\xc5\x63\x8d\x05\x3b\x24\xd7\x3d\x5d\x1e\x7d\x48\xb6\x7b\x9a\xef\x4f\xcc\x9a\x58\x5b\x15\xee\x45\xca\xd7\x22\x6d\xf1\x08\xba\xe5\xbe\xd5\x96\x2b\xea\xf9\xf3\x82\x1e\xa5\x8e\xdd\x72\x3a\xe8\x40\xc7\x5c\xb6\x2c\x89\x42\x95\xd1\xb2\xca\x99\x72\x97\x5e\x53\xcb\x87\x81\x5c\x41\x93\x71\x33\x48\xe3\x75\x46\x99\x2b\x86\x6e\xaf\xc8\x82\xd3\x47\x3f\x76\xf9\x8c\xc7\x22\xae\x35\x66\x15\xde\xec\xb5\xc8\xba\xd4\x56\xbb\x5f\x20\x3a\x30\x79\xb4\xfd\xbf\x1d\xae\xc8\xff\x98\x57\x25\x39\xc6\x03\xa2\x98\x5a\x51\xd8\xec\x2f\xf9\xc2\xbe\x3b\x45\xa9\xe0\x39\xb4\xb6\x2e\xe9\xfa\xb2\x7b\x9d\x54\x70\xb7\xf5\xf3\x68\xfb\x47\x42\xf9\xb0\x9c\x22\xff\xef\xe4\xdf\x5b\xb4\xcd\x54\x9a\x16\x72\xf7\x35\xe6\xe3\xca\x42\x9e\xce\x64\x8f\x33\x05\x44\xf4\x4e\x9a\x5c\xfe\x7d\xbb\xea\x3c\xfc\xae\xce\xa7\x54\xe7\xce\xde\xce\xf6\x4f\xbb\xdf\x75\xfa\xd4\x3a\x3d\xfc\xfe\xd9\x3f\xa9\x4e\xf7\x77\x8f\xf6\x8f\x0e\x7e\xda\x3d\xfa\xfb\x5f\x45\xaf\x4f\xb9\xa0\x75\xc9\x65\x54\x13\x66\x45\xdd\xa2\x82\x3a\xd8\x37\xab\xe9\x76\x65\x4d\x8f\x4c\xf9\x0f\x36\x25\x8f\x7f\x8c\xfc\xd5\x6b\x87\xbe\x62\x9d\xa3\x6b\x6f\x98\x3f\x5f\x63\x32\x5a\x31\xf4\xfc\x2d\xf3\x8f\xd8\xea\xad\x29\xfd\x01\x7f\x1d\x41\xde\x04\xaf\x1d\xf3\x94\x56\x4d\xa0\x36\x2d\x92\xf7\x0d\xdd\x09\x86\xc1\x17\x64\x3f\x4b\x2f\xa1\x32\x7e\xb7\xf6\x62\xfe\xcf\xd8\x4f\x4d\x44\x7f\xf1\xf5\x97\xd0\x15\x83\x1e\x1e\x6c\xa4\x41\xeb\x2b\x5d\xcf\x84\xa9\xd2\xcb\xd1\x20\xee\x1d\x6d\x33\xaa\xca\xf0\xdd\x66\x01\x76\xef\x68\x5b\x04\xa5\x85\xb5\xda\x0b\xee\x02\x72\xbd\x05\xbb\x1b\xed\x9a\xc4\xd6\xe5\xed\xb2\xd0\x0e\x53\xfc\xc6\x34\xaf\x64\xe0\xf5\x7e\x3c\x7e\x2b\x5e\x8d\x8f\xc5\xe5\xc9\xf8\x95\xb8\x3a\x19\x5f\x1e\xbf\xde\x48\xdd\x3e\x80\x13\xd7\x33\x31\x91\xae\x32\x20\xe4\xb7\xe6\xa2\x83\x8a\xba\xfa\xfd\x4a\x8c\x5f\x9d\x9f\xbe\xd9\x48\x45\xca\x78\x47\xdf\xde\xa2\xf2\xae\xd6\xe4\x4a\xa6\x46\xeb\x5b\x9a\x87\x6a\xe4\x5e\x37\xd4\x18\x34\xf3\xc0\x83\x1b\xc0\xfa\x29\x08\x96\x69\x07\x50\x92\x29\x5b\x87\x13\x19\xbf\xf2\x13\x87\xf3\xf1\xd5\x2f\x27\xaf\x86\x4b\xe6\xdd\x9d\x9d\xfd\xed\x83\xed\xdd\xc3\xa7\xdb\x32\x3f\x47\xec\x23\xe5\xc8\xd3\x79\xeb\x67\xd7\xf4\xbd\x1f\x7f\x41\xcb\xef\x7c\x61\xcb\x67\x03\x8d\xba\x3b\x6a\x48\x10\x47\x3e\x56\x10\xb5\x6b\x46\xb5\x8f\xa3\x4e\x39\x23\x8d\xa3\x4a\xd7\x35\x44\x58\xff\xa2\x06\xfc\xe4\xb9\x4c\xfa\xe5\x33\xf1\xf3\xf9\xcb\x17\x4c\x07\xff\xb8\xb8\x78\xb7\x91\x56\x22\x5c\x7b\xff\xe2\xb2\xe4\xf1\xeb\xcb\x4d\x15\xa3\x26\xf1\x05\x2a\xe6\xfc\xe2\xd5\x7f\xce\x4e\x36\x52\x4c\x7f\x39\x28\xac\xaf\x5a\xfa\x16\x44\x3b\x9d\x0a\x54\xbd\xca\xbd\x30\xb5\xbe\x1d\x1f\x1f\x6f\xe6\x6e\x52\xa9\x17\xe7\x6c\x6f\xdf\x5d\x8e\x8f\x37\x73\xb6\x1b\x45\x5f\x4b\xf5\x8f\x68\x1b\x60\x7e\x57\xb9\xb8\xa1\x2a\x3c\x8c\xff\x9a\x2f\xb8\xbe\xa0\x9d\x2e\xc7\xbf\x9e\x5e\x6c\x64\x26\xed\x03\xf3\x1b\x9a\x00\xd1\xbe\x34\x5d\xbd\x3b\x3d\xdf\xcc\xa3\x71\xe0\x47\x56\x58\xfe\xe9\xf8\xe2\xf9\xc1\x4b\x53\xe7\xbb\xdf\xc5\xf1\xc5\x9b\x7f\x9e\xfe\x6b\x23\xa5\x4e\x27\xd2\x35\x6d\x78\x69\xda\x79\x73\xba\x61\xf8\x6c\x20\x09\x0b\x36\x78\xa3\x15\xfd\x1d\x0b\xf7\xaf\x3a\xe0\x5a\x8f\x97\xa5\xcf\xb3\x8b\xcd\xbc\x0c\x67\x68\x7c\x53\xfc\xd7\x47\x7e\xf8\xf8\xc3\xff\x03\x00\x00\xff\xff\xee\xa0\x8b\x4f\xec\x48\x00\x00")

func fuseContainerJsonBytes() ([]byte, error) {
	return bindataRead(
		_fuseContainerJson,
		"fuse-container.json",
	)
}

func fuseContainerJson() (*asset, error) {
	bytes, err := fuseContainerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "fuse-container.json", size: 18668, mode: os.FileMode(0644), modTime: time.Unix(1617322623, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x83, 0x1, 0x57, 0x8b, 0xd2, 0xfa, 0x2b, 0x80, 0x4, 0xc4, 0xa6, 0x1c, 0x72, 0x3, 0xf0, 0x78, 0xa5, 0x80, 0x26, 0x2d, 0x21, 0xd5, 0x5b, 0x70, 0x9d, 0xd6, 0x1f, 0xa1, 0x6e, 0x66, 0x16, 0x77}}
	return a, nil
}

var _allowPerfSyscallsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\x6d\x6f\x1b\xb9\x11\xfe\x7e\xbf\x42\xd0\xe7\xa0\xf0\x5b\x7d\x76\xbe\xa9\x8a\xdb\x18\x67\xc7\xa9\xed\xe2\xee\x50\x1c\x08\x9a\x3b\xbb\x62\xcd\x37\x93\x5c\xd9\x42\x90\xff\x5e\x70\x57\x92\x25\xcf\x70\xe3\xdc\xca\x70\xa2\xcb\x87\x36\xb9\xe7\xe1\xcb\xf0\xe1\x70\x38\x24\x57\xf9\xf4\xd3\x60\x30\x18\x72\x2f\x26\xe7\xdc\x0d\xdf\x0e\xfe\x9b\xfe\x7b\x30\x18\x7c\x9a\xff\xb9\x60\x65\x04\x11\x6b\x0f\xc3\xb7\x83\xe1\xd5\xf8\xfc\x23\x1b\x5d\x8e\xdf\xb3\xdf\x8e\x0e\xd9\xe1\xc1\xf0\xcd\x4a\xe1\x50\xdf\x8c\x56\xca\x87\x95\x36\xe7\x25\xd6\xaa\xaf\xd6\x7d\x42\xee\xef\x0d\x1f\xb9\x3f\xe6\x7f\xfd\xfc\xe6\xab\x0c\x1c\xa5\xff\xef\x61\xe1\xe8\xf2\xbc\xbf\x11\xe7\xa7\x1f\xaf\x7a\xd8\x90\xaa\xe7\x65\x6a\x1b\xff\xb0\x09\xb1\x1e\x9b\x7a\x49\x53\x37\x63\xe7\xc9\x59\x4f\x45\x4f\xce\xba\x0d\x4d\x1d\x6c\x4c\xd5\x45\x63\x2f\x6d\x70\x7f\x6b\xaf\xf6\x8f\x77\x7e\xfb\xd3\x76\xa6\xda\x94\x0d\xe9\xcf\x3f\x9a\x46\x87\x05\x94\xbc\x56\x71\x24\xa2\xb4\xe6\xb1\xef\xf1\x35\x3b\xb9\xbc\xfc\x70\xd1\x76\x3d\x0c\xb3\x20\xb8\x52\x21\x17\x91\x70\xed\xd1\xd9\xd9\xc5\xaf\x6b\x86\x73\x5f\x35\xf5\xe7\x3d\xcf\x51\x61\xb5\x06\x13\x53\xdd\xb5\xd2\xf0\x20\x54\x5d\x34\xc3\xfb\xf4\x28\x5a\x62\xa4\xc9\x31\x86\x6b\x4a\x0f\x2e\x04\xb8\xf8\x74\xb6\x5a\xf4\x80\x82\x43\x40\x68\xf1\xbf\x28\x35\x3c\x20\x5c\x71\xaf\x9f\x82\x37\xd2\x14\x08\x73\x25\x82\xfc\xed\x53\x48\x70\x57\x01\xb2\x54\x70\x17\x08\x74\x52\x48\x8f\x41\x6d\x51\xdf\x62\x62\xef\x0d\x09\xae\x2f\x81\x06\x56\x56\xdc\xb2\xf9\x70\x3b\xc9\x43\x24\x5d\x4b\x57\x10\x93\x57\x76\x70\xec\x0b\xd5\xf3\x5d\xcf\xc9\x5c\x5d\xc3\x8d\x0d\x0a\xc0\x7d\x81\xce\x1b\x10\xa8\x8e\x03\x30\xcf\x4d\x85\x29\x6b\x0c\x08\x3c\x31\xd6\xcd\x58\x29\x55\xae\x96\x07\x8e\xea\x14\x35\xb2\xb9\xa8\x1d\x9a\x9d\xa2\x76\xfb\x4f\x31\x70\x56\x29\xd6\xb4\x8a\xfa\x5a\xe5\x76\x33\x64\x54\x59\x82\x59\x85\x9c\xa9\x25\xdd\x3d\x97\x68\x10\x2b\x14\xb2\xbc\xe5\xf2\xb5\x12\x43\x76\x37\x05\x13\xcb\x1c\x8c\xbb\x79\x00\x31\xc5\x32\x34\x28\x56\x1d\x1e\x08\x73\x1e\x64\x64\x95\xb7\x78\x42\xca\x36\x34\xe0\x66\x96\x04\x32\xa7\xe4\xc5\x54\x06\xc2\xd5\x96\x04\xa3\x38\xa5\xac\x20\x66\xb3\xe4\xc6\x46\x59\xce\x98\xe6\x38\x74\x94\x64\x3c\x28\xc9\x80\xd0\xa2\xc4\x40\xc8\x48\x51\x66\x42\x45\x8b\x53\xad\x18\xec\x53\x0d\x48\x8c\xb5\xe0\x91\x87\x99\x11\x88\xa8\x20\x3e\xf0\x18\xf1\x88\x94\x0c\x39\xc6\x0a\x2c\x8b\x25\xa4\xf2\xa0\xed\x14\xe8\x46\x42\xae\xdf\x10\x89\xa1\x26\x90\x18\x55\x82\xb3\x44\x89\x82\xe3\x1c\xa6\xca\x53\xd2\x44\x5f\x1b\xd2\x3f\x16\x04\xd1\x50\x1d\xf1\xe6\xd5\x80\x99\x58\x58\xd6\x09\x27\x9c\xbd\x82\x28\x5c\x4d\xa1\xf7\xc8\xcf\x2a\x88\x05\x98\x88\xc6\xbb\xc0\x71\xb7\x15\x44\xa8\x24\xd5\x50\x82\xb1\x0f\x26\xa2\xa6\xcb\xd7\x99\xf2\x74\xf3\xb9\xd6\x9b\x48\x40\x0d\xa0\x25\xc8\x3a\x32\x49\x87\x1c\xa8\x82\xe8\x00\x7c\xca\x51\x28\x8a\x36\xcb\x55\x1e\xc5\xa1\x04\xd3\x85\x33\xb0\x97\xd6\xcb\x38\x23\x28\xcf\x4d\x61\x51\xfe\xd2\xee\xd2\xb4\x41\x2d\x41\x0e\xdb\x43\xa0\xa7\xa2\x25\xe8\x3a\x4a\x6a\x1c\x83\x2b\x88\xcc\xdb\x9b\x3a\x44\x96\x56\x3b\x55\xaf\x0e\x1c\x6f\xad\x15\xc4\x40\x5a\x10\xac\xb8\xcd\x08\x9f\x28\x8b\xb3\xc3\x64\x42\x9c\x78\xe0\x05\xe3\x1e\x38\x41\x47\xb2\xa7\x34\xf5\xb6\x2c\x38\xa5\x36\xad\x4e\x4e\x1a\x32\x0a\xc9\xf9\x0e\xc0\x8b\x82\xdd\xf3\x28\x26\xb9\x02\xd2\x60\x59\x57\x39\x94\x0d\x2c\x48\xaf\x33\x0d\x5b\x26\xb8\x11\x80\x22\xbb\xb4\x44\x0a\x21\x2d\x2b\x20\x44\x6f\x91\x0e\xd2\xa6\x2c\xae\xd9\xbf\xd1\xb2\x92\x96\xb9\xe7\x91\x99\xa8\x25\x6d\x72\x76\x46\xe4\xd0\x73\x86\xc8\xa3\x5b\x14\x6f\xf7\x09\xaf\x6f\x08\xef\x94\x96\xd5\x5e\x9a\x8a\x81\x89\x78\x99\x2f\x59\x0f\x95\x0c\x5d\x05\xe8\x5e\x1d\x8a\xf7\xb7\x52\x21\x7d\x15\xb9\x53\xab\xcc\x4e\xad\x72\xee\xa4\xa4\x41\xbb\x63\xc2\x70\xd8\x4f\xeb\x10\x70\x87\xb9\xbd\x58\x65\x19\xa6\x54\x00\xc0\xbd\x76\xec\xc9\x74\x85\xdc\x46\xad\xa8\x8d\x5a\xd1\x1b\xb5\x6e\xd3\x30\x04\x83\xbe\xe1\xde\x4b\x3c\x79\x1a\x74\x59\x64\x92\x6d\x2d\x8d\xb0\x1e\xc3\xb7\x44\x5e\xd6\x80\xd8\x4c\x7d\x6b\x70\xb6\xd6\x80\x44\x59\x2a\xdd\x69\x40\x34\xff\x0d\xca\xb1\x17\x69\xcd\x91\x03\x26\x0c\x37\xe0\xbc\x8d\xc4\x51\x47\xdf\xa5\xb5\x16\x20\x52\x13\xa1\xef\x58\x1b\x53\x08\xc2\x3a\xec\x4c\xfa\xae\x59\xd5\x85\x07\x01\x12\x27\xf1\x4f\xe8\x4c\x04\x58\x94\x0a\x80\xcf\xe0\xab\x5c\xbe\x7a\x6d\xa8\x55\xa1\x3d\x50\x62\x85\x8a\x08\x7e\x3a\x54\x44\x04\xd2\xa1\xf2\x62\x4a\xa0\x81\xb0\x94\xca\xfb\x74\x6d\xc8\x29\x6f\x61\x6a\x7a\x6b\x43\xd8\x9c\x3d\x24\x1b\xb8\x9f\x27\xae\x68\xcd\x1a\xb8\x0f\xa0\x08\x07\xa0\xe6\x31\x61\xb8\x8d\x16\x45\x9e\xe5\x78\x8d\xd7\x9f\x03\x5f\xb2\x26\xd0\x93\x8e\xe2\x64\x51\x16\x1d\x4c\x33\xbf\x41\x56\x86\x23\x49\x9c\x74\xb8\x37\xe9\x00\xdb\x65\xb1\x9e\x2e\x0b\x66\xbc\xc9\x79\xc2\x3b\x5c\x4a\x2a\xa8\xb2\xc0\x0b\xe4\x1e\x2d\x8a\xad\x6b\xf3\x26\xa2\x95\x76\x9a\xd0\x35\xfe\x02\xcf\x19\x7a\xef\x25\x75\x6c\x68\x71\x6c\x55\x0b\x23\xb3\x92\xb1\x14\xc6\x27\x19\x82\x5a\x69\x0b\x1c\xbb\x10\xa9\x90\x07\xbc\xa8\x12\x56\x7a\x9c\xd8\x26\x5c\xeb\x50\xe5\xf0\x8c\x3a\x0d\x4d\xd5\xd2\xdc\xb5\x17\x3d\x8e\x57\xf8\xca\xab\x63\x47\xf3\x40\x65\xa3\x2d\x4a\x8d\xbb\xc5\x09\xbd\x43\xe4\x3e\xb2\xf9\xed\x2c\xa2\x35\xb1\xf3\xf8\x00\x77\x08\x8b\x69\xb9\xcc\x2f\x71\x49\xce\x81\x29\xa4\xc1\x12\xb4\xa4\xb7\x42\xf3\x80\x67\xb2\x61\xef\x6a\xa8\x41\x9a\xd2\xd2\xb4\x87\x58\xfb\x4c\xaf\xa1\x0e\x8e\x88\xe3\x2d\xd9\x84\x72\xea\x42\xe9\x09\x9d\x9b\xd4\xc8\x62\xd5\x65\x5e\x10\x13\x28\xd2\xf6\xc6\xcb\x32\x65\xcc\x68\x1b\x7b\x2c\x40\xcc\xf0\x92\x74\xdc\x73\xe4\x88\x4b\x96\x2d\x0e\x67\x4c\x73\x74\x3e\xa7\x4a\x49\x24\xd5\xb2\x54\xf3\x97\x5a\xe1\xa4\xa5\x2d\xe1\x7d\xd3\x94\x4c\x49\xeb\x14\x47\x46\xb2\x50\x46\xbb\xb6\x6c\xf8\x92\x34\x99\xbc\x60\x49\x76\x48\x13\xbe\x38\x9c\x99\x04\x7c\x5b\x18\x40\x08\xab\xd1\xce\x46\xef\x5d\x01\x34\x11\x9e\x03\x68\x62\xf3\x0e\xa0\x2d\xd1\xac\x6e\xbc\xac\x8b\xc9\x29\x48\xb8\x75\xc2\x52\x34\xc9\xe1\x74\x2b\x54\x3c\x6b\x70\x1a\x8e\xd8\xcf\x21\x96\xd4\x61\x7f\x81\xe3\xe3\x44\xc3\x10\x87\xd9\x05\x4e\xd6\xa0\x7b\xc8\xb5\x4f\x5f\xbb\x84\xfc\xb5\x4b\xc8\x5d\xbb\x04\xfa\x6e\x25\xe4\xef\x45\x02\x44\x4f\x5d\x42\x2d\x70\xb2\x73\xfa\xc2\x24\xe4\x2f\x4c\x42\xee\xc2\x24\xe4\x2f\x4c\x1a\x2a\x57\x25\x5b\x83\xbc\x62\x09\xdd\x57\x2c\x81\xbc\x49\x09\xd9\xeb\x92\xd0\x7d\x5d\xd2\xd0\xb2\x60\xbc\x28\x3c\xf1\xba\x16\xc8\xbb\x91\x90\xb9\x1b\xc9\x1d\xfc\xc2\x44\xe3\xbd\x33\x4c\xc8\x45\x3e\xd1\x05\x55\x94\x5a\xf9\x93\x3a\x16\xc4\x59\x3b\x6d\x98\x2a\x86\xc8\x71\x46\xde\xa6\x9e\xf8\xd1\x62\x81\xe3\x75\x9c\xdf\x43\xb3\x3b\x64\x9a\x08\xc2\xda\x06\xa5\x92\x81\x96\x71\x1c\x67\x04\xc1\x29\x29\x70\xd4\x21\xce\x01\xf4\x21\x9a\xbe\xd3\xce\x5d\x69\x27\x1c\xef\x74\x33\x4d\xa5\x82\x73\x98\x30\x84\x38\x1e\x25\xac\xe3\xd9\x2d\xd1\x84\x95\xb3\x40\xed\xfd\x11\x50\xfd\x58\x51\xf7\x30\xd4\x53\x65\x13\x86\x32\x77\x04\x2d\x57\x80\x82\x1c\x57\x41\xb4\x53\xf0\xbe\x46\x33\xbe\xe4\xf3\x9d\x66\xdf\x47\x5b\x3a\x74\xd5\x0d\x9d\x75\xb3\xb7\x1e\x0b\xb6\xcb\xae\x47\x3a\xdf\x7a\x97\x6d\x8f\x34\x5d\x1f\x4d\x6b\x24\xe7\x2a\xf3\x6c\x92\x7f\x35\xa9\xb3\x37\xd4\x35\xb5\x56\x6b\x2a\xa9\xa7\xaf\x13\x5a\x14\x3b\x76\x4d\x69\xd0\x80\x86\x78\x8b\x59\x12\x99\x2c\xa3\x26\xc5\x99\x52\x6f\x62\x53\x4d\x87\x81\x94\x41\xa3\x76\x13\x88\xe3\x75\x42\x89\x17\x88\xe6\xac\x48\x82\xd3\x67\x7f\x1e\xf3\x15\x9f\x97\x98\x5a\xa9\x55\xb8\xdf\xf7\x25\xeb\x56\x6b\x69\x7e\x01\x6f\x40\xa5\xd6\x0e\xfe\x76\xb4\x62\xff\x73\xbe\x43\x49\x31\x1e\x42\x60\x53\xcd\x32\x87\xfd\x25\x9f\x39\x77\x47\xcf\x05\xbc\x84\x6a\xeb\x96\xae\x0f\xbb\xd5\xa4\x80\x87\xe1\xdb\xc1\xce\x1b\x44\x59\xb7\xec\x22\xfd\xef\xe4\xdf\x43\x5c\x66\xca\x55\x0d\xa9\xfa\x1a\xf3\x79\x65\x20\x9b\x9b\xb2\xe7\x4d\x05\xf8\x60\x0d\x57\x29\xfd\xfb\x7e\xe5\x3c\xfa\x21\xe7\x26\xe5\xdc\xdd\xdf\xdd\xf9\x79\xef\x87\xa6\x9b\xd6\xf4\xe8\xc7\xb2\xdf\xa8\xa6\x07\x7b\xc7\x07\xc7\x87\x3f\xef\x1d\xff\xfd\xaf\xa2\xeb\x26\x07\xb4\x6e\x39\xf7\x62\x42\x8c\xa8\x19\x94\x13\x87\x07\x6a\x75\xbb\x5d\x19\xd3\x33\xb7\xfc\x27\x87\x92\xe7\x7f\xbe\xfc\xcd\xab\x83\xbf\x7b\x9d\xa3\x6b\x5f\x3d\x7f\xbd\x62\xdc\x6b\xd6\xf5\x75\x5c\xe2\x9f\x71\xd4\x5b\x13\xfd\x09\x7f\xe3\x81\xdf\x3a\x2b\x0d\xf1\xa5\xad\x98\x40\xa9\xea\x80\x3e\x7f\x68\x6e\x30\x54\xd8\xa2\xf9\xd3\xf8\x11\x2a\xe1\x0f\x6b\xdf\xd8\xff\x99\xf9\x13\x13\xd6\x3e\x7c\xfd\x25\xb4\x22\xd0\xa3\xc3\x5e\x0a\x6a\x5b\xc8\x72\xc6\x54\x11\xb7\x47\xc1\xb0\x7f\xbc\x43\x48\x95\xe0\x87\x7e\x01\x76\xff\x78\x87\x39\x21\x99\xd6\xd2\x32\xea\x01\x72\xbd\x04\x79\x1a\x6d\x8a\xf8\xda\xa4\xe3\x32\x93\x26\x44\xff\x9d\x29\x2f\xb8\xa3\x75\x1f\x8f\x3e\xb2\x77\xa3\x31\xbb\x3c\x19\xbd\x63\x57\x27\xa3\xcb\xf1\xfb\x5e\x72\x5b\x07\x86\xdd\xcc\xd8\x84\x9b\x42\x01\xe3\xdf\x9b\x8b\x76\x0a\x75\xf5\xfb\x15\x1b\xbd\x3b\x3f\xfd\xd0\x4b\x22\xa1\xac\xf9\xc6\xcf\xe8\xe7\xa3\xab\x5f\x4e\xde\x75\x27\x99\x7b\xbb\xbb\x07\x3b\x87\x3b\x7b\x47\x9b\x3b\x64\xbe\x44\xb4\x40\x1b\xf8\xe6\xe6\xf7\xab\xb3\xe0\x57\x9f\xf9\xdd\x57\x9e\xf9\x34\x41\x83\xe6\x55\x17\x22\xf8\x81\xf5\x05\x78\x69\xaa\x41\x69\xfd\xa0\x11\x67\x20\xc3\xa0\x90\x65\x09\x1e\xd6\x93\xaf\x0e\x3f\x79\xa9\x29\x7d\xfd\xbd\xeb\xe5\xfc\xe5\x15\x03\xe8\x3f\x2e\x2e\xae\x7b\xa9\xe2\xe1\xc6\xda\xad\xdb\x57\xc6\xef\x2f\xfb\x0a\x23\x26\x7e\x0b\x85\x39\xbf\x78\xf7\x9f\xb3\x93\x5e\xc2\xb4\xcf\x69\x4c\xdb\xa2\xc6\x5f\x4f\x48\x23\x63\x86\x2a\x57\xb9\x2d\x93\xf5\xe3\x68\x3c\xee\xe7\x6e\x5c\x88\xad\x73\xb6\x8f\xd7\x97\xa3\x71\x3f\x67\xbb\x15\xf8\xfb\xa2\xf6\xb3\xd3\x0a\x88\x1f\x2a\x2e\xde\x74\x32\x5f\x9a\x7f\xcb\x4f\x42\xaf\x38\x4f\x97\xa3\x5f\x4f\x2f\x7a\x4d\x93\xb4\x8e\xf8\x51\x8a\x03\xaf\xb7\x4d\xab\xeb\xd3\xf3\x7e\x1e\x1d\x3a\x7e\xb5\x14\xf2\xbf\xc5\x5e\x3c\xd8\x6f\x9b\x9c\xd7\xbf\xb3\xf1\xc5\x87\x7f\x9e\xfe\xab\x97\xa8\xd3\x09\x37\x55\xed\xb6\x4d\x9d\x0f\xa7\x3d\xc3\x67\x05\x91\x69\xd0\xce\x2a\x29\xf0\x0f\x43\xa8\x7f\x39\x21\xac\xd5\xd8\x2e\x3d\xcf\x2e\xfa\x79\x59\x98\x05\x65\xab\xec\xbf\xf0\xf1\xd3\xe7\x9f\xfe\x1f\x00\x00\xff\xff\x98\xb9\xd3\xc0\x50\x48\x00\x00")

func allowPerfSyscallsJsonBytes() ([]byte, error) {
	return bindataRead(
		_allowPerfSyscallsJson,
		"allow-perf-syscalls.json",
	)
}

func allowPerfSyscallsJson() (*asset, error) {
	bytes, err := allowPerfSyscallsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "allow-perf-syscalls.json", size: 18512, mode: os.FileMode(0644), modTime: time.Unix(1617322623, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x41, 0xc5, 0xcd, 0x56, 0xf7, 0x46, 0x70, 0xaa, 0x40, 0x77, 0xc7, 0x96, 0xd5, 0xd8, 0xe9, 0x6d, 0x78, 0x8b, 0x5, 0x7f, 0x29, 0xb0, 0xc2, 0x47, 0xe0, 0x5c, 0x4f, 0x3d, 0xe5, 0xb5, 0xef, 0x51}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"default.json":             defaultJson,
	"fuse-container.json":      fuseContainerJson,
	"allow-perf-syscalls.json": allowPerfSyscallsJson,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"allow-perf-syscalls.json": &bintree{allowPerfSyscallsJson, map[string]*bintree{}},
	"default.json":             &bintree{defaultJson, map[string]*bintree{}},
	"fuse-container.json":      &bintree{fuseContainerJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}

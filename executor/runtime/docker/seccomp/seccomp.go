// Code generated by go-bindata. DO NOT EDIT.
// sources:
// default.json (15.555kB)
// fuse-container.json (15.688kB)
// allow-perf-syscalls.json (12.686kB)

package seccomp

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _defaultJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x9b\xdd\x53\xdc\x38\x12\xc0\xdf\xf3\x57\x4c\xcd\x73\xea\x0a\x26\x1c\x4b\xf6\x6d\x6e\xc2\xdd\x52\x0b\x21\x07\xb9\xda\xdd\xba\x4a\xa9\x84\xdd\xf6\xe8\xd0\x87\xa3\x96\x07\xa6\x52\xf9\xdf\xaf\x64\x33\x1f\x6a\xb5\x93\x2c\x0c\xd9\x79\xc8\x43\x08\xfe\x75\xeb\xa3\x5b\x6a\x49\x2d\x9b\x4f\x2f\x46\xa3\x71\x09\x95\x6c\x75\x98\x16\x41\x39\x3b\xfe\x79\x34\xbe\x9e\x5d\xbc\x13\xd3\xd9\x7b\x71\x7a\x75\xf5\xf6\x72\xfc\x32\x2a\x49\x5f\xcc\x2f\x64\x33\xfe\x79\xf4\xdf\x17\xa3\xd1\x68\xf4\xa9\xfb\xf9\x20\x50\x01\x8a\xd0\x7a\xd8\x14\xbe\x9a\xfd\x22\x7e\x3f\x39\x16\xc7\x47\x5d\xf1\x4e\x13\xdb\x9b\xe9\x96\x32\xae\xeb\xea\xa4\x49\xb9\x75\xa1\x54\xf0\x6a\x32\x7e\xe0\x1f\xba\xff\x3f\xbf\xfc\xd6\xbe\x4c\xe3\xcf\xc7\x74\x66\x7a\x75\xf1\xd8\x36\x2f\xce\xde\x5d\x3f\xa6\xc9\x58\x8e\x77\x40\x5f\xe3\xdb\xc7\xbb\x61\x53\xc1\xce\x7b\xf5\x94\x2e\x9d\x9e\x3f\xd6\x4f\xa7\xe7\xc3\x7d\x8a\xb5\x3e\xd1\x57\xab\x2a\x9e\xa5\x6f\x8f\xed\xd8\xf5\xab\xd7\x07\xbf\xff\xf9\x2e\xc5\x62\xa4\xc9\x17\xa3\xd1\x87\x2e\xba\x71\x89\x85\xd4\x1a\xf3\xf0\xb6\xd2\xd0\x2a\x65\x51\x40\x13\xb6\x6d\xeb\xc9\x11\x45\x88\x09\x29\xff\x17\x94\x81\xfb\x84\x69\xe9\xcd\x36\xb8\x51\xb6\x4c\x9e\xfd\xed\xf6\x63\x21\x9b\x1a\x02\x21\x48\xc8\xbc\x54\x3e\x05\xc6\x95\x29\x70\x77\x36\x03\x5b\xc3\x1c\x91\x76\xc5\xad\x78\xe8\xf3\xa0\xe0\xf8\x28\x17\xd5\x10\xe2\x28\x0c\x70\xf1\x85\x62\x7c\x53\x0f\x02\xae\x8c\x95\xd6\xa1\x06\x68\xbe\x20\xe2\x1b\x44\xda\x10\x82\xf0\xd2\xd6\x29\x76\xd6\x42\x91\x3a\xd7\x35\x4b\x51\x29\xcd\x69\x7b\x90\x89\x6e\xd9\x36\xe4\x71\x42\x9e\x5f\x6d\x3f\x43\xe3\xb4\x16\x5d\x2d\x30\xc4\x0f\x19\x41\xd0\x2c\x14\x4e\x97\xb9\xa0\xb9\x93\x2a\x0c\xe0\x49\xce\x79\xed\x48\xb3\xea\x17\x60\x43\xc5\xa1\xb4\xda\x7b\x28\x16\x90\x93\xd4\x73\x70\xaf\xb2\x67\x51\x7b\x97\x3a\xb4\xea\x63\x2c\x2d\xba\x86\x93\x94\x96\x0b\x85\x64\x1a\xac\xa1\xa0\x5c\x6b\x57\x90\x51\xa8\xa4\x75\x41\x55\x4b\x61\x64\x1a\x92\x55\x16\x6f\x55\x16\x70\x3d\x21\x1d\xcd\xa2\xb0\x62\xc2\xb0\x67\xb4\xa4\x4d\xc7\xbc\x03\xc4\x86\x52\x06\x89\x4b\x5b\x24\xb0\x86\x70\x2f\x43\x48\x7b\xab\x15\x72\xd4\x15\xa9\x99\x8e\x98\xed\xc1\xb8\x05\xe4\x05\x91\x6b\x03\x03\x31\x21\x02\xd2\xe3\x88\x58\x58\x21\x83\xa8\x1e\x35\x35\xf8\xd6\x66\x63\xb8\x82\xa4\x70\x1b\xd2\x55\xb9\x03\xcc\xba\x51\xb5\x91\x91\x09\x57\x43\x28\x9a\x96\x92\xbb\x92\x90\x12\x6c\x40\x8e\xa5\x4d\xd4\x10\xa0\x56\xb4\x70\x44\xe9\xbc\x88\xb0\xcd\xf5\x5a\x46\x2f\xaf\x8e\xab\xad\x8b\x2e\xda\xc1\x1e\x66\xba\x2a\xba\xc1\x13\xd8\x00\xf8\xb8\x59\x52\x9c\x37\xdf\xd4\xbe\xa1\x28\x57\x62\x90\x57\xce\xab\xb0\x24\xd8\x4b\x5b\x3a\x43\x21\x60\xde\x70\x0f\x33\x73\x3c\x60\xee\xca\x1e\xe6\xba\x5a\x19\x45\xc7\x5f\x78\x77\xd3\x62\x10\x31\x92\xa8\x7e\x8b\xb2\xa6\x3e\xc1\xac\x35\x74\xc5\x2d\xe3\xbc\x88\x5d\x93\x35\x17\xe6\x1e\x64\x29\xa4\x07\x49\x44\x21\xab\x39\x0e\x95\xab\x4a\x49\xbd\x96\x5b\xcc\x99\x9b\x45\xb2\x7a\x58\x05\x65\x59\x8a\x3b\x19\x8a\x39\x27\x54\x36\x75\xd1\x36\x3f\xe4\x04\xde\x30\x95\x39\x51\x48\x5b\x80\x4e\x21\xd9\xee\x94\x13\x25\x60\xf0\x6e\x49\x68\x8c\x86\x05\x8d\x39\xe5\x44\xf3\x75\x01\x13\xf9\xca\xc5\xc9\x27\xc8\xd9\xeb\x81\x22\xa5\x91\xa4\x5b\x55\x64\xed\x0d\x99\x39\xca\x89\xd6\x2b\x5b\x0b\xb0\x21\x0d\xa7\xb5\xc4\x43\xad\x70\x48\x98\xb7\xd2\x24\x6b\xe0\xad\xd2\x89\xaf\x74\xb6\xe3\x68\x66\xc7\xd1\xdc\xb0\x6b\x65\x6f\xe9\x73\xba\x0c\xc6\xb9\x0f\x96\x92\xbc\x22\x96\x0a\xad\x11\x20\x6d\x61\x60\x7f\xc9\x15\xb9\x0d\x47\xd3\x0d\x47\xe7\x1b\x8e\xe9\xb7\xff\x04\x81\xb9\x91\xde\xab\xd4\xe1\x06\x4c\x55\x32\x07\x33\xa3\x6c\xe1\x7c\x8a\x6e\xc9\x59\xa0\x03\x69\x57\xcc\xad\x4d\x4f\x07\x1d\x20\x3a\x74\xfb\xed\xc0\x24\x23\x32\x1d\x61\x63\x64\x43\x9f\xd3\x42\x8d\x77\x81\x1c\x69\xcd\xc7\x38\xaf\x11\x02\x75\xa2\xf9\x28\xfa\xf8\x24\xd0\x35\xe9\x40\x9b\x8f\x5d\xc4\x94\x1e\x0a\x50\xe9\xe1\x8e\x88\x98\xc8\x5a\x69\x20\xa4\x89\xcf\x36\xe7\x8b\xb5\x96\xce\x4a\xe3\x81\x3a\x00\x6b\xb2\x60\x18\xac\x49\x14\x1b\xac\x7d\xb1\x20\x04\x49\x6f\xe8\xf9\xc2\xb4\x36\x1b\xa2\x1e\xd1\x21\x69\x2d\xe9\x13\x9b\xb4\x58\xb8\x7b\x38\x00\x25\x71\x61\xe1\x0e\x41\x93\x01\xa3\xfe\x8f\xcf\x32\xd3\x20\x27\xe0\x46\xb6\xe9\x5c\x6f\x54\x59\x95\xd9\x58\xf6\xb4\x73\x3a\xaa\xda\x4a\x9d\x0a\x1b\xa0\xcf\x69\x23\x2e\x35\xbe\x61\x01\x33\x9c\x8d\x27\xc3\xd4\xc4\x1d\x8e\xea\x80\x2c\x17\x39\x49\x7b\xd0\x6f\xd0\xa4\x64\xef\xc3\x63\x8e\x71\x9d\xb9\xf3\x8a\x9e\x11\x7b\xb6\x60\x50\xd2\x7c\xec\x10\x7d\x96\x73\x06\xd2\xa9\xbb\x62\xe9\x38\x66\x16\x7b\x28\xb2\xe7\xca\xa7\xa7\x9f\xc8\x8c\xc1\x9a\x63\x8c\xb5\x9d\x88\x6a\x1b\xd9\xf4\x59\x6e\x23\xeb\x34\x97\x1f\x58\x96\x3d\xd0\xe3\x4b\x4f\xa8\x3d\x3d\x23\x3e\xc3\x20\x7d\x10\x0f\x77\x30\x89\xc8\x90\xe5\xd4\x23\x7c\x4c\x9e\x43\x9c\xa6\xb2\xbf\xb9\xcd\x78\x03\xb6\x54\xb6\x66\x04\xde\x15\x46\xe2\x6d\x2e\xf9\xd8\x42\x0b\xca\x56\x2e\x17\x79\x08\xad\x67\x5a\xc1\x16\x1b\xb2\x78\xf5\x82\x6e\xfd\xa2\x19\x34\x11\x71\x03\x12\x44\xa8\x87\xba\x82\xc5\x1c\xca\xb8\x5e\xcb\xaa\x8a\xc7\xa9\x25\x2f\x24\xa3\xb3\x16\x34\xd2\x4b\xc3\x4a\xc4\xea\x74\x2d\x8c\xbc\xff\x9a\x86\xb2\xac\x46\xf7\x4b\xab\x81\x69\xdb\xfb\xae\x0a\x15\x4f\x3a\x8b\x74\x55\x61\x15\x18\xbf\xf4\x7a\xf8\x25\xd3\x99\x4d\x6c\x2d\x18\x30\x1d\xbf\xd8\xed\xa5\x82\xf4\x9a\x03\xa1\x28\x9c\x69\x52\x44\x17\x68\x04\x43\x96\x33\x04\x43\x76\x1d\x04\xe3\x48\x35\xa6\x9b\x15\x43\x94\xf3\x08\x99\x76\xf1\x39\x46\x2d\xc7\xf2\x92\x74\x8d\xe8\x58\x8e\x42\x3a\xff\x20\x54\x34\xb3\x5a\xb1\xf4\x1c\xd9\xd1\x96\xd1\xcc\xf2\x0c\xcc\x72\x54\x64\x72\x54\xe4\x72\x54\xe4\x73\x54\xe4\x72\x54\xcc\x93\x51\xe4\x93\x4a\x8c\xe9\x5f\xae\xea\xf3\x34\x1c\xb9\x4c\x13\xf9\x4c\x13\xb9\x4c\x13\xf9\x4c\xb3\xc3\x9c\x2a\xab\x99\xe5\xa4\x38\x9c\x93\x62\x96\x7e\x22\x9b\x67\xe2\x70\x9e\xd9\x89\x54\x19\x73\x40\x4f\xee\xb8\x31\x4b\x2c\x91\x49\x2c\xb9\x13\x3b\xce\x4d\xba\x57\xe0\x3c\x0b\xa2\xb9\x29\xa9\x0a\x8d\xaa\x79\x1b\x4a\x92\xe4\xc4\x0d\x42\x07\x0c\x32\x3d\xae\xf5\xc7\x9b\xf4\xc6\x72\xc5\x8e\x08\xe4\xf6\x0b\x76\x47\x88\x8e\x24\x3d\xea\x08\xdd\xd8\x7a\xda\xc8\x74\x77\xc3\x46\xab\x22\x8d\x5e\x72\x20\xcc\xb3\x98\xfc\x82\x8c\xbb\x1f\x8b\x2c\x5d\xd5\x97\x86\x1e\x41\x1e\x10\x69\x90\x9c\x7b\xe3\xf3\xc0\xfd\x77\x14\x91\x9e\x2c\x91\xee\x5f\x01\x92\x32\xa1\xa6\x49\x2a\x7d\x07\xd0\x85\x31\x93\x7c\xf5\xbc\x04\x0d\x1c\xaf\x21\xb8\x05\x78\xdf\x5a\x56\xc6\x37\xc2\xbe\x68\xe8\x45\x38\x54\x06\x07\xcb\xb0\x29\xe3\x4a\x32\xd4\x87\x8d\x88\xaf\x71\xa8\x1f\x1b\x51\x5e\x2e\x19\x92\x90\xf9\x9b\xb9\x27\xe5\xaf\x49\x5b\xf6\xfa\xab\xa5\x71\xd1\xd2\x83\x60\x9e\xa7\xf5\x24\x9d\x68\x2d\xb5\xab\x03\x16\x19\xad\x08\x99\xdd\xb0\xcd\x8c\x5d\xd0\x4b\xeb\x85\xc9\x43\x2c\x9e\xc2\x8e\x28\x48\xd7\xb0\x48\xc8\x75\x64\x77\xf6\xcf\xc0\x62\xfd\x7e\x71\x25\x19\xcb\xfc\xab\x82\xe9\xf9\xf9\xe5\x6f\xe3\x8d\x86\xaf\xbb\x17\x8c\x9b\x32\x85\x33\x06\x6c\x88\x85\x36\x6a\xca\x16\xba\x2d\xbb\x77\x91\x9f\x3e\xaf\x29\xdc\x6f\xd1\x0e\xd2\xf7\xa8\xcc\x0b\xcc\xb8\x9c\x01\xa2\x58\x18\xc1\xe4\x54\x6b\x19\x93\xf2\x04\x2f\x0b\x78\x82\x91\xb6\xd5\xfa\xdb\xcd\xdc\x34\x6c\x94\xfd\x15\xbc\x05\x1d\x95\x8f\xfe\x76\xb2\xea\xc2\x53\x1d\x01\x1e\x9d\x95\x3a\xee\xff\x4f\x18\xb9\x75\x85\x9b\x1e\x77\x96\x94\x70\x3f\xfe\x79\x74\xf0\x72\x9b\x2e\xa4\x6e\x21\xa3\xae\x59\xb7\x13\xff\x9d\xfe\x7b\xbc\x96\x7e\xce\x3a\xf6\xec\xd3\xe3\xaf\xf3\xca\xc9\x0f\xaf\x30\x5e\x39\x7c\x75\x78\xf0\xd3\xe4\x87\x6b\x06\x5c\x73\xf2\x23\x96\x38\xd7\x1c\x4d\x5e\x1f\xbd\x3e\xfe\x69\xf2\xfa\xef\xfb\xeb\x1e\x72\x9c\x9c\x7c\xa7\xfd\x73\xd3\x01\xe9\x8b\x39\xe9\x54\x77\x4d\x59\x1c\x1f\x69\xd8\x78\xe6\xc3\x6e\xf6\x1b\xe9\x8d\x18\xfa\xea\x20\xca\xbe\x72\xba\x4e\x3c\xb5\x25\xbb\xf1\x20\x6f\x1b\xa7\x2c\xf9\x32\xa8\x98\x43\xa5\x5b\x9c\x67\xc9\x9b\xc6\x3d\x71\x74\xfa\xf5\x53\x0f\x36\x1f\x86\xed\xd0\xef\xc5\x5c\xf4\x77\xcc\x7b\x62\xb7\x49\x2f\xb7\x47\xa3\xf1\xfd\xe6\x4b\xbd\x9d\xd9\x6d\x5c\xa9\xaa\xa5\xd0\x65\xd8\x6f\xbb\x53\x70\x72\xbc\x73\x47\xe0\xab\xd7\x07\xa2\x29\x94\x30\x46\x39\x41\x6f\xe9\x53\x69\x76\xb4\xef\xc4\xbe\xb5\x31\xbf\x10\xca\x62\xf0\x7b\xe2\xcd\xd8\xb1\xd4\x77\x91\xdc\xef\xdc\x7b\xae\x01\x2b\x6e\x96\x62\x2e\x6d\xa9\x41\xc8\xef\x3f\x9b\x0a\xd9\x64\xd6\xcf\xa6\xef\xc4\x9b\xe9\x4c\x5c\x9d\x4e\xdf\x88\xeb\xd3\xe9\xd5\xec\x97\x67\x08\xa0\xd6\x92\x74\x97\x27\xdf\x7f\xe7\x1a\x72\xc9\xf5\x1f\xd7\x62\xfa\xe6\xe2\xec\xed\xce\x9d\x51\x68\x67\x9f\x92\xfc\x3d\xea\x14\x33\x39\x3c\x3c\x3a\x38\x3e\x98\x9c\x7c\x31\x35\xb8\x98\x5e\xff\x7a\xfa\xe6\x79\x0e\x33\x8f\x73\xf9\xcb\xdd\x05\xef\x9e\x8c\xcf\xe1\x77\x1c\x9f\xe8\x8a\x51\xf7\xc6\x06\x02\xf8\x91\xf3\x25\x78\x65\xeb\x51\xe5\xfc\xa8\x33\x73\xa4\x70\x54\xaa\xaa\x02\x0f\x5b\xe1\xf8\x3d\x57\xcf\xa7\x45\xe2\xb7\x8e\xa9\x87\x1b\xe7\xf6\x67\xbd\x8d\x26\xfd\xe3\xf2\xf2\xfd\xee\xd7\x96\xb9\xdf\x37\x3b\x67\xbf\x5c\x3d\x87\xa5\xfd\x95\xb5\x30\xae\x6c\xd3\x37\x75\xca\xaa\xc0\xe0\x6a\x9b\xef\x93\x7f\x2e\x2e\xdf\xfc\xe7\xfc\x74\xf7\x67\xf5\xa2\xd8\xaf\x79\xf0\x6e\x3a\x9b\xed\x7e\x1a\xdc\x16\xe9\x5b\xe4\xfe\xc3\x9b\x1a\xc8\x37\xf4\xab\xeb\x58\xe6\x63\xb5\xbf\xee\x16\xf7\x19\x7c\xfc\xfe\x6a\x3a\xdb\xfd\x5c\x52\xae\x21\x5f\x8b\x36\xe0\xcd\x5e\x59\x7e\x35\xfd\xed\xec\x72\xf7\xf9\xce\xc0\x87\xbf\xc8\xff\x89\xcd\xea\xb5\xd2\x3e\x39\xe6\xfd\xd9\xc5\xee\x27\xc4\x62\x2e\x6d\xdd\x36\xfb\x65\xe8\xfb\x3f\xc4\xec\xf2\xed\x3f\xcf\xfe\xb5\x73\x73\x6b\x08\xc2\x80\x69\x9c\x56\x45\xfa\x15\x27\xfd\x3b\x33\x4c\x34\xf7\xc9\x3d\x6f\xcf\x9e\x61\x61\xc0\x25\x6a\x57\xef\x93\x9d\xe7\x97\x7f\x76\xf8\x5f\x44\xbd\xcf\x2f\xfe\x1f\x00\x00\xff\xff\xd2\x21\xc6\x06\xc3\x3c\x00\x00")

func defaultJsonBytes() ([]byte, error) {
	return bindataRead(
		_defaultJson,
		"default.json",
	)
}

func defaultJson() (*asset, error) {
	bytes, err := defaultJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "default.json", size: 15555, mode: os.FileMode(0644), modTime: time.Unix(1617050984, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd7, 0x57, 0xf0, 0xc5, 0x3c, 0x23, 0x51, 0x1a, 0x9b, 0xda, 0xef, 0xfe, 0x97, 0xc2, 0x7b, 0x7e, 0x31, 0x41, 0x95, 0xc3, 0x4f, 0xb4, 0x48, 0x31, 0x17, 0x74, 0xb1, 0x88, 0xa7, 0x16, 0x3c, 0xe2}}
	return a, nil
}

var _fuseContainerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x9b\x4b\x6f\xdc\x38\x12\x80\xef\xf9\x15\x8d\x3e\x07\x0b\xbb\xe3\xf5\x38\x73\xeb\xed\x78\x77\x8c\xb1\xe3\xac\x9d\xc5\xcc\x60\x31\x20\x68\xa9\xa4\xe6\x9a\x0f\x85\x45\xb5\xdd\x08\xf2\xdf\x17\x94\xdc\x0f\x16\x4b\x79\xd8\xed\x4c\x1f\x72\x88\x63\x7d\x55\x24\xab\x8a\xcf\xa2\xe4\x8f\x2f\x46\xa3\x71\x09\x95\x6c\x75\x98\x16\x41\x39\x3b\xfe\x79\x34\xbe\x9e\x5d\xbc\x13\xd3\xd9\x7b\x71\x7a\x75\xf5\xf6\x72\xfc\x32\x2a\x49\x5f\xcc\x2f\x64\x33\xfe\x79\xf4\xdf\x17\xa3\xd1\x68\xf4\xb1\xfb\xf9\x20\x50\x01\x8a\xd0\x7a\xd8\x14\xbe\x9a\xfd\x22\x7e\x3f\x39\x16\xc7\x47\x5d\xf1\x4e\x13\xdb\x9b\xe9\x96\x32\xae\xeb\xea\xa4\x49\xb9\x75\xa1\x54\xf0\x6a\x32\x7e\xe0\x7f\x76\xff\x7f\x7a\xf9\xb5\xb6\x4c\xe3\xcf\xc7\x18\x33\xbd\xba\x78\x6c\x9b\x17\x67\xef\xae\x1f\xd3\x64\x2c\xc7\x07\xa0\xaf\xf1\xed\xe3\xc3\xb0\xa9\x60\xe7\x56\x3d\xc5\xa4\xd3\xf3\xc7\xc6\xe9\xf4\x7c\xd8\xa6\x58\xeb\x13\x63\xb5\xaa\xe2\x59\x6c\x7b\xac\x61\xd7\xaf\x5e\x1f\xfc\xfe\xed\x26\xc5\x62\xa4\xc9\x17\xa3\xd1\x9f\xdd\xec\xc6\x25\x16\x52\x6b\xcc\xa7\xb7\x95\x86\x56\x29\x8b\x02\x9a\xb0\xed\x5b\x4f\x8e\x28\x42\x4c\x48\xf9\xbf\xa0\x0c\xdc\x27\x4c\x4b\x6f\xb6\xc1\x8d\xb2\x65\xf2\xec\x6f\xb7\x1f\x0b\xd9\xd4\x10\x08\x41\x42\xe6\xa5\xf2\x29\x30\xae\x4c\x81\xbb\xb3\x19\xd8\xea\xe6\x88\xb4\x2b\x6e\xc5\x83\xcd\x83\x82\xe3\xa3\x5c\x54\x43\x88\xbd\x30\xc0\xc5\x67\x8a\xf1\x4d\x3d\x08\xb8\x32\x56\x5a\x87\x1a\xa0\xf9\x8c\x88\x6f\x10\x69\x43\x08\xc2\x4b\x5b\xa7\xd8\x59\x0b\x45\x1a\x5c\xd7\x2c\x45\xa5\x34\xa7\xed\x41\x26\xba\x65\xdb\x90\xc7\x09\x79\x7e\xb5\xfd\x0c\x8d\xd3\x5a\x74\xb5\xc0\x10\x3f\x64\x04\x41\xb3\x50\x38\x5d\xe6\x82\xe6\x4e\xaa\x30\x80\x27\x39\xe7\xb5\x23\xcd\xaa\x5f\x80\x0d\x15\x87\xd2\x6a\xef\xa1\x58\x40\x4e\xd2\xc8\xc1\xbd\xca\x9e\x45\xed\x5d\x1a\xd0\xaa\x9f\x63\x69\xd1\x35\x9c\xa4\xb4\x5c\x28\x24\xc3\x60\x0d\x05\xe5\x5a\xbb\x82\xf4\x42\x25\xad\x0b\xaa\x5a\x0a\x23\xd3\x29\x59\x65\xf3\xad\xca\x26\x5c\x4f\x88\xa1\xd9\x2c\xac\x98\x69\xd8\x33\x5a\xd2\xa6\x7d\xde\x01\xe2\x43\x29\x83\xc4\xa5\x2d\x12\x58\x43\xb8\x97\x21\xa4\xd6\x6a\x85\x1c\x75\x45\xea\xa6\x23\x6e\x7b\x30\x6e\x01\x79\x41\xe4\xda\xc0\x40\x5c\x88\x80\x58\x1c\x11\x0b\x2b\x64\x10\xd5\xa3\xae\x06\xdf\xda\xac\x0f\x57\x90\x14\x6e\x43\xba\x2a\x77\x80\x59\x37\xaa\x36\x32\x32\xe0\x6a\x08\x45\xd3\x52\x72\x57\x12\x52\x82\x0d\xc8\xb1\xb4\x89\x1a\x02\xd4\x8a\x16\x8e\x28\x1d\x17\x11\xb6\xb9\x5e\xcb\xe8\xe5\xd5\x71\xb5\x75\xb3\x8b\x1a\xd8\xc3\x4c\x57\xc5\x30\x78\x02\x1b\x00\x1f\x37\x4b\x8a\xf3\xe6\x9b\xda\x37\x14\xe5\x4a\x0c\xf2\xca\x79\x15\x96\x04\x7b\x69\x4b\x67\x28\x04\xcc\x1b\xee\x61\xe6\x8e\x07\xcc\x43\xd9\xc3\x5c\x57\x2b\xa3\x68\xff\x0b\xef\x6e\x5a\x0c\x22\xce\x24\xaa\xdf\xa2\xac\x69\x4c\x30\x6b\x0d\x5d\x71\xcb\x04\x2f\x62\xd7\x64\xcd\x85\xb9\x07\x59\x0a\xe9\x41\x12\x51\xc8\x6a\x8e\x5d\xe5\xaa\x52\xd2\xa8\xe5\x1e\x73\xee\x66\x33\x59\x3d\xac\x82\xb2\x2c\xc5\x9d\x0c\xc5\x9c\x13\x2a\x9b\x86\x68\x9b\x1f\x72\x02\x6f\x98\xca\x9c\x28\xa4\x2d\x40\xa7\x90\x6c\x77\xca\x89\x12\x30\x78\xb7\x24\x34\xce\x86\x05\x9d\x73\xca\x89\xe6\xcb\x02\x66\xe6\x2b\x17\x07\x9f\x20\x67\xaf\x07\x8a\x94\x46\x92\x6e\x55\x91\xb5\x37\x64\xe4\x28\x27\x5a\xaf\x6c\x2d\xc0\x86\x74\x3a\xad\x25\x1e\x6a\x85\x43\xc2\xbc\x95\x26\x59\x03\x6f\x95\x4e\x62\xa5\xb3\x1d\x47\x33\x3b\x8e\xe6\xba\x5d\x2b\x7b\x4b\x9f\xd3\x65\x30\x8e\x7d\xb0\x94\xe4\x15\xb1\x54\x68\x8d\x00\x69\x0b\x03\xfb\x4b\xae\xc8\x6d\x38\x9a\x6e\x38\x3a\xdf\x70\x4c\xbf\xfd\x27\x08\xcc\x8d\xf4\x5e\xa5\x01\x37\x60\xaa\x92\x39\x98\x19\x65\x0b\xe7\x53\x74\x4b\xce\x02\x1d\x48\x4d\x31\xb7\x36\x3d\x1d\x74\x80\xe8\xd0\xed\xb7\x03\x93\x8c\xc8\xb4\x87\x8d\x91\x0d\x7d\x4e\x0b\x35\xde\x05\x72\xa4\x35\x1f\xe2\xb8\x46\x08\x34\x88\xe6\x83\xe8\xe7\x27\x81\xae\x49\x3b\xda\x7c\xe8\x66\x4c\xe9\xa1\x00\x95\x1e\xee\x88\x88\x99\x59\x2b\x0d\x84\x34\xf1\xd9\xe6\x7c\xb1\xd6\xd2\x51\x69\x3c\xd0\x00\x60\x4d\x16\x0c\x83\x35\x99\xc5\x06\x6b\x5f\x2c\x08\x41\x62\x0d\x3d\x5f\x98\xd6\x66\x5d\xd4\x23\xda\x25\xad\x25\x36\xb1\x49\x8b\x85\xbb\x87\x03\x50\x32\x2f\x2c\xdc\x21\x68\xd2\x61\x34\xfe\xf1\x59\x66\x1a\xe4\x04\xdc\xc8\x36\x1d\xeb\x8d\x2a\xab\x32\xeb\xcb\x9e\x76\x41\x47\x55\x5b\xa9\x53\x61\x03\xf4\x39\x6d\xc4\xa5\xce\x37\x2c\x60\xba\xb3\xf1\xa4\x9b\x9a\xb8\xc3\x51\x1d\x90\xe5\x22\x27\xa9\x05\xfd\x06\x4d\x4a\xf6\x31\x3c\xe6\x18\x67\xcc\x9d\x57\xf4\x8c\xd8\xb3\x05\x83\x92\xe6\xa3\x41\xf4\x59\xce\x19\x48\x87\xee\x8a\xa5\xfd\x98\x79\xec\xa1\xc8\x9e\x2b\x9f\x9e\x7e\x22\x33\x06\x6b\x8e\x31\xde\x76\x22\xaa\x6d\x64\xd3\x67\xb9\x8d\xac\xd3\x5c\x7e\x60\x59\xf6\x40\x8f\x2f\x3d\xa1\xfe\xf4\x8c\xc4\x0c\x83\xf4\x41\x3c\xdc\xc1\x24\x22\x43\x96\x53\x8f\xf0\x21\x79\x0e\x71\x98\xca\xfe\xe6\x36\xe3\x0d\xd8\x52\xd9\x9a\x11\x78\x57\x18\x89\xb7\xb9\xe4\x43\x0b\x2d\x28\x5b\xb9\x5c\xe4\x21\xb4\x9e\x69\x05\x5b\x6c\xc8\xe2\xd5\x0b\xba\xf5\x8b\x66\xd0\x44\xc4\x75\x48\x10\xa1\x1e\x32\x05\x8b\x39\x94\x71\xbd\x96\x55\x15\x8f\x53\x4b\x5e\x48\x7a\x67\x2d\x68\xa4\x97\x86\x95\x88\xd5\xe9\x5a\x18\x79\xff\x25\x0d\x65\x59\x8d\xee\x97\x56\x03\xd3\xb6\xf7\x5d\x15\x2a\x9e\x74\x16\xe9\xaa\xc2\x2a\x30\x71\xe9\xf5\xf0\x73\xae\x33\x9b\xd8\x5a\x30\xe0\x3a\x7e\xd6\xec\xa5\x82\xf4\x9a\x03\xa1\x28\x9c\x69\x52\x44\x17\x68\x04\x43\x96\x33\x04\x43\x76\x1d\x04\xe3\x48\x35\xa6\x1b\x15\x43\x94\x8b\x08\x19\x76\xf1\x39\xce\x5a\x8e\xe5\x25\xe9\x1a\xd1\xb1\x1c\x85\x74\xfc\x41\xa8\x68\x66\xb5\x62\xe9\x39\xb2\xa3\x2d\xa3\x99\xe5\x19\x98\xe5\xa8\xc8\xe4\xa8\xc8\xe5\xa8\xc8\xe7\xa8\xc8\xe5\xa8\x98\x27\xa3\xc8\x27\x95\x18\xd3\xbf\x5c\xd5\xe7\x69\x38\x72\x99\x26\xf2\x99\x26\x72\x99\x26\xf2\x99\x66\x87\x39\x55\x56\x33\xcb\x49\x71\x38\x27\xc5\x2c\xfd\x44\x36\xcf\xc4\xe1\x3c\xb3\x13\xa9\x32\xe6\x80\x9e\xdc\x71\x63\x96\x58\x22\x93\x58\x72\x27\x76\x9c\x9b\x74\xaf\xc0\x79\x36\x89\xe6\xa6\xa4\x2a\x74\x56\xcd\xdb\x50\x92\x24\x27\x6e\x10\x3a\x60\x90\xe9\x71\xad\x3f\xde\xa4\x37\x96\x2b\x76\x44\x20\xb7\x5f\xb0\x3b\x42\x0c\x24\xb1\xa8\x23\x74\x63\xeb\x69\x23\xd3\xdd\x0d\x1b\xad\x8a\x74\xf6\x92\x03\x61\x9e\xc5\xe4\x17\x64\xdc\xfd\x58\x64\xe9\xaa\xbe\x34\xf4\x08\xf2\x80\x48\x83\xe4\xdc\x1b\x9f\x07\xee\xbf\xa3\x88\x58\xb2\x44\xba\x7f\x05\x48\xca\x84\x9a\x26\xa9\xf4\x1d\x40\x37\x8d\x99\xe4\xab\xe7\x25\x68\xe0\x78\x0d\xc1\x2d\xc0\xfb\xd6\xb2\x32\xbe\x11\xf6\x45\x43\x2f\xc2\xa1\x32\x38\x58\x86\x4d\x19\x57\x92\x21\x1b\x36\x22\xbe\xc6\x21\x3b\x36\xa2\xbc\x5c\xd2\x25\x21\x8b\x37\x73\x4f\xca\x5f\x93\xb6\xec\xf5\x57\x4b\xe7\x45\x4b\x0f\x82\x79\x9e\xd6\x93\x74\xa0\xb5\xd4\xaf\x0e\x58\x64\xb4\x22\x64\x76\xc3\x36\x73\x76\x41\x2f\xad\x17\x26\x9f\x62\xf1\x14\x76\x44\x41\xba\x86\x45\x42\xae\x23\xbb\xb3\x7f\x06\x16\xeb\xf7\x8b\x2b\xc9\x58\xe6\x5f\x15\x4c\xcf\xcf\x2f\x7f\x1b\x6f\x34\x7c\xdd\xbd\x60\xdc\x94\x29\x9c\x31\x60\x43\x2c\xb4\x51\x53\xb6\xd0\x6d\xd9\xbd\x8b\xfc\xf8\x69\x4d\xe1\x7e\x8b\x76\x90\xbe\x47\x65\x5e\x60\xc6\xe5\x0c\x10\xc5\xc2\x08\x26\xa7\x5a\xcb\x98\x94\x27\x78\x59\xc0\x13\x9c\xb4\xad\xd6\x5f\xef\xe6\xa6\x61\xa3\xec\xaf\xe0\x2d\xe8\xa8\x7c\xf4\xb7\x93\x95\x09\x4f\x0d\x04\x78\x74\x56\xea\xb8\xff\x3f\xa1\xe7\xd6\x15\x6e\x2c\xee\x3c\x29\xe1\x7e\xfc\xf3\xe8\xe0\xe5\x36\x5d\x48\xdd\x42\x46\x5d\xb3\x6e\x27\xfe\x3b\xfd\xf7\x78\x2d\xfd\x94\x19\xf6\xec\xc3\xe3\xaf\x8b\xca\xc9\x8f\xa8\x30\x51\x39\x7c\x75\x78\xf0\xd3\xe4\x47\x68\x06\x42\x73\xf2\x63\x2e\x71\xa1\x39\x9a\xbc\x3e\x7a\x7d\xfc\xd3\xe4\xf5\xdf\xf7\x37\x3c\xe4\x38\x39\xf9\x4e\xfb\xe7\xc6\x00\xe9\x8b\x39\x31\xaa\xbb\xa6\x2c\x8e\x8f\x34\x6c\x22\xf3\xe7\x6e\xf6\x1b\xe9\x8d\x18\xfa\xea\x20\xca\xbe\x70\xba\x4e\x22\xb5\x25\xbb\xf1\x20\x6f\x1b\xa7\x2c\xf9\x32\xa8\x98\x43\xa5\x5b\x9c\x67\xc9\x9b\xc6\x3d\x09\x74\xfa\xf5\x53\x0f\x36\x1f\x86\xed\x30\xee\xc5\x5c\xf4\x77\xcc\x7b\xe2\xb7\x49\x2f\xb7\x47\xa3\xf1\xfd\xe6\x4b\xbd\x9d\xf9\x6d\x5c\xa9\xaa\xa5\xd0\x65\xd8\x6f\xbf\x53\x70\x72\xbc\xf3\x40\xe0\xab\xd7\x07\xa2\x29\x94\x30\x46\x39\x41\x6f\xe9\x53\x69\x76\xb4\xef\xc4\xbe\xb5\x31\xbf\x10\xca\x62\xf0\x7b\x12\xcd\x68\x58\x1a\xbb\x48\xee\x77\x1e\x3d\xd7\x80\x15\x37\x4b\x31\x97\xb6\xd4\x20\xe4\xf7\x1f\x4d\x85\x6c\x32\xef\x67\xd3\x77\xe2\xcd\x74\x26\xae\x4e\xa7\x6f\xc4\xf5\xe9\xf4\x6a\xf6\xcb\xce\x3d\x2f\xb4\xb3\xe9\x27\x44\x58\x38\x5b\xa9\x3a\x65\xc6\xb5\x96\x7c\xdf\x44\x5f\xac\x55\xd8\x28\xf2\xbe\x90\x16\x32\x6e\x01\x22\xa3\xad\xc5\xb9\x4c\xdf\x32\xb7\xb9\x52\x47\xbe\xff\xf6\x39\xd4\x2f\xd7\x7f\x5c\x8b\xe9\x9b\x8b\xb3\xb7\xcf\xd4\x23\x4f\xf0\x73\x5d\xd5\x37\x1c\xa5\x26\x87\x87\x47\x07\xc7\x07\x93\x93\xcf\xe6\x27\x17\xd3\xeb\x5f\x4f\xdf\x3c\xcf\x89\xea\x71\x21\x7f\xb9\xbb\x15\x64\x4f\xfa\xe7\xf0\x3b\xf6\x4f\x0c\xc5\xa8\x7b\x6d\x04\x01\xfc\xc8\xf9\x12\xbc\xb2\xf5\xa8\x72\x7e\xd4\xb9\x39\x52\x38\x2a\x55\x55\x81\x87\xad\xe9\xf8\x3d\x97\xf0\xa7\xcd\xc4\xaf\xed\x53\x0f\x37\xce\xed\xcf\xa2\x1f\x5d\xfa\xc7\xe5\xe5\xfb\xdd\xaf\x2d\x73\xbf\x6f\x7e\xce\x7e\xb9\x7a\x0e\x4f\xfb\x7b\x73\x61\x5c\xd9\xa6\xaf\x0b\x95\x55\x81\xc1\xd5\x36\xdf\xa7\xf8\x5c\x5c\xbe\xf9\xcf\xf9\xe9\xee\x13\x86\xa2\xd8\xaf\x71\xf0\x6e\x3a\x9b\xed\x7e\x18\xdc\x16\xe9\xab\xec\xfe\xeb\x9f\x1a\xc8\x87\xfc\xab\x3b\x61\xe6\x8b\xb9\xbf\xee\x2a\xf9\x19\x62\xfc\xfe\x6a\x3a\xdb\xfd\x58\x52\xae\x21\x9f\xac\x36\xe0\xcd\x5e\x79\x7e\x35\xfd\xed\xec\x72\xf7\x49\xd7\xc0\xd7\xc7\xc8\xff\x9d\xcf\xea\xdd\xd6\x3e\x05\xe6\xfd\xd9\xc5\xee\x07\xc4\x62\x2e\x6d\xdd\x36\xfb\xe5\xe8\xfb\x3f\xc4\xec\xf2\xed\x3f\xcf\xfe\xb5\x73\x77\x6b\x08\xc2\x80\x69\x9c\x56\x45\xfa\x29\x29\xfd\x63\x37\x4c\x34\xf7\x29\x3c\x6f\xcf\x9e\x61\x61\xc0\x25\x6a\x57\xef\x93\x9f\xe7\x97\xdf\xda\xfd\x2f\xa2\xde\xa7\x17\xff\x0f\x00\x00\xff\xff\xb5\x13\xdf\xe5\x48\x3d\x00\x00")

func fuseContainerJsonBytes() ([]byte, error) {
	return bindataRead(
		_fuseContainerJson,
		"fuse-container.json",
	)
}

func fuseContainerJson() (*asset, error) {
	bytes, err := fuseContainerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "fuse-container.json", size: 15688, mode: os.FileMode(0644), modTime: time.Unix(1617050955, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc, 0xd4, 0xe6, 0xe1, 0x68, 0x36, 0x1a, 0xf5, 0x6a, 0x99, 0x93, 0xfb, 0xa4, 0xbe, 0xd3, 0x62, 0x51, 0xa6, 0x49, 0x5e, 0x2, 0xb8, 0xa0, 0x17, 0x36, 0x96, 0xdc, 0x5e, 0x15, 0x66, 0x60, 0xca}}
	return a, nil
}

var _allowPerfSyscallsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x5a\x5f\x6f\xdb\x38\x12\x7f\x76\x3e\x45\xe0\xe7\xe2\x90\xa4\xb9\x6c\xda\x37\x9f\x9b\xbb\x06\x9b\x34\xbd\xa4\x87\xdd\xc5\xa1\x20\x18\x69\x24\xf3\xc2\x7f\xe5\x50\x4e\x8c\xa2\xdf\xfd\x40\xc9\x16\x87\x94\x5a\xd4\x75\x93\x00\x7d\x48\xc0\xdf\x8f\x23\x0e\x67\x38\x1c\x8e\x28\x7f\xde\x9b\x4c\x4b\xa8\x78\x23\xfd\xac\xf0\xc2\xe8\xe9\xeb\xfd\xe9\xcd\xfc\xf2\x3d\x9b\xcd\x3f\xb0\xb3\xeb\xeb\x77\x57\xd3\x17\x7b\x93\x29\x77\xc5\xe2\x92\xdb\xe9\xeb\xfd\xff\xee\x4d\x26\x9f\xf7\x26\x93\x8e\x13\x1e\x0a\xdf\x38\x88\x8f\x5d\xcf\xdf\xb2\x3f\x4f\x4f\xd8\xc9\x71\x78\x70\x32\x99\x62\x73\x3b\x23\x92\xb8\x1e\x63\x32\x49\x1f\xe8\xa4\x13\xf2\xe5\xd1\x34\x70\x1f\xf7\x26\x93\x2f\x2f\xbe\x43\xed\x2c\xfc\xdf\x4a\xef\xec\xfa\x72\x3b\x15\x97\xe7\xef\x6f\xb6\xd2\x10\x1e\x18\x9a\xd6\x0d\xf3\x6e\x5b\x03\xe3\x63\x3f\x67\x02\xdb\x6b\x3f\xbb\xd8\xda\xfa\xb3\x8b\x71\xf5\x61\xa8\x1f\xf2\xc0\xe6\xc1\x9f\x37\x8d\xed\xe6\x70\xf3\xf2\xd5\xc1\x9f\x5b\x68\x0f\xf2\x51\xc3\xde\xe4\x63\xd8\x50\xb8\xc2\x82\x4b\x89\xc9\x8e\xd2\x5c\xd1\x21\x78\x51\x80\xf5\x9b\x69\x77\xe8\x98\x42\xc4\x1e\x95\xff\xf3\x42\xc1\x43\x8f\x25\x77\x6a\x03\x6e\x85\x2e\xfb\xb6\xad\xfa\xa6\xbb\xdb\x34\x0b\x6e\x6b\xf0\x04\x21\x41\x8b\x52\xb8\x08\x94\x29\x23\x30\xf7\x3a\x01\x9b\x55\x99\x4c\x0b\x69\x8a\x3b\xb6\x9e\xd6\x28\x79\x72\x9c\xd2\x35\xf8\xe0\xc0\x11\x8e\x7d\x45\x7c\x38\xf4\x9a\xcc\x65\x35\xd7\x06\x25\x80\xfd\x0a\x3d\x54\x80\x90\x00\xe6\xb8\xae\x23\x65\xb4\x86\x22\x3a\xc8\xd8\x15\xab\x84\xcc\xa5\x1c\xf0\x5e\xa6\x6c\x2c\x69\x1e\x91\xf6\xcb\x4d\x1b\xac\x91\x92\xb5\x4f\xc1\x18\x77\x98\x91\x5e\x0e\x08\x66\x64\x99\x92\xf6\x9e\x0b\x3f\x42\x1d\xa5\xdc\x50\x2a\x30\xc9\x70\x4b\xd0\xbe\xca\x61\x1c\xe6\x01\x8a\x25\xa4\x28\x5a\x0f\x0f\x22\x69\xb3\xda\x99\xe8\x90\xaa\x0b\xe5\x28\xde\x13\x47\x91\x29\x97\x02\xc9\x12\xf5\x04\xa3\x9c\x94\xa6\x20\xde\xab\xb8\x36\x5e\x54\x2b\xa6\x78\x0c\xf5\x2a\x89\xe7\x2a\x09\xe8\x0e\x91\x89\x24\x11\x5e\x65\x21\xde\x61\x2a\xad\xe3\x9a\xb4\x80\xcc\xad\xe4\x9e\xe3\x4a\x17\x3d\x51\x83\x7f\xe0\xde\xc7\x99\x48\x81\x39\x63\x8a\x38\x6d\x43\x4c\x70\xa0\xcc\x12\x52\x61\xcc\xc7\x43\x4f\xa6\x16\x00\x99\x4d\x80\x03\xa2\xc2\x0c\xd2\x7e\x3a\x75\xef\x1a\x9d\xf8\x79\x43\x90\x07\x1a\x1f\x93\x51\x0b\xb2\x3d\x56\x35\x01\x93\x45\xaf\xc1\x17\xb6\xa1\xe8\xbe\x24\xa8\x04\xed\x31\xc7\x71\xb8\x1a\x3c\xd4\xa2\xcc\x60\x5c\xab\x40\x34\x69\x7f\x93\xf5\xa7\x8f\xe7\x4f\xb7\x11\x8b\x03\x22\x91\x11\xc1\x24\x47\x08\x0b\xe0\x42\x4e\xa7\x54\xaa\xc6\xd6\xce\x52\x98\x76\x66\xd0\x09\xe3\x84\x5f\x11\xca\x71\x5d\x1a\x45\x09\xc0\x54\x41\x47\x24\xd3\x74\x80\x4d\x2e\x93\x3b\xc3\x49\xa1\x04\x5d\x1b\xe6\xcc\x6d\x83\x9e\x85\x28\xa5\x72\x0d\xf2\x9a\xda\x87\xc9\xc8\x68\x8a\xbb\xcc\x01\x81\x32\x36\x19\xda\x2f\x1c\xf0\x92\x71\x07\x9c\xd0\x3e\x19\x29\xb8\xd6\x54\x25\xa7\xd6\xa7\x56\xe4\x26\x24\xbb\x41\xac\x33\x01\x2f\x4b\x76\xcf\x7d\xb1\xc8\x3b\x84\x8e\xe6\x52\xee\x30\x27\x9d\xca\x06\x30\xac\xe0\xba\x00\x19\x09\x92\x9a\x85\x61\x25\xa0\x77\x66\x45\x98\x10\x7d\x4b\x1a\xcf\xc2\x30\xfb\x6d\x32\xdb\x3d\xc2\x84\x60\x60\xe4\xcc\x5e\x33\x48\x99\x80\x62\x9a\x0d\xb8\xb9\x25\xab\x2a\x0c\x6b\x9c\xd0\x35\x03\xed\x63\xd8\xf6\xac\x83\x5a\xe0\x58\x47\x3a\xaa\xed\xf3\xc2\x9d\x90\xbd\xdd\x32\xc9\x9c\x32\xcb\x9c\x32\x5f\x1e\x29\xf4\x1d\x6d\xc7\xb4\x10\xe2\x0d\x34\x45\xe9\x83\x03\x86\x49\x89\x00\x71\xb4\x91\x5c\x99\x0a\xe4\x89\x53\xd2\xc4\x29\xd3\xc4\xa9\xba\x63\xa7\x87\xa0\x6e\xb9\x73\x22\x3a\x49\x81\xaa\xca\xec\x10\x57\x42\x17\xc6\x45\x78\x47\xce\x9f\x16\x44\x75\xea\x4e\xc7\xd3\xa8\x05\xa4\x8f\x1e\x07\x2d\x38\x4a\x10\x8f\xde\x57\x8a\x5b\xda\x8e\x82\xd6\x19\x4f\x4a\x17\xf5\x29\xc4\x10\x82\xa7\x0e\x50\x9f\x58\x17\xeb\x84\x30\x36\x2e\x82\xfa\xd4\x46\x63\xe9\xa0\x00\x11\x0f\xfd\x8c\xce\x22\x76\xd3\x8b\x10\x6b\x51\xca\x0d\xc5\x1b\x4d\xa3\x42\x39\xa0\x46\x61\x4d\x36\x99\xc2\x9a\xec\x04\x85\xb5\x2b\x96\x04\x21\xd1\x48\xcf\x31\xd5\xe8\xc4\xa5\x1d\xa4\x6e\x6c\x34\xd1\x39\x28\x22\x35\xdc\xaf\x0f\xd2\x3e\xf6\x34\xdc\x23\x48\xe2\x60\xea\xb7\xd0\xe6\x3e\x45\xfd\xca\x58\xde\xc4\xb8\xb2\xe0\x2a\xd6\x6e\xfc\xc4\xf1\x56\x94\x55\x39\xc2\xb4\xfe\x43\x51\x6b\x2e\x63\x87\x05\xda\x8e\x7a\x4c\xb4\xcf\x0e\x40\xb6\x0a\xd6\x11\x2f\xdb\x90\xa4\x69\x1f\xf0\x72\x99\xa2\xa8\xa5\x3b\x3f\x88\x74\xe7\x96\x93\x1c\xe7\x0a\xef\x9d\xf0\x03\xbc\xcc\x60\xaf\x26\x28\xa5\x6d\xbe\xc8\x08\x1a\x41\x1b\x1c\x97\x20\xb1\xc0\x41\x91\xb4\x2b\x17\x0f\xd6\x80\x95\xc2\x3a\xc7\xd9\xec\x5b\x9a\x4a\x29\x6e\xbb\x17\x03\xcb\xeb\xf8\x6a\x33\x92\x91\x1c\xd0\x53\xb2\x43\x74\x9e\x1d\x26\x76\xa3\xe7\xce\xb3\xf5\x4b\x64\x4f\x2b\x92\x59\x1c\xc2\xa7\xbe\xed\x43\x78\xf0\xee\x82\x27\xe1\x2c\xe8\x52\xe8\x3a\x23\x9d\x29\x14\xc7\xbb\x94\xfd\xd4\x40\x03\x42\x57\x26\xa5\x1d\xf8\xc6\x65\xa3\x62\x83\x96\xec\xf3\x8e\x6c\xb7\x3a\x7d\xd1\xc8\xe8\xdc\x99\x9e\xf9\x7a\x4c\x2d\x16\x0b\x28\x43\xda\xe2\x55\x15\x4e\xe8\xd5\xb0\x83\x78\xb6\x27\x2d\x77\x5c\x0d\x58\xb6\x29\xaa\x98\xe2\x0f\xdf\xea\x15\x7a\xd0\xdb\x36\x1a\x09\x99\x2e\xe7\xda\x47\x45\x38\x54\x97\x71\x47\x8e\x76\x66\x36\x77\x32\xf8\x35\xd3\x70\xcc\x34\x1c\x35\x0d\xbf\x3a\xbd\x95\x80\xf8\x56\x87\x50\x14\x46\xd9\x08\x69\xee\x42\x50\x64\xfb\x23\x28\x92\x64\x11\x94\x21\x8f\xa9\x76\x15\xc7\x98\xdc\x42\x12\x16\xa1\x1d\x76\x47\x8e\x53\x69\xba\xef\x5a\x9c\x42\x1f\xe3\x02\x7c\x45\x8b\xdf\x0d\x8e\x65\x47\xcb\x34\x99\x44\x93\x49\xa4\x23\xe4\xcf\xa7\xaf\x01\x38\x7c\x0d\xc0\xfc\x35\x00\xd3\x9a\x1f\x87\x75\x3c\x86\x0a\x3c\x15\x71\x90\x2b\x4e\x0b\x7b\x1c\x16\xf6\x98\x17\xf6\x38\x2c\xec\x5b\x2a\x17\x19\x48\x24\xa5\x3f\x8e\x97\xfe\x98\x54\xfa\x38\x28\xeb\x71\xbc\xac\x6f\x69\x51\x86\x32\xdc\x91\xdb\x2b\x4c\x6a\x79\xcc\x6a\xf9\xbc\x40\xc3\x85\x8a\xb9\x11\x17\x49\x90\x2e\x54\x49\xbb\x68\xc4\x2e\x1a\x5f\x92\x9a\x34\x24\x44\xe9\xd1\xf3\x58\x01\x74\x47\x68\xbc\xe4\xd8\xe0\x63\x42\xe4\xb9\x71\x90\x01\x83\x23\x88\xd6\x16\xd1\x24\xdd\x31\x96\xc7\x4c\x8d\x56\x8a\x22\xee\x02\x52\x4f\xa4\xc5\x67\xfa\x8e\x9e\xbf\xa2\x07\x1c\x33\xd8\x4a\xd1\xa3\x6f\x0d\xc9\xc0\xa4\x0c\x0a\xed\x91\xeb\xab\x40\x13\x6d\x2b\xa4\x39\xd8\x43\x2f\xe7\x6b\x5a\xf7\xd3\x2b\xb9\x76\x1b\x64\xb5\x70\xc7\x95\x20\x21\xe7\x6a\xf0\x66\x09\xce\x35\x7a\xc0\x0f\x07\x1d\xdc\xf3\x75\x34\x8e\xc9\xe2\xa8\xec\xa0\x4a\xdf\xb0\x63\xfa\x22\x3d\x1c\x65\x4c\x67\xa4\x53\xf9\xde\x9d\x3e\xf1\x59\x76\x9d\x32\xbc\x4d\x69\x06\x6f\xe4\x0d\x8d\xc1\x86\x16\x0f\x69\xd9\xdc\xa1\xb8\xf0\x0d\x9d\x6b\x0b\x34\x66\xbd\x81\xc8\xb2\x76\x93\x4c\x7e\x49\xef\xa2\x96\x2a\x0d\xdf\x70\x92\x1f\x53\x10\xf7\x75\x40\xe4\x46\xa3\xad\xe5\x12\xb0\xec\x6e\xc9\x5b\x6a\xca\x87\x9f\xa3\x66\x17\x17\x57\x7f\x4c\xd7\xdd\xae\x6e\x6f\xca\xd7\xd2\x85\x51\x0a\xb4\x0f\xe2\x6b\x01\xa1\x0b\xd9\x94\xed\x75\xfa\xe7\x2f\x1d\x05\x0f\x84\x4a\x6f\xfb\xb3\x9b\xf7\xb0\xcb\x01\x91\x2d\x15\xcb\xca\xdc\x9e\xcf\x2a\x53\xef\x78\x01\xdb\xcf\x5f\x37\x52\x7e\x8f\x05\x9d\x16\x25\xf4\xef\xe0\x34\xc8\x20\x75\xfc\xb7\xd3\x56\xdf\xf6\xc6\x81\x43\xa3\xb9\x0c\x47\xd0\xf6\x0e\x6f\xc7\xe8\xe6\x13\xa6\x58\xc2\xc3\xf4\xf5\xfe\xc1\x8b\x35\xb1\xe4\xb2\x01\x4a\x18\xdb\x8f\x18\xfe\xce\xfe\xdd\xaa\x9c\x7c\x21\x8a\x7f\xf6\xda\x3d\x81\x79\xa7\xbf\xb6\x79\x87\x2f\x0f\x0f\x7e\x3b\xfa\xf5\x6d\x3c\xfd\xc5\xc3\xf4\xf8\xe8\xd5\xf1\xab\x93\xdf\x8e\x5e\xfd\xfd\xf9\xec\xcc\xca\x8b\xa3\xc7\xca\xf1\x9d\x36\xee\x8a\x05\xd1\x3e\x99\x5a\x5b\x9c\x1c\xcb\x2e\x33\xb7\x1f\x60\xb7\xcf\x97\xdc\x29\x36\xf6\xbd\x29\xf0\xdf\x28\x9e\x12\xa3\xd7\xfc\xad\x03\x7e\x67\x8d\xd0\xe4\x5b\x6b\xb1\x80\x4a\x36\xb8\x48\x6a\x64\x89\x4f\xec\xa7\xf8\xb9\xb8\x6d\xaf\xbf\x89\xff\xb0\xc7\x8a\x05\xeb\x2e\x8f\x9e\xd8\x0a\x15\x6f\xa8\x26\xd3\x87\xf5\xaf\x0b\x7e\xd0\x0a\x65\x4a\x51\xad\x98\x2c\xfd\xb3\x5b\xd1\xb7\x4f\x4f\x76\xb1\x08\x5f\xbe\x3a\x60\xb6\x10\x4c\x29\x61\x18\xbd\x3d\x4b\x7b\x92\xd2\xac\xed\x72\x8d\x0e\x35\x20\x13\x1a\xbd\x7b\x62\x77\x84\x09\xf4\x1e\x08\xe0\x61\x17\x1f\x18\x0b\x9a\xdd\xae\xd8\x82\xeb\x52\x02\xe3\x8f\xbc\xb8\x05\xb7\xd4\x96\xf9\xec\x3d\x7b\x33\x9b\xb3\xeb\xb3\xd9\x1b\x76\x73\x36\xbb\x9e\xbf\xdd\xc5\x98\x42\x1a\x1d\xcb\x79\x65\x1a\xed\x53\xf4\xc8\xe9\x76\xc4\xba\x9b\xbf\x6e\xd8\xec\xcd\xe5\xf9\xbb\xdd\xed\x7a\xac\x63\xf1\xe8\xf0\xf0\xf8\xe0\xe4\xe0\xe8\xf4\x6b\x65\xdc\xe5\xec\xe6\xf7\xb3\x37\x3f\xe7\x74\xfc\x6e\x47\xbd\xf8\xa1\xf0\x7f\x3a\x37\x1e\x3e\x92\x1b\x83\x49\xfb\xed\x15\x26\x78\x70\xfb\xc6\x95\xe0\x84\xae\xf7\x2b\xe3\xf6\x5b\x03\xf6\x05\xee\x97\xa2\xaa\xc0\xc1\x26\xbc\x1f\x23\x6d\x6c\x17\xd1\xdf\xf4\xbb\x83\x5b\x63\x9e\x3e\xb1\x84\x89\xfe\xe3\xea\xea\xc3\x4e\x3b\x6f\xe1\x9e\x6b\xea\xf3\xb7\xd7\x3b\x4e\xbe\xbb\x57\x62\xca\x94\x4d\xbc\x56\x16\x5a\xf8\x8c\xaa\x28\xf7\x1c\xa6\x5e\x5e\xbd\xf9\xcf\xc5\xd9\x4e\x25\x56\x51\x3c\xcf\x2a\xbd\x9f\xcd\xe7\x3b\x2d\xd2\x5d\x11\x3f\x38\x74\xdf\x2f\x6b\x20\xbf\x2c\xdb\x5c\xb1\x64\x9f\xda\x9f\xec\x46\xe6\x67\xb8\xe8\xc3\xf5\x6c\xbe\xd3\xea\x0a\x63\xc9\x4f\x48\x2c\x38\xf5\x2c\x86\x5c\xcf\xfe\x38\xbf\xda\xa9\xe0\x1c\xf9\xe1\x0e\x0e\x7f\xb6\xb9\xb9\x43\x7d\x0e\x1b\x3f\x9c\x5f\xee\xb4\x54\xcb\x05\xd7\x75\x63\x9f\x67\xee\x1f\xfe\x62\xf3\xab\x77\xff\x3c\xff\xd7\x2e\x16\xd4\xe0\x99\x02\x65\x8d\x14\x45\xfc\xcd\x07\xfd\xd1\x30\x26\x12\xcf\x61\xe9\xbb\xf3\xdd\x36\x14\xae\x50\x9a\xfa\x39\xa6\x7e\x71\xf5\x3d\x8b\xb3\x37\xf9\xb8\xf7\x65\xef\xff\x01\x00\x00\xff\xff\x3d\xe6\x9f\x5a\x8e\x31\x00\x00")

func allowPerfSyscallsJsonBytes() ([]byte, error) {
	return bindataRead(
		_allowPerfSyscallsJson,
		"allow-perf-syscalls.json",
	)
}

func allowPerfSyscallsJson() (*asset, error) {
	bytes, err := allowPerfSyscallsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "allow-perf-syscalls.json", size: 12686, mode: os.FileMode(0644), modTime: time.Unix(1617050866, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4f, 0x63, 0x84, 0xe2, 0xa6, 0xdd, 0xfe, 0x1e, 0xf0, 0x12, 0x77, 0xa, 0x76, 0xee, 0xff, 0x33, 0xec, 0x72, 0x4b, 0x4b, 0x1c, 0xb9, 0xad, 0x70, 0x16, 0xf3, 0x49, 0x42, 0x9d, 0xd2, 0xe1, 0x1}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"default.json":             defaultJson,
	"fuse-container.json":      fuseContainerJson,
	"allow-perf-syscalls.json": allowPerfSyscallsJson,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"allow-perf-syscalls.json": &bintree{allowPerfSyscallsJson, map[string]*bintree{}},
	"default.json":             &bintree{defaultJson, map[string]*bintree{}},
	"fuse-container.json":      &bintree{fuseContainerJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}

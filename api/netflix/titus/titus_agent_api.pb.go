// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: netflix/titus/titus_agent_api.proto

// Titus system management API specification.
//

package titus

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

/// Agent instance deployment state.
type InstanceLifecycleState int32

const (
	// Initial state of an agent, set when first discovered.
	InstanceLifecycleState_StartInitiated InstanceLifecycleState = 0
	/// An agent instance can move to this state only from the 'StartInitiated' state. This happens as soon as all
	//  healthcheck indicators for the agent are ok. At this point, the agent can accept containers, provided
	//  that other criteria are fullfiled.
	InstanceLifecycleState_Started InstanceLifecycleState = 1
	/// An agent instance is terminating. No new work is accepted.
	InstanceLifecycleState_KillInitiated InstanceLifecycleState = 2
	/// An agent instance is not running anymore.
	InstanceLifecycleState_Stopped InstanceLifecycleState = 3
	/// An agent instance state is unknown.
	InstanceLifecycleState_InstanceStateUnknown InstanceLifecycleState = 4
)

// Enum value maps for InstanceLifecycleState.
var (
	InstanceLifecycleState_name = map[int32]string{
		0: "StartInitiated",
		1: "Started",
		2: "KillInitiated",
		3: "Stopped",
		4: "InstanceStateUnknown",
	}
	InstanceLifecycleState_value = map[string]int32{
		"StartInitiated":       0,
		"Started":              1,
		"KillInitiated":        2,
		"Stopped":              3,
		"InstanceStateUnknown": 4,
	}
)

func (x InstanceLifecycleState) Enum() *InstanceLifecycleState {
	p := new(InstanceLifecycleState)
	*p = x
	return p
}

func (x InstanceLifecycleState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstanceLifecycleState) Descriptor() protoreflect.EnumDescriptor {
	return file_netflix_titus_titus_agent_api_proto_enumTypes[0].Descriptor()
}

func (InstanceLifecycleState) Type() protoreflect.EnumType {
	return &file_netflix_titus_titus_agent_api_proto_enumTypes[0]
}

func (x InstanceLifecycleState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstanceLifecycleState.Descriptor instead.
func (InstanceLifecycleState) EnumDescriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{0}
}

/// An agent health state.
type HealthState int32

const (
	/// Health state is unknown.
	HealthState_Unknown HealthState = 0
	/// An agent is healthy.
	HealthState_Healthy HealthState = 1
	/// An agent is unhealthy.
	HealthState_Unhealthy HealthState = 2
)

// Enum value maps for HealthState.
var (
	HealthState_name = map[int32]string{
		0: "Unknown",
		1: "Healthy",
		2: "Unhealthy",
	}
	HealthState_value = map[string]int32{
		"Unknown":   0,
		"Healthy":   1,
		"Unhealthy": 2,
	}
)

func (x HealthState) Enum() *HealthState {
	p := new(HealthState)
	*p = x
	return p
}

func (x HealthState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthState) Descriptor() protoreflect.EnumDescriptor {
	return file_netflix_titus_titus_agent_api_proto_enumTypes[1].Descriptor()
}

func (HealthState) Type() protoreflect.EnumType {
	return &file_netflix_titus_titus_agent_api_proto_enumTypes[1]
}

func (x HealthState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthState.Descriptor instead.
func (HealthState) EnumDescriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{1}
}

/// Agent server group lifecycle state.
type InstanceGroupLifecycleState int32

const (
	/// Server group is not accepting any traffic or auto-scale actions.
	InstanceGroupLifecycleState_Inactive InstanceGroupLifecycleState = 0
	/// Server group is open for traffic, and auto-scaling.
	InstanceGroupLifecycleState_Active InstanceGroupLifecycleState = 1
	/// Server group is open for traffic, and auto-scaling, but other server groups are preferred.
	InstanceGroupLifecycleState_PhasedOut InstanceGroupLifecycleState = 2
	/// Server group is not accepting any traffic. All idle instances will be terminated.
	InstanceGroupLifecycleState_Removable InstanceGroupLifecycleState = 3
)

// Enum value maps for InstanceGroupLifecycleState.
var (
	InstanceGroupLifecycleState_name = map[int32]string{
		0: "Inactive",
		1: "Active",
		2: "PhasedOut",
		3: "Removable",
	}
	InstanceGroupLifecycleState_value = map[string]int32{
		"Inactive":  0,
		"Active":    1,
		"PhasedOut": 2,
		"Removable": 3,
	}
)

func (x InstanceGroupLifecycleState) Enum() *InstanceGroupLifecycleState {
	p := new(InstanceGroupLifecycleState)
	*p = x
	return p
}

func (x InstanceGroupLifecycleState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstanceGroupLifecycleState) Descriptor() protoreflect.EnumDescriptor {
	return file_netflix_titus_titus_agent_api_proto_enumTypes[2].Descriptor()
}

func (InstanceGroupLifecycleState) Type() protoreflect.EnumType {
	return &file_netflix_titus_titus_agent_api_proto_enumTypes[2]
}

func (x InstanceGroupLifecycleState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstanceGroupLifecycleState.Descriptor instead.
func (InstanceGroupLifecycleState) EnumDescriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{2}
}

/// Agent instance deployment status.
type InstanceLifecycleStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// Agent instance state.
	State InstanceLifecycleState `protobuf:"varint,1,opt,name=state,proto3,enum=com.netflix.titus.InstanceLifecycleState" json:"state,omitempty"`
	/// Instance launch timestamp (EC2 API provides only launch time, with no information about time of subsequent state changes).
	LaunchTimestamp uint64 `protobuf:"varint,3,opt,name=launchTimestamp,proto3" json:"launchTimestamp,omitempty"`
}

func (x *InstanceLifecycleStatus) Reset() {
	*x = InstanceLifecycleStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceLifecycleStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceLifecycleStatus) ProtoMessage() {}

func (x *InstanceLifecycleStatus) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceLifecycleStatus.ProtoReflect.Descriptor instead.
func (*InstanceLifecycleStatus) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{0}
}

func (x *InstanceLifecycleStatus) GetState() InstanceLifecycleState {
	if x != nil {
		return x.State
	}
	return InstanceLifecycleState_StartInitiated
}

func (x *InstanceLifecycleStatus) GetLaunchTimestamp() uint64 {
	if x != nil {
		return x.LaunchTimestamp
	}
	return 0
}

/// Agent health status.
type HealthStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// Source id
	SourceId string `protobuf:"bytes,1,opt,name=sourceId,proto3" json:"sourceId,omitempty"`
	/// Agent health state.
	State HealthState `protobuf:"varint,2,opt,name=state,proto3,enum=com.netflix.titus.HealthState" json:"state,omitempty"`
	/// If agent is in bad state, contains more information about the problem.
	Detail string `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	/// Time at which an agent went into the given state.
	Timestamp uint64 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	/// Health status from individual components, which this state aggregates.
	Components []*HealthStatus `protobuf:"bytes,5,rep,name=components,proto3" json:"components,omitempty"`
}

func (x *HealthStatus) Reset() {
	*x = HealthStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthStatus) ProtoMessage() {}

func (x *HealthStatus) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthStatus.ProtoReflect.Descriptor instead.
func (*HealthStatus) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{1}
}

func (x *HealthStatus) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *HealthStatus) GetState() HealthState {
	if x != nil {
		return x.State
	}
	return HealthState_Unknown
}

func (x *HealthStatus) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *HealthStatus) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *HealthStatus) GetComponents() []*HealthStatus {
	if x != nil {
		return x.Components
	}
	return nil
}

/// Agent server group status.
type InstanceGroupLifecycleStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// Lifecycle state.
	State InstanceGroupLifecycleState `protobuf:"varint,1,opt,name=state,proto3,enum=com.netflix.titus.InstanceGroupLifecycleState" json:"state,omitempty"`
	/// A reason for moving into this state.
	Detail string `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
	/// Time at which agent server group went into the given state.
	Timestamp uint64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *InstanceGroupLifecycleStatus) Reset() {
	*x = InstanceGroupLifecycleStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceGroupLifecycleStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceGroupLifecycleStatus) ProtoMessage() {}

func (x *InstanceGroupLifecycleStatus) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceGroupLifecycleStatus.ProtoReflect.Descriptor instead.
func (*InstanceGroupLifecycleStatus) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{2}
}

func (x *InstanceGroupLifecycleStatus) GetState() InstanceGroupLifecycleState {
	if x != nil {
		return x.State
	}
	return InstanceGroupLifecycleState_Inactive
}

func (x *InstanceGroupLifecycleStatus) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *InstanceGroupLifecycleStatus) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

/// An agent server.
type AgentInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// A unique id of the agent server.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	/// A server group, to which the agent belongs to.
	InstanceGroupId string `protobuf:"bytes,2,opt,name=instanceGroupId,proto3" json:"instanceGroupId,omitempty"`
	/// IP address of the agent.
	IpAddress string `protobuf:"bytes,3,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	/// Hostname of the agent.
	Hostname string `protobuf:"bytes,4,opt,name=hostname,proto3" json:"hostname,omitempty"`
	/// Current deployment status.
	LifecycleStatus *InstanceLifecycleStatus `protobuf:"bytes,5,opt,name=lifecycleStatus,proto3" json:"lifecycleStatus,omitempty"`
	/// Current health status.
	HealthStatus *HealthStatus `protobuf:"bytes,6,opt,name=healthStatus,proto3" json:"healthStatus,omitempty"`
	/// Arbitrary set of key/value pairs. Keys starting with 'titus' prefix are reserved for Titus.
	Attributes map[string]string `protobuf:"bytes,7,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AgentInstance) Reset() {
	*x = AgentInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInstance) ProtoMessage() {}

func (x *AgentInstance) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInstance.ProtoReflect.Descriptor instead.
func (*AgentInstance) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{3}
}

func (x *AgentInstance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentInstance) GetInstanceGroupId() string {
	if x != nil {
		return x.InstanceGroupId
	}
	return ""
}

func (x *AgentInstance) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *AgentInstance) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *AgentInstance) GetLifecycleStatus() *InstanceLifecycleStatus {
	if x != nil {
		return x.LifecycleStatus
	}
	return nil
}

func (x *AgentInstance) GetHealthStatus() *HealthStatus {
	if x != nil {
		return x.HealthStatus
	}
	return nil
}

func (x *AgentInstance) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

/// An agent instance group.
type AgentInstanceGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// A unique id of the server group.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	/// An id of the server type (for example AWS instance type id).
	InstanceType string `protobuf:"bytes,2,opt,name=instanceType,proto3" json:"instanceType,omitempty"`
	/// Instance resources (cpu, memory, etc).
	InstanceResources *ResourceDimension `protobuf:"bytes,3,opt,name=instanceResources,proto3" json:"instanceResources,omitempty"`
	/// Tier to which the given server group is attached.
	Tier Tier `protobuf:"varint,4,opt,name=tier,proto3,enum=com.netflix.titus.Tier" json:"tier,omitempty"`
	/// Minimum number of servers in the server group.
	Min uint32 `protobuf:"varint,5,opt,name=min,proto3" json:"min,omitempty"`
	/// Desired number of servers in the server group.
	Desired uint32 `protobuf:"varint,6,opt,name=desired,proto3" json:"desired,omitempty"`
	/// Current number of servers in the server group.
	Current uint32 `protobuf:"varint,7,opt,name=current,proto3" json:"current,omitempty"`
	/// Maximum number of servers in the server group.
	Max uint32 `protobuf:"varint,8,opt,name=max,proto3" json:"max,omitempty"`
	/// Set to true, if a new servers can be started in this server group.
	IsLaunchEnabled bool `protobuf:"varint,9,opt,name=isLaunchEnabled,proto3" json:"isLaunchEnabled,omitempty"`
	/// Set to true, if servers can be terminated in this server group.
	IsTerminateEnabled bool `protobuf:"varint,10,opt,name=isTerminateEnabled,proto3" json:"isTerminateEnabled,omitempty"`
	/// Current lifecycle state.
	LifecycleStatus *InstanceGroupLifecycleStatus `protobuf:"bytes,11,opt,name=lifecycleStatus,proto3" json:"lifecycleStatus,omitempty"`
	/// Time at wich the server group was created.
	LaunchTimestamp uint64 `protobuf:"varint,12,opt,name=launchTimestamp,proto3" json:"launchTimestamp,omitempty"`
	/// Arbitrary set of key/value pairs. Keys starting with 'titus' prefix are reserved for Titus.
	Attributes map[string]string `protobuf:"bytes,13,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AgentInstanceGroup) Reset() {
	*x = AgentInstanceGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInstanceGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInstanceGroup) ProtoMessage() {}

func (x *AgentInstanceGroup) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInstanceGroup.ProtoReflect.Descriptor instead.
func (*AgentInstanceGroup) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{4}
}

func (x *AgentInstanceGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentInstanceGroup) GetInstanceType() string {
	if x != nil {
		return x.InstanceType
	}
	return ""
}

func (x *AgentInstanceGroup) GetInstanceResources() *ResourceDimension {
	if x != nil {
		return x.InstanceResources
	}
	return nil
}

func (x *AgentInstanceGroup) GetTier() Tier {
	if x != nil {
		return x.Tier
	}
	return Tier_Flex
}

func (x *AgentInstanceGroup) GetMin() uint32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *AgentInstanceGroup) GetDesired() uint32 {
	if x != nil {
		return x.Desired
	}
	return 0
}

func (x *AgentInstanceGroup) GetCurrent() uint32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *AgentInstanceGroup) GetMax() uint32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *AgentInstanceGroup) GetIsLaunchEnabled() bool {
	if x != nil {
		return x.IsLaunchEnabled
	}
	return false
}

func (x *AgentInstanceGroup) GetIsTerminateEnabled() bool {
	if x != nil {
		return x.IsTerminateEnabled
	}
	return false
}

func (x *AgentInstanceGroup) GetLifecycleStatus() *InstanceGroupLifecycleStatus {
	if x != nil {
		return x.LifecycleStatus
	}
	return nil
}

func (x *AgentInstanceGroup) GetLaunchTimestamp() uint64 {
	if x != nil {
		return x.LaunchTimestamp
	}
	return 0
}

func (x *AgentInstanceGroup) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

/// Events emitted for agent topology changes (new ASG created, new instance launched, etc).
type AgentChangeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//	*AgentChangeEvent_InstanceGroupUpdate_
	//	*AgentChangeEvent_InstanceGroupRemoved_
	//	*AgentChangeEvent_AgentInstanceUpdate
	//	*AgentChangeEvent_AgentInstanceRemoved
	//	*AgentChangeEvent_SnapshotEnd_
	Event isAgentChangeEvent_Event `protobuf_oneof:"Event"`
}

func (x *AgentChangeEvent) Reset() {
	*x = AgentChangeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentChangeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentChangeEvent) ProtoMessage() {}

func (x *AgentChangeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentChangeEvent.ProtoReflect.Descriptor instead.
func (*AgentChangeEvent) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{5}
}

func (m *AgentChangeEvent) GetEvent() isAgentChangeEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *AgentChangeEvent) GetInstanceGroupUpdate() *AgentChangeEvent_InstanceGroupUpdate {
	if x, ok := x.GetEvent().(*AgentChangeEvent_InstanceGroupUpdate_); ok {
		return x.InstanceGroupUpdate
	}
	return nil
}

func (x *AgentChangeEvent) GetInstanceGroupRemoved() *AgentChangeEvent_InstanceGroupRemoved {
	if x, ok := x.GetEvent().(*AgentChangeEvent_InstanceGroupRemoved_); ok {
		return x.InstanceGroupRemoved
	}
	return nil
}

func (x *AgentChangeEvent) GetAgentInstanceUpdate() *AgentChangeEvent_InstanceUpdate {
	if x, ok := x.GetEvent().(*AgentChangeEvent_AgentInstanceUpdate); ok {
		return x.AgentInstanceUpdate
	}
	return nil
}

func (x *AgentChangeEvent) GetAgentInstanceRemoved() *AgentChangeEvent_InstanceRemoved {
	if x, ok := x.GetEvent().(*AgentChangeEvent_AgentInstanceRemoved); ok {
		return x.AgentInstanceRemoved
	}
	return nil
}

func (x *AgentChangeEvent) GetSnapshotEnd() *AgentChangeEvent_SnapshotEnd {
	if x, ok := x.GetEvent().(*AgentChangeEvent_SnapshotEnd_); ok {
		return x.SnapshotEnd
	}
	return nil
}

type isAgentChangeEvent_Event interface {
	isAgentChangeEvent_Event()
}

type AgentChangeEvent_InstanceGroupUpdate_ struct {
	InstanceGroupUpdate *AgentChangeEvent_InstanceGroupUpdate `protobuf:"bytes,1,opt,name=instanceGroupUpdate,proto3,oneof"`
}

type AgentChangeEvent_InstanceGroupRemoved_ struct {
	InstanceGroupRemoved *AgentChangeEvent_InstanceGroupRemoved `protobuf:"bytes,2,opt,name=instanceGroupRemoved,proto3,oneof"`
}

type AgentChangeEvent_AgentInstanceUpdate struct {
	AgentInstanceUpdate *AgentChangeEvent_InstanceUpdate `protobuf:"bytes,3,opt,name=agentInstanceUpdate,proto3,oneof"`
}

type AgentChangeEvent_AgentInstanceRemoved struct {
	AgentInstanceRemoved *AgentChangeEvent_InstanceRemoved `protobuf:"bytes,4,opt,name=agentInstanceRemoved,proto3,oneof"`
}

type AgentChangeEvent_SnapshotEnd_ struct {
	SnapshotEnd *AgentChangeEvent_SnapshotEnd `protobuf:"bytes,5,opt,name=snapshotEnd,proto3,oneof"`
}

func (*AgentChangeEvent_InstanceGroupUpdate_) isAgentChangeEvent_Event() {}

func (*AgentChangeEvent_InstanceGroupRemoved_) isAgentChangeEvent_Event() {}

func (*AgentChangeEvent_AgentInstanceUpdate) isAgentChangeEvent_Event() {}

func (*AgentChangeEvent_AgentInstanceRemoved) isAgentChangeEvent_Event() {}

func (*AgentChangeEvent_SnapshotEnd_) isAgentChangeEvent_Event() {}

type AgentQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	/// (Required) Requested page number/size.
	Page *Page `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	/// (Optional) Collection of fields and their values for filtering.
	// Available query criteria:
	// instanceIds - list of agent instance ids
	// instanceGroupIds - list of server group ids
	// deploymentState - agent deployment state
	// overrideState - override state of an agent
	// healthState - current agent health state
	FilteringCriteria map[string]string `protobuf:"bytes,2,rep,name=filteringCriteria,proto3" json:"filteringCriteria,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	/// (Optional) If set, only field values explicitly given in this parameter will be returned
	// This does not include certain attributes like 'id', 'instanceGroupId' which are always returned.
	// If nested field value is provided, only the explicitly listed nested fields will be returned.
	Fields []string `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *AgentQuery) Reset() {
	*x = AgentQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentQuery) ProtoMessage() {}

func (x *AgentQuery) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentQuery.ProtoReflect.Descriptor instead.
func (*AgentQuery) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{6}
}

func (x *AgentQuery) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *AgentQuery) GetFilteringCriteria() map[string]string {
	if x != nil {
		return x.FilteringCriteria
	}
	return nil
}

func (x *AgentQuery) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type Id struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Id) Reset() {
	*x = Id{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Id) ProtoMessage() {}

func (x *Id) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Id.ProtoReflect.Descriptor instead.
func (*Id) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{7}
}

func (x *Id) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AgentInstanceGroups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentInstanceGroups []*AgentInstanceGroup `protobuf:"bytes,1,rep,name=agentInstanceGroups,proto3" json:"agentInstanceGroups,omitempty"`
}

func (x *AgentInstanceGroups) Reset() {
	*x = AgentInstanceGroups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInstanceGroups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInstanceGroups) ProtoMessage() {}

func (x *AgentInstanceGroups) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInstanceGroups.ProtoReflect.Descriptor instead.
func (*AgentInstanceGroups) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{8}
}

func (x *AgentInstanceGroups) GetAgentInstanceGroups() []*AgentInstanceGroup {
	if x != nil {
		return x.AgentInstanceGroups
	}
	return nil
}

type AgentInstances struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentInstances []*AgentInstance `protobuf:"bytes,1,rep,name=agentInstances,proto3" json:"agentInstances,omitempty"`
}

func (x *AgentInstances) Reset() {
	*x = AgentInstances{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInstances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInstances) ProtoMessage() {}

func (x *AgentInstances) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInstances.ProtoReflect.Descriptor instead.
func (*AgentInstances) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{9}
}

func (x *AgentInstances) GetAgentInstances() []*AgentInstance {
	if x != nil {
		return x.AgentInstances
	}
	return nil
}

type TierUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceGroupId string `protobuf:"bytes,1,opt,name=instanceGroupId,proto3" json:"instanceGroupId,omitempty"`
	Tier            Tier   `protobuf:"varint,2,opt,name=tier,proto3,enum=com.netflix.titus.Tier" json:"tier,omitempty"`
}

func (x *TierUpdate) Reset() {
	*x = TierUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TierUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TierUpdate) ProtoMessage() {}

func (x *TierUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TierUpdate.ProtoReflect.Descriptor instead.
func (*TierUpdate) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{10}
}

func (x *TierUpdate) GetInstanceGroupId() string {
	if x != nil {
		return x.InstanceGroupId
	}
	return ""
}

func (x *TierUpdate) GetTier() Tier {
	if x != nil {
		return x.Tier
	}
	return Tier_Flex
}

type InstanceGroupLifecycleStateUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceGroupId string                      `protobuf:"bytes,1,opt,name=instanceGroupId,proto3" json:"instanceGroupId,omitempty"`
	LifecycleState  InstanceGroupLifecycleState `protobuf:"varint,2,opt,name=lifecycleState,proto3,enum=com.netflix.titus.InstanceGroupLifecycleState" json:"lifecycleState,omitempty"`
	Detail          string                      `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *InstanceGroupLifecycleStateUpdate) Reset() {
	*x = InstanceGroupLifecycleStateUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceGroupLifecycleStateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceGroupLifecycleStateUpdate) ProtoMessage() {}

func (x *InstanceGroupLifecycleStateUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceGroupLifecycleStateUpdate.ProtoReflect.Descriptor instead.
func (*InstanceGroupLifecycleStateUpdate) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{11}
}

func (x *InstanceGroupLifecycleStateUpdate) GetInstanceGroupId() string {
	if x != nil {
		return x.InstanceGroupId
	}
	return ""
}

func (x *InstanceGroupLifecycleStateUpdate) GetLifecycleState() InstanceGroupLifecycleState {
	if x != nil {
		return x.LifecycleState
	}
	return InstanceGroupLifecycleState_Inactive
}

func (x *InstanceGroupLifecycleStateUpdate) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

type InstanceGroupAttributesUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceGroupId string            `protobuf:"bytes,1,opt,name=instanceGroupId,proto3" json:"instanceGroupId,omitempty"`
	Attributes      map[string]string `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *InstanceGroupAttributesUpdate) Reset() {
	*x = InstanceGroupAttributesUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceGroupAttributesUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceGroupAttributesUpdate) ProtoMessage() {}

func (x *InstanceGroupAttributesUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceGroupAttributesUpdate.ProtoReflect.Descriptor instead.
func (*InstanceGroupAttributesUpdate) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{12}
}

func (x *InstanceGroupAttributesUpdate) GetInstanceGroupId() string {
	if x != nil {
		return x.InstanceGroupId
	}
	return ""
}

func (x *InstanceGroupAttributesUpdate) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type DeleteInstanceGroupAttributesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceGroupId string   `protobuf:"bytes,1,opt,name=instanceGroupId,proto3" json:"instanceGroupId,omitempty"`
	Keys            []string `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *DeleteInstanceGroupAttributesRequest) Reset() {
	*x = DeleteInstanceGroupAttributesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInstanceGroupAttributesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInstanceGroupAttributesRequest) ProtoMessage() {}

func (x *DeleteInstanceGroupAttributesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInstanceGroupAttributesRequest.ProtoReflect.Descriptor instead.
func (*DeleteInstanceGroupAttributesRequest) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteInstanceGroupAttributesRequest) GetInstanceGroupId() string {
	if x != nil {
		return x.InstanceGroupId
	}
	return ""
}

func (x *DeleteInstanceGroupAttributesRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type AgentInstanceAttributesUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentInstanceId string            `protobuf:"bytes,1,opt,name=agentInstanceId,proto3" json:"agentInstanceId,omitempty"`
	Attributes      map[string]string `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AgentInstanceAttributesUpdate) Reset() {
	*x = AgentInstanceAttributesUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentInstanceAttributesUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInstanceAttributesUpdate) ProtoMessage() {}

func (x *AgentInstanceAttributesUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInstanceAttributesUpdate.ProtoReflect.Descriptor instead.
func (*AgentInstanceAttributesUpdate) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{14}
}

func (x *AgentInstanceAttributesUpdate) GetAgentInstanceId() string {
	if x != nil {
		return x.AgentInstanceId
	}
	return ""
}

func (x *AgentInstanceAttributesUpdate) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type DeleteAgentInstanceAttributesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentInstanceId string   `protobuf:"bytes,1,opt,name=agentInstanceId,proto3" json:"agentInstanceId,omitempty"`
	Keys            []string `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *DeleteAgentInstanceAttributesRequest) Reset() {
	*x = DeleteAgentInstanceAttributesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAgentInstanceAttributesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAgentInstanceAttributesRequest) ProtoMessage() {}

func (x *DeleteAgentInstanceAttributesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAgentInstanceAttributesRequest.ProtoReflect.Descriptor instead.
func (*DeleteAgentInstanceAttributesRequest) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteAgentInstanceAttributesRequest) GetAgentInstanceId() string {
	if x != nil {
		return x.AgentInstanceId
	}
	return ""
}

func (x *DeleteAgentInstanceAttributesRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

/// Sent whenever 'AgentInstanceGroup' state changes, excluding agent instances.
type AgentChangeEvent_InstanceGroupUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceGroup *AgentInstanceGroup `protobuf:"bytes,1,opt,name=instanceGroup,proto3" json:"instanceGroup,omitempty"`
}

func (x *AgentChangeEvent_InstanceGroupUpdate) Reset() {
	*x = AgentChangeEvent_InstanceGroupUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentChangeEvent_InstanceGroupUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentChangeEvent_InstanceGroupUpdate) ProtoMessage() {}

func (x *AgentChangeEvent_InstanceGroupUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentChangeEvent_InstanceGroupUpdate.ProtoReflect.Descriptor instead.
func (*AgentChangeEvent_InstanceGroupUpdate) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{5, 0}
}

func (x *AgentChangeEvent_InstanceGroupUpdate) GetInstanceGroup() *AgentInstanceGroup {
	if x != nil {
		return x.InstanceGroup
	}
	return nil
}

/// Sent whenever 'AgentInstanceGroup' is removed.
type AgentChangeEvent_InstanceGroupRemoved struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceGroupId string `protobuf:"bytes,1,opt,name=instanceGroupId,proto3" json:"instanceGroupId,omitempty"`
}

func (x *AgentChangeEvent_InstanceGroupRemoved) Reset() {
	*x = AgentChangeEvent_InstanceGroupRemoved{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentChangeEvent_InstanceGroupRemoved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentChangeEvent_InstanceGroupRemoved) ProtoMessage() {}

func (x *AgentChangeEvent_InstanceGroupRemoved) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentChangeEvent_InstanceGroupRemoved.ProtoReflect.Descriptor instead.
func (*AgentChangeEvent_InstanceGroupRemoved) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{5, 1}
}

func (x *AgentChangeEvent_InstanceGroupRemoved) GetInstanceGroupId() string {
	if x != nil {
		return x.InstanceGroupId
	}
	return ""
}

/// Sent whenever 'AgentInstance' state changes, including initial (add)/final (terminate) updates.
type AgentChangeEvent_InstanceUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instance *AgentInstance `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
}

func (x *AgentChangeEvent_InstanceUpdate) Reset() {
	*x = AgentChangeEvent_InstanceUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentChangeEvent_InstanceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentChangeEvent_InstanceUpdate) ProtoMessage() {}

func (x *AgentChangeEvent_InstanceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentChangeEvent_InstanceUpdate.ProtoReflect.Descriptor instead.
func (*AgentChangeEvent_InstanceUpdate) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{5, 2}
}

func (x *AgentChangeEvent_InstanceUpdate) GetInstance() *AgentInstance {
	if x != nil {
		return x.Instance
	}
	return nil
}

/// Sent whenever 'AgentInstance' is removed.
type AgentChangeEvent_InstanceRemoved struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
}

func (x *AgentChangeEvent_InstanceRemoved) Reset() {
	*x = AgentChangeEvent_InstanceRemoved{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentChangeEvent_InstanceRemoved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentChangeEvent_InstanceRemoved) ProtoMessage() {}

func (x *AgentChangeEvent_InstanceRemoved) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentChangeEvent_InstanceRemoved.ProtoReflect.Descriptor instead.
func (*AgentChangeEvent_InstanceRemoved) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{5, 3}
}

func (x *AgentChangeEvent_InstanceRemoved) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

/// A marker notification, indicating that all known agent state was streamed to the client.
type AgentChangeEvent_SnapshotEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AgentChangeEvent_SnapshotEnd) Reset() {
	*x = AgentChangeEvent_SnapshotEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentChangeEvent_SnapshotEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentChangeEvent_SnapshotEnd) ProtoMessage() {}

func (x *AgentChangeEvent_SnapshotEnd) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_agent_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentChangeEvent_SnapshotEnd.ProtoReflect.Descriptor instead.
func (*AgentChangeEvent_SnapshotEnd) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_agent_api_proto_rawDescGZIP(), []int{5, 4}
}

var File_netflix_titus_titus_agent_api_proto protoreflect.FileDescriptor

var file_netflix_titus_titus_agent_api_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2f, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2f,
	0x74, 0x69, 0x74, 0x75, 0x73, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c,
	0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2f, 0x74,
	0x69, 0x74, 0x75, 0x73, 0x2f, 0x74, 0x69, 0x74, 0x75, 0x73, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x84, 0x01, 0x0a, 0x17, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x3f, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74,
	0x69, 0x74, 0x75, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x66,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x6c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xd7, 0x01, 0x0a,
	0x0c, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e,
	0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x9a, 0x01, 0x0a, 0x1c, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x44, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74,
	0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0xaf, 0x03, 0x0a, 0x0d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x6c, 0x69, 0x66,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78,
	0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4c,
	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0f,
	0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x43, 0x0a, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66,
	0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x50, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e,
	0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x96, 0x05, 0x0a, 0x12, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x52, 0x0a, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78,
	0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x54, 0x69, 0x65, 0x72, 0x52, 0x04, 0x74, 0x69, 0x65,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6d, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x4c,
	0x61, 0x75, 0x6e, 0x63, 0x68, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x73, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x12, 0x69, 0x73, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x59, 0x0a, 0x0f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69,
	0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0f, 0x6c,
	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28,
	0x0a, 0x0f, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x55, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a,
	0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd8,
	0x06, 0x0a, 0x10, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x6b, 0x0a, 0x13, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74,
	0x69, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x13, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x6e, 0x0a, 0x14, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74,
	0x75, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x48, 0x00, 0x52, 0x14, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64,
	0x12, 0x66, 0x0a, 0x13, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75,
	0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x00, 0x52, 0x13, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x69, 0x0a, 0x14, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74,
	0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x48, 0x00, 0x52, 0x14, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x45,
	0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e,
	0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x45, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x45, 0x6e, 0x64, 0x1a, 0x62, 0x0a, 0x13, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x4b, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74,
	0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0d, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x40, 0x0a, 0x14,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x1a, 0x4e,
	0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x3c, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78,
	0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x31,
	0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x1a, 0x0d, 0x0a, 0x0b, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x45, 0x6e, 0x64,
	0x42, 0x07, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xfb, 0x01, 0x0a, 0x0a, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x2b, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74,
	0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x62, 0x0a, 0x11, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74,
	0x69, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x1a, 0x44, 0x0a, 0x16, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x14, 0x0a, 0x02, 0x49, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6e, 0x0a,
	0x13, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x12, 0x57, 0x0a, 0x13, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e,
	0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x13, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x5a, 0x0a,
	0x0e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x48, 0x0a, 0x0e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65,
	0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x63, 0x0a, 0x0a, 0x54, 0x69, 0x65,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69,
	0x74, 0x75, 0x73, 0x2e, 0x54, 0x69, 0x65, 0x72, 0x52, 0x04, 0x74, 0x69, 0x65, 0x72, 0x22, 0xbd,
	0x01, 0x0a, 0x21, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x56,
	0x0a, 0x0e, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74,
	0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xea,
	0x01, 0x0a, 0x1d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x60, 0x0a, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74,
	0x75, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x64, 0x0a, 0x24, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79,
	0x73, 0x22, 0xea, 0x01, 0x0a, 0x1d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x60, 0x0a,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x40, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e,
	0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a,
	0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x64,
	0x0a, 0x24, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x2a, 0x73, 0x0a, 0x16, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12,
	0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12,
	0x11, 0x0a, 0x0d, 0x4b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x10, 0x03, 0x12,
	0x18, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x04, 0x2a, 0x36, 0x0a, 0x0b, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x6e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x10,
	0x02, 0x2a, 0x55, 0x0a, 0x1b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x0c, 0x0a, 0x08, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x68,
	0x61, 0x73, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x03, 0x32, 0xc9, 0x08, 0x0a, 0x16, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74,
	0x69, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x15,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74,
	0x75, 0x73, 0x2e, 0x49, 0x64, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66,
	0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x00, 0x12, 0x4d,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78,
	0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x49, 0x64, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a,
	0x12, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69,
	0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x1a, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78,
	0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x69,
	0x65, 0x72, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78,
	0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x54, 0x69, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x21, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74,
	0x69, 0x74, 0x75, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x6b, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e,
	0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x72, 0x0a,
	0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x37,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74,
	0x75, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x6b, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78,
	0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x72,
	0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69,
	0x74, 0x75, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x22, 0x00, 0x30, 0x01, 0x42, 0x36, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66,
	0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x42, 0x0a, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x05, 0x74, 0x69, 0x74, 0x75, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_netflix_titus_titus_agent_api_proto_rawDescOnce sync.Once
	file_netflix_titus_titus_agent_api_proto_rawDescData = file_netflix_titus_titus_agent_api_proto_rawDesc
)

func file_netflix_titus_titus_agent_api_proto_rawDescGZIP() []byte {
	file_netflix_titus_titus_agent_api_proto_rawDescOnce.Do(func() {
		file_netflix_titus_titus_agent_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_netflix_titus_titus_agent_api_proto_rawDescData)
	})
	return file_netflix_titus_titus_agent_api_proto_rawDescData
}

var file_netflix_titus_titus_agent_api_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_netflix_titus_titus_agent_api_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_netflix_titus_titus_agent_api_proto_goTypes = []interface{}{
	(InstanceLifecycleState)(0),                  // 0: com.netflix.titus.InstanceLifecycleState
	(HealthState)(0),                             // 1: com.netflix.titus.HealthState
	(InstanceGroupLifecycleState)(0),             // 2: com.netflix.titus.InstanceGroupLifecycleState
	(*InstanceLifecycleStatus)(nil),              // 3: com.netflix.titus.InstanceLifecycleStatus
	(*HealthStatus)(nil),                         // 4: com.netflix.titus.HealthStatus
	(*InstanceGroupLifecycleStatus)(nil),         // 5: com.netflix.titus.InstanceGroupLifecycleStatus
	(*AgentInstance)(nil),                        // 6: com.netflix.titus.AgentInstance
	(*AgentInstanceGroup)(nil),                   // 7: com.netflix.titus.AgentInstanceGroup
	(*AgentChangeEvent)(nil),                     // 8: com.netflix.titus.AgentChangeEvent
	(*AgentQuery)(nil),                           // 9: com.netflix.titus.AgentQuery
	(*Id)(nil),                                   // 10: com.netflix.titus.Id
	(*AgentInstanceGroups)(nil),                  // 11: com.netflix.titus.AgentInstanceGroups
	(*AgentInstances)(nil),                       // 12: com.netflix.titus.AgentInstances
	(*TierUpdate)(nil),                           // 13: com.netflix.titus.TierUpdate
	(*InstanceGroupLifecycleStateUpdate)(nil),    // 14: com.netflix.titus.InstanceGroupLifecycleStateUpdate
	(*InstanceGroupAttributesUpdate)(nil),        // 15: com.netflix.titus.InstanceGroupAttributesUpdate
	(*DeleteInstanceGroupAttributesRequest)(nil), // 16: com.netflix.titus.DeleteInstanceGroupAttributesRequest
	(*AgentInstanceAttributesUpdate)(nil),        // 17: com.netflix.titus.AgentInstanceAttributesUpdate
	(*DeleteAgentInstanceAttributesRequest)(nil), // 18: com.netflix.titus.DeleteAgentInstanceAttributesRequest
	nil, // 19: com.netflix.titus.AgentInstance.AttributesEntry
	nil, // 20: com.netflix.titus.AgentInstanceGroup.AttributesEntry
	(*AgentChangeEvent_InstanceGroupUpdate)(nil),  // 21: com.netflix.titus.AgentChangeEvent.InstanceGroupUpdate
	(*AgentChangeEvent_InstanceGroupRemoved)(nil), // 22: com.netflix.titus.AgentChangeEvent.InstanceGroupRemoved
	(*AgentChangeEvent_InstanceUpdate)(nil),       // 23: com.netflix.titus.AgentChangeEvent.InstanceUpdate
	(*AgentChangeEvent_InstanceRemoved)(nil),      // 24: com.netflix.titus.AgentChangeEvent.InstanceRemoved
	(*AgentChangeEvent_SnapshotEnd)(nil),          // 25: com.netflix.titus.AgentChangeEvent.SnapshotEnd
	nil,                                           // 26: com.netflix.titus.AgentQuery.FilteringCriteriaEntry
	nil,                                           // 27: com.netflix.titus.InstanceGroupAttributesUpdate.AttributesEntry
	nil,                                           // 28: com.netflix.titus.AgentInstanceAttributesUpdate.AttributesEntry
	(*ResourceDimension)(nil),                     // 29: com.netflix.titus.ResourceDimension
	(Tier)(0),                                     // 30: com.netflix.titus.Tier
	(*Page)(nil),                                  // 31: com.netflix.titus.Page
	(*emptypb.Empty)(nil),                         // 32: google.protobuf.Empty
}
var file_netflix_titus_titus_agent_api_proto_depIdxs = []int32{
	0,  // 0: com.netflix.titus.InstanceLifecycleStatus.state:type_name -> com.netflix.titus.InstanceLifecycleState
	1,  // 1: com.netflix.titus.HealthStatus.state:type_name -> com.netflix.titus.HealthState
	4,  // 2: com.netflix.titus.HealthStatus.components:type_name -> com.netflix.titus.HealthStatus
	2,  // 3: com.netflix.titus.InstanceGroupLifecycleStatus.state:type_name -> com.netflix.titus.InstanceGroupLifecycleState
	3,  // 4: com.netflix.titus.AgentInstance.lifecycleStatus:type_name -> com.netflix.titus.InstanceLifecycleStatus
	4,  // 5: com.netflix.titus.AgentInstance.healthStatus:type_name -> com.netflix.titus.HealthStatus
	19, // 6: com.netflix.titus.AgentInstance.attributes:type_name -> com.netflix.titus.AgentInstance.AttributesEntry
	29, // 7: com.netflix.titus.AgentInstanceGroup.instanceResources:type_name -> com.netflix.titus.ResourceDimension
	30, // 8: com.netflix.titus.AgentInstanceGroup.tier:type_name -> com.netflix.titus.Tier
	5,  // 9: com.netflix.titus.AgentInstanceGroup.lifecycleStatus:type_name -> com.netflix.titus.InstanceGroupLifecycleStatus
	20, // 10: com.netflix.titus.AgentInstanceGroup.attributes:type_name -> com.netflix.titus.AgentInstanceGroup.AttributesEntry
	21, // 11: com.netflix.titus.AgentChangeEvent.instanceGroupUpdate:type_name -> com.netflix.titus.AgentChangeEvent.InstanceGroupUpdate
	22, // 12: com.netflix.titus.AgentChangeEvent.instanceGroupRemoved:type_name -> com.netflix.titus.AgentChangeEvent.InstanceGroupRemoved
	23, // 13: com.netflix.titus.AgentChangeEvent.agentInstanceUpdate:type_name -> com.netflix.titus.AgentChangeEvent.InstanceUpdate
	24, // 14: com.netflix.titus.AgentChangeEvent.agentInstanceRemoved:type_name -> com.netflix.titus.AgentChangeEvent.InstanceRemoved
	25, // 15: com.netflix.titus.AgentChangeEvent.snapshotEnd:type_name -> com.netflix.titus.AgentChangeEvent.SnapshotEnd
	31, // 16: com.netflix.titus.AgentQuery.page:type_name -> com.netflix.titus.Page
	26, // 17: com.netflix.titus.AgentQuery.filteringCriteria:type_name -> com.netflix.titus.AgentQuery.FilteringCriteriaEntry
	7,  // 18: com.netflix.titus.AgentInstanceGroups.agentInstanceGroups:type_name -> com.netflix.titus.AgentInstanceGroup
	6,  // 19: com.netflix.titus.AgentInstances.agentInstances:type_name -> com.netflix.titus.AgentInstance
	30, // 20: com.netflix.titus.TierUpdate.tier:type_name -> com.netflix.titus.Tier
	2,  // 21: com.netflix.titus.InstanceGroupLifecycleStateUpdate.lifecycleState:type_name -> com.netflix.titus.InstanceGroupLifecycleState
	27, // 22: com.netflix.titus.InstanceGroupAttributesUpdate.attributes:type_name -> com.netflix.titus.InstanceGroupAttributesUpdate.AttributesEntry
	28, // 23: com.netflix.titus.AgentInstanceAttributesUpdate.attributes:type_name -> com.netflix.titus.AgentInstanceAttributesUpdate.AttributesEntry
	7,  // 24: com.netflix.titus.AgentChangeEvent.InstanceGroupUpdate.instanceGroup:type_name -> com.netflix.titus.AgentInstanceGroup
	6,  // 25: com.netflix.titus.AgentChangeEvent.InstanceUpdate.instance:type_name -> com.netflix.titus.AgentInstance
	32, // 26: com.netflix.titus.AgentManagementService.GetInstanceGroups:input_type -> google.protobuf.Empty
	10, // 27: com.netflix.titus.AgentManagementService.GetInstanceGroup:input_type -> com.netflix.titus.Id
	10, // 28: com.netflix.titus.AgentManagementService.GetAgentInstance:input_type -> com.netflix.titus.Id
	9,  // 29: com.netflix.titus.AgentManagementService.FindAgentInstances:input_type -> com.netflix.titus.AgentQuery
	13, // 30: com.netflix.titus.AgentManagementService.UpdateInstanceGroupTier:input_type -> com.netflix.titus.TierUpdate
	14, // 31: com.netflix.titus.AgentManagementService.UpdateInstanceGroupLifecycleState:input_type -> com.netflix.titus.InstanceGroupLifecycleStateUpdate
	15, // 32: com.netflix.titus.AgentManagementService.UpdateInstanceGroupAttributes:input_type -> com.netflix.titus.InstanceGroupAttributesUpdate
	16, // 33: com.netflix.titus.AgentManagementService.DeleteInstanceGroupAttributes:input_type -> com.netflix.titus.DeleteInstanceGroupAttributesRequest
	17, // 34: com.netflix.titus.AgentManagementService.UpdateAgentInstanceAttributes:input_type -> com.netflix.titus.AgentInstanceAttributesUpdate
	18, // 35: com.netflix.titus.AgentManagementService.DeleteAgentInstanceAttributes:input_type -> com.netflix.titus.DeleteAgentInstanceAttributesRequest
	32, // 36: com.netflix.titus.AgentManagementService.ObserveAgents:input_type -> google.protobuf.Empty
	11, // 37: com.netflix.titus.AgentManagementService.GetInstanceGroups:output_type -> com.netflix.titus.AgentInstanceGroups
	7,  // 38: com.netflix.titus.AgentManagementService.GetInstanceGroup:output_type -> com.netflix.titus.AgentInstanceGroup
	6,  // 39: com.netflix.titus.AgentManagementService.GetAgentInstance:output_type -> com.netflix.titus.AgentInstance
	12, // 40: com.netflix.titus.AgentManagementService.FindAgentInstances:output_type -> com.netflix.titus.AgentInstances
	32, // 41: com.netflix.titus.AgentManagementService.UpdateInstanceGroupTier:output_type -> google.protobuf.Empty
	32, // 42: com.netflix.titus.AgentManagementService.UpdateInstanceGroupLifecycleState:output_type -> google.protobuf.Empty
	32, // 43: com.netflix.titus.AgentManagementService.UpdateInstanceGroupAttributes:output_type -> google.protobuf.Empty
	32, // 44: com.netflix.titus.AgentManagementService.DeleteInstanceGroupAttributes:output_type -> google.protobuf.Empty
	32, // 45: com.netflix.titus.AgentManagementService.UpdateAgentInstanceAttributes:output_type -> google.protobuf.Empty
	32, // 46: com.netflix.titus.AgentManagementService.DeleteAgentInstanceAttributes:output_type -> google.protobuf.Empty
	8,  // 47: com.netflix.titus.AgentManagementService.ObserveAgents:output_type -> com.netflix.titus.AgentChangeEvent
	37, // [37:48] is the sub-list for method output_type
	26, // [26:37] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_netflix_titus_titus_agent_api_proto_init() }
func file_netflix_titus_titus_agent_api_proto_init() {
	if File_netflix_titus_titus_agent_api_proto != nil {
		return
	}
	file_netflix_titus_titus_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_netflix_titus_titus_agent_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceLifecycleStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_agent_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_agent_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceGroupLifecycleStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_agent_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_agent_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInstanceGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_agent_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentChangeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_agent_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_agent_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Id); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_agent_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInstanceGroups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_agent_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInstances); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_agent_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TierUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_agent_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceGroupLifecycleStateUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_agent_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceGroupAttributesUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_agent_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInstanceGroupAttributesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_agent_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentInstanceAttributesUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_agent_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAgentInstanceAttributesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_agent_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentChangeEvent_InstanceGroupUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_agent_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentChangeEvent_InstanceGroupRemoved); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_agent_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentChangeEvent_InstanceUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_agent_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentChangeEvent_InstanceRemoved); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_agent_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentChangeEvent_SnapshotEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_netflix_titus_titus_agent_api_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*AgentChangeEvent_InstanceGroupUpdate_)(nil),
		(*AgentChangeEvent_InstanceGroupRemoved_)(nil),
		(*AgentChangeEvent_AgentInstanceUpdate)(nil),
		(*AgentChangeEvent_AgentInstanceRemoved)(nil),
		(*AgentChangeEvent_SnapshotEnd_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_netflix_titus_titus_agent_api_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_netflix_titus_titus_agent_api_proto_goTypes,
		DependencyIndexes: file_netflix_titus_titus_agent_api_proto_depIdxs,
		EnumInfos:         file_netflix_titus_titus_agent_api_proto_enumTypes,
		MessageInfos:      file_netflix_titus_titus_agent_api_proto_msgTypes,
	}.Build()
	File_netflix_titus_titus_agent_api_proto = out.File
	file_netflix_titus_titus_agent_api_proto_rawDesc = nil
	file_netflix_titus_titus_agent_api_proto_goTypes = nil
	file_netflix_titus_titus_agent_api_proto_depIdxs = nil
}

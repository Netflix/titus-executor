// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: netflix/titus/titus_vpc_api.proto

package titus

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Family int32

const (
	// Default should never really be used, but we're required to have one due to
	// protobuf
	Family_FAMILY_DEFAULT Family = 0
	Family_FAMILY_V4      Family = 1
	Family_FAMILY_V6      Family = 2
)

// Enum value maps for Family.
var (
	Family_name = map[int32]string{
		0: "FAMILY_DEFAULT",
		1: "FAMILY_V4",
		2: "FAMILY_V6",
	}
	Family_value = map[string]int32{
		"FAMILY_DEFAULT": 0,
		"FAMILY_V4":      1,
		"FAMILY_V6":      2,
	}
)

func (x Family) Enum() *Family {
	p := new(Family)
	*p = x
	return p
}

func (x Family) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Family) Descriptor() protoreflect.EnumDescriptor {
	return file_netflix_titus_titus_vpc_api_proto_enumTypes[0].Descriptor()
}

func (Family) Type() protoreflect.EnumType {
	return &file_netflix_titus_titus_vpc_api_proto_enumTypes[0]
}

func (x Family) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Family.Descriptor instead.
func (Family) EnumDescriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{0}
}

type AllocateAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressAllocation *AddressAllocation `protobuf:"bytes,1,opt,name=addressAllocation,proto3" json:"addressAllocation,omitempty"`
	Family            Family             `protobuf:"varint,2,opt,name=family,proto3,enum=com.netflix.titus.Family" json:"family,omitempty"`
	AccountId         string             `protobuf:"bytes,3,opt,name=accountId,proto3" json:"accountId,omitempty"`
}

func (x *AllocateAddressRequest) Reset() {
	*x = AllocateAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocateAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateAddressRequest) ProtoMessage() {}

func (x *AllocateAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateAddressRequest.ProtoReflect.Descriptor instead.
func (*AllocateAddressRequest) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{0}
}

func (x *AllocateAddressRequest) GetAddressAllocation() *AddressAllocation {
	if x != nil {
		return x.AddressAllocation
	}
	return nil
}

func (x *AllocateAddressRequest) GetFamily() Family {
	if x != nil {
		return x.Family
	}
	return Family_FAMILY_DEFAULT
}

func (x *AllocateAddressRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type AllocateAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedAddressAllocation *SignedAddressAllocation `protobuf:"bytes,1,opt,name=signedAddressAllocation,proto3" json:"signedAddressAllocation,omitempty"`
}

func (x *AllocateAddressResponse) Reset() {
	*x = AllocateAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocateAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateAddressResponse) ProtoMessage() {}

func (x *AllocateAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateAddressResponse.ProtoReflect.Descriptor instead.
func (*AllocateAddressResponse) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{1}
}

func (x *AllocateAddressResponse) GetSignedAddressAllocation() *SignedAddressAllocation {
	if x != nil {
		return x.SignedAddressAllocation
	}
	return nil
}

type GetAllocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SearchParameter:
	//	*GetAllocationRequest_Address
	//	*GetAllocationRequest_Uuid
	SearchParameter isGetAllocationRequest_SearchParameter `protobuf_oneof:"searchParameter"`
}

func (x *GetAllocationRequest) Reset() {
	*x = GetAllocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllocationRequest) ProtoMessage() {}

func (x *GetAllocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllocationRequest.ProtoReflect.Descriptor instead.
func (*GetAllocationRequest) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{2}
}

func (m *GetAllocationRequest) GetSearchParameter() isGetAllocationRequest_SearchParameter {
	if m != nil {
		return m.SearchParameter
	}
	return nil
}

func (x *GetAllocationRequest) GetAddress() string {
	if x, ok := x.GetSearchParameter().(*GetAllocationRequest_Address); ok {
		return x.Address
	}
	return ""
}

func (x *GetAllocationRequest) GetUuid() string {
	if x, ok := x.GetSearchParameter().(*GetAllocationRequest_Uuid); ok {
		return x.Uuid
	}
	return ""
}

type isGetAllocationRequest_SearchParameter interface {
	isGetAllocationRequest_SearchParameter()
}

type GetAllocationRequest_Address struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3,oneof"`
}

type GetAllocationRequest_Uuid struct {
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3,oneof"`
}

func (*GetAllocationRequest_Address) isGetAllocationRequest_SearchParameter() {}

func (*GetAllocationRequest_Uuid) isGetAllocationRequest_SearchParameter() {}

type GetAllocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressAllocation       *AddressAllocation       `protobuf:"bytes,1,opt,name=addressAllocation,proto3" json:"addressAllocation,omitempty"`
	SignedAddressAllocation *SignedAddressAllocation `protobuf:"bytes,2,opt,name=signedAddressAllocation,proto3" json:"signedAddressAllocation,omitempty"`
}

func (x *GetAllocationResponse) Reset() {
	*x = GetAllocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllocationResponse) ProtoMessage() {}

func (x *GetAllocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllocationResponse.ProtoReflect.Descriptor instead.
func (*GetAllocationResponse) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllocationResponse) GetAddressAllocation() *AddressAllocation {
	if x != nil {
		return x.AddressAllocation
	}
	return nil
}

func (x *GetAllocationResponse) GetSignedAddressAllocation() *SignedAddressAllocation {
	if x != nil {
		return x.SignedAddressAllocation
	}
	return nil
}

type ValidationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedAddressAllocation *SignedAddressAllocation `protobuf:"bytes,1,opt,name=signedAddressAllocation,proto3" json:"signedAddressAllocation,omitempty"`
}

func (x *ValidationRequest) Reset() {
	*x = ValidationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationRequest) ProtoMessage() {}

func (x *ValidationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationRequest.ProtoReflect.Descriptor instead.
func (*ValidationRequest) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{4}
}

func (x *ValidationRequest) GetSignedAddressAllocation() *SignedAddressAllocation {
	if x != nil {
		return x.SignedAddressAllocation
	}
	return nil
}

type ValidationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidationResponse) Reset() {
	*x = ValidationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationResponse) ProtoMessage() {}

func (x *ValidationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationResponse.ProtoReflect.Descriptor instead.
func (*ValidationResponse) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{5}
}

type ParametersValidationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId      string   `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Subnets        []string `protobuf:"bytes,2,rep,name=subnets,proto3" json:"subnets,omitempty"`
	SecurityGroups []string `protobuf:"bytes,3,rep,name=securityGroups,proto3" json:"securityGroups,omitempty"`
}

func (x *ParametersValidationRequest) Reset() {
	*x = ParametersValidationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParametersValidationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParametersValidationRequest) ProtoMessage() {}

func (x *ParametersValidationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParametersValidationRequest.ProtoReflect.Descriptor instead.
func (*ParametersValidationRequest) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{6}
}

func (x *ParametersValidationRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ParametersValidationRequest) GetSubnets() []string {
	if x != nil {
		return x.Subnets
	}
	return nil
}

func (x *ParametersValidationRequest) GetSecurityGroups() []string {
	if x != nil {
		return x.SecurityGroups
	}
	return nil
}

type ParametersValidationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If the following structure does not contain any failure elements, it
	// implies a validation success
	ValidationFailures []*ParametersValidationResponse_ValidationFailure `protobuf:"bytes,1,rep,name=validationFailures,proto3" json:"validationFailures,omitempty"`
}

func (x *ParametersValidationResponse) Reset() {
	*x = ParametersValidationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParametersValidationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParametersValidationResponse) ProtoMessage() {}

func (x *ParametersValidationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParametersValidationResponse.ProtoReflect.Descriptor instead.
func (*ParametersValidationResponse) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{7}
}

func (x *ParametersValidationResponse) GetValidationFailures() []*ParametersValidationResponse_ValidationFailure {
	if x != nil {
		return x.ValidationFailures
	}
	return nil
}

// V2 API
type AllocateStaticIPAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required (The subnet where to allocate the address)
	SubnetId string `protobuf:"bytes,1,opt,name=subnetId,proto3" json:"subnetId,omitempty"`
	// Optional. If specified, and an ID with that already exists, it will return
	// an error. This allows for idempotent requests.
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Optional. Pool is an indexed column that can be used to select static IPs
	// by.
	Pool string `protobuf:"bytes,3,opt,name=pool,proto3" json:"pool,omitempty"`
	// Optional
	Tags map[string]string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AllocateStaticIPAddressRequest) Reset() {
	*x = AllocateStaticIPAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocateStaticIPAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateStaticIPAddressRequest) ProtoMessage() {}

func (x *AllocateStaticIPAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateStaticIPAddressRequest.ProtoReflect.Descriptor instead.
func (*AllocateStaticIPAddressRequest) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{8}
}

func (x *AllocateStaticIPAddressRequest) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *AllocateStaticIPAddressRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AllocateStaticIPAddressRequest) GetPool() string {
	if x != nil {
		return x.Pool
	}
	return ""
}

func (x *AllocateStaticIPAddressRequest) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type AllocateStaticIPAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaticIPAddress *StaticIPAddress `protobuf:"bytes,1,opt,name=staticIPAddress,proto3" json:"staticIPAddress,omitempty"`
}

func (x *AllocateStaticIPAddressResponse) Reset() {
	*x = AllocateStaticIPAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocateStaticIPAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateStaticIPAddressResponse) ProtoMessage() {}

func (x *AllocateStaticIPAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateStaticIPAddressResponse.ProtoReflect.Descriptor instead.
func (*AllocateStaticIPAddressResponse) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{9}
}

func (x *AllocateStaticIPAddressResponse) GetStaticIPAddress() *StaticIPAddress {
	if x != nil {
		return x.StaticIPAddress
	}
	return nil
}

type AddressLocationV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId          string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	AvailabilityZone   string `protobuf:"bytes,2,opt,name=availabilityZone,proto3" json:"availabilityZone,omitempty"`
	AvailabilityZoneId string `protobuf:"bytes,3,opt,name=availabilityZoneId,proto3" json:"availabilityZoneId,omitempty"`
	VpcId              string `protobuf:"bytes,4,opt,name=vpcId,proto3" json:"vpcId,omitempty"`
	SubnetId           string `protobuf:"bytes,5,opt,name=subnetId,proto3" json:"subnetId,omitempty"`
}

func (x *AddressLocationV2) Reset() {
	*x = AddressLocationV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressLocationV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressLocationV2) ProtoMessage() {}

func (x *AddressLocationV2) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressLocationV2.ProtoReflect.Descriptor instead.
func (*AddressLocationV2) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{10}
}

func (x *AddressLocationV2) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AddressLocationV2) GetAvailabilityZone() string {
	if x != nil {
		return x.AvailabilityZone
	}
	return ""
}

func (x *AddressLocationV2) GetAvailabilityZoneId() string {
	if x != nil {
		return x.AvailabilityZoneId
	}
	return ""
}

func (x *AddressLocationV2) GetVpcId() string {
	if x != nil {
		return x.VpcId
	}
	return ""
}

func (x *AddressLocationV2) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

type StaticIPAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid            string             `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Ipv4Address     string             `protobuf:"bytes,2,opt,name=ipv4Address,proto3" json:"ipv4Address,omitempty"`
	Ipv6Address     string             `protobuf:"bytes,3,opt,name=ipv6Address,proto3" json:"ipv6Address,omitempty"`
	Pool            string             `protobuf:"bytes,4,opt,name=pool,proto3" json:"pool,omitempty"`
	Tags            map[string]string  `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AddressLocation *AddressLocationV2 `protobuf:"bytes,6,opt,name=addressLocation,proto3" json:"addressLocation,omitempty"`
}

func (x *StaticIPAddress) Reset() {
	*x = StaticIPAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaticIPAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticIPAddress) ProtoMessage() {}

func (x *StaticIPAddress) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticIPAddress.ProtoReflect.Descriptor instead.
func (*StaticIPAddress) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{11}
}

func (x *StaticIPAddress) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *StaticIPAddress) GetIpv4Address() string {
	if x != nil {
		return x.Ipv4Address
	}
	return ""
}

func (x *StaticIPAddress) GetIpv6Address() string {
	if x != nil {
		return x.Ipv6Address
	}
	return ""
}

func (x *StaticIPAddress) GetPool() string {
	if x != nil {
		return x.Pool
	}
	return ""
}

func (x *StaticIPAddress) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *StaticIPAddress) GetAddressLocation() *AddressLocationV2 {
	if x != nil {
		return x.AddressLocation
	}
	return nil
}

type SetPoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// If Pool is unset, it's equivalent of removing it from that pool
	Pool string `protobuf:"bytes,2,opt,name=pool,proto3" json:"pool,omitempty"`
}

func (x *SetPoolRequest) Reset() {
	*x = SetPoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPoolRequest) ProtoMessage() {}

func (x *SetPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPoolRequest.ProtoReflect.Descriptor instead.
func (*SetPoolRequest) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{12}
}

func (x *SetPoolRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SetPoolRequest) GetPool() string {
	if x != nil {
		return x.Pool
	}
	return ""
}

type SetPoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetPoolResponse) Reset() {
	*x = SetPoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPoolResponse) ProtoMessage() {}

func (x *SetPoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPoolResponse.ProtoReflect.Descriptor instead.
func (*SetPoolResponse) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{13}
}

type CreateTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid  string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Key   string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	// If upsert is false, and the tag exists, this call will fail.
	Upsert bool `protobuf:"varint,4,opt,name=upsert,proto3" json:"upsert,omitempty"`
}

func (x *CreateTagRequest) Reset() {
	*x = CreateTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTagRequest) ProtoMessage() {}

func (x *CreateTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTagRequest.ProtoReflect.Descriptor instead.
func (*CreateTagRequest) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{14}
}

func (x *CreateTagRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *CreateTagRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CreateTagRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CreateTagRequest) GetUpsert() bool {
	if x != nil {
		return x.Upsert
	}
	return false
}

type CreateTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateTagResponse) Reset() {
	*x = CreateTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTagResponse) ProtoMessage() {}

func (x *CreateTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTagResponse.ProtoReflect.Descriptor instead.
func (*CreateTagResponse) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{15}
}

type DeleteTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Key  string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DeleteTagRequest) Reset() {
	*x = DeleteTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTagRequest) ProtoMessage() {}

func (x *DeleteTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTagRequest.ProtoReflect.Descriptor instead.
func (*DeleteTagRequest) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteTagRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *DeleteTagRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type DeleteTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTagResponse) Reset() {
	*x = DeleteTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTagResponse) ProtoMessage() {}

func (x *DeleteTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTagResponse.ProtoReflect.Descriptor instead.
func (*DeleteTagResponse) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{17}
}

// If the tag is unset, then do not set it
type UpdateTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid  string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Key   string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UpdateTagRequest) Reset() {
	*x = UpdateTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTagRequest) ProtoMessage() {}

func (x *UpdateTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTagRequest.ProtoReflect.Descriptor instead.
func (*UpdateTagRequest) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateTagRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UpdateTagRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UpdateTagRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type UpdateTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTagResponse) Reset() {
	*x = UpdateTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTagResponse) ProtoMessage() {}

func (x *UpdateTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTagResponse.ProtoReflect.Descriptor instead.
func (*UpdateTagResponse) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{19}
}

type AddressSearchParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Either an IPv4 or IPv6 address. If it's an IPv4 address, then subnetId or
	// vpcId have to be specified
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Types that are assignable to Location:
	//	*AddressSearchParameter_Empty
	//	*AddressSearchParameter_SubnetId
	//	*AddressSearchParameter_VpcId
	Location isAddressSearchParameter_Location `protobuf_oneof:"location"`
}

func (x *AddressSearchParameter) Reset() {
	*x = AddressSearchParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressSearchParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressSearchParameter) ProtoMessage() {}

func (x *AddressSearchParameter) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressSearchParameter.ProtoReflect.Descriptor instead.
func (*AddressSearchParameter) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{20}
}

func (x *AddressSearchParameter) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (m *AddressSearchParameter) GetLocation() isAddressSearchParameter_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (x *AddressSearchParameter) GetEmpty() *emptypb.Empty {
	if x, ok := x.GetLocation().(*AddressSearchParameter_Empty); ok {
		return x.Empty
	}
	return nil
}

func (x *AddressSearchParameter) GetSubnetId() string {
	if x, ok := x.GetLocation().(*AddressSearchParameter_SubnetId); ok {
		return x.SubnetId
	}
	return ""
}

func (x *AddressSearchParameter) GetVpcId() string {
	if x, ok := x.GetLocation().(*AddressSearchParameter_VpcId); ok {
		return x.VpcId
	}
	return ""
}

type isAddressSearchParameter_Location interface {
	isAddressSearchParameter_Location()
}

type AddressSearchParameter_Empty struct {
	// This can be empty if address is a v6 address, otherwise it must be
	// specified
	Empty *emptypb.Empty `protobuf:"bytes,2,opt,name=empty,proto3,oneof"`
}

type AddressSearchParameter_SubnetId struct {
	SubnetId string `protobuf:"bytes,3,opt,name=subnetId,proto3,oneof"`
}

type AddressSearchParameter_VpcId struct {
	VpcId string `protobuf:"bytes,4,opt,name=vpcId,proto3,oneof"`
}

func (*AddressSearchParameter_Empty) isAddressSearchParameter_Location() {}

func (*AddressSearchParameter_SubnetId) isAddressSearchParameter_Location() {}

func (*AddressSearchParameter_VpcId) isAddressSearchParameter_Location() {}

type GetStaticIPAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SearchParameter:
	//	*GetStaticIPAddressRequest_Uuid
	//	*GetStaticIPAddressRequest_AddressSearchParameter
	SearchParameter isGetStaticIPAddressRequest_SearchParameter `protobuf_oneof:"searchParameter"`
}

func (x *GetStaticIPAddressRequest) Reset() {
	*x = GetStaticIPAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStaticIPAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStaticIPAddressRequest) ProtoMessage() {}

func (x *GetStaticIPAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStaticIPAddressRequest.ProtoReflect.Descriptor instead.
func (*GetStaticIPAddressRequest) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{21}
}

func (m *GetStaticIPAddressRequest) GetSearchParameter() isGetStaticIPAddressRequest_SearchParameter {
	if m != nil {
		return m.SearchParameter
	}
	return nil
}

func (x *GetStaticIPAddressRequest) GetUuid() string {
	if x, ok := x.GetSearchParameter().(*GetStaticIPAddressRequest_Uuid); ok {
		return x.Uuid
	}
	return ""
}

func (x *GetStaticIPAddressRequest) GetAddressSearchParameter() *AddressSearchParameter {
	if x, ok := x.GetSearchParameter().(*GetStaticIPAddressRequest_AddressSearchParameter); ok {
		return x.AddressSearchParameter
	}
	return nil
}

type isGetStaticIPAddressRequest_SearchParameter interface {
	isGetStaticIPAddressRequest_SearchParameter()
}

type GetStaticIPAddressRequest_Uuid struct {
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3,oneof"`
}

type GetStaticIPAddressRequest_AddressSearchParameter struct {
	AddressSearchParameter *AddressSearchParameter `protobuf:"bytes,2,opt,name=addressSearchParameter,proto3,oneof"`
}

func (*GetStaticIPAddressRequest_Uuid) isGetStaticIPAddressRequest_SearchParameter() {}

func (*GetStaticIPAddressRequest_AddressSearchParameter) isGetStaticIPAddressRequest_SearchParameter() {
}

type GetStaticIPAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaticIPAddress *StaticIPAddress `protobuf:"bytes,1,opt,name=staticIPAddress,proto3" json:"staticIPAddress,omitempty"`
}

func (x *GetStaticIPAddressResponse) Reset() {
	*x = GetStaticIPAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStaticIPAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStaticIPAddressResponse) ProtoMessage() {}

func (x *GetStaticIPAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStaticIPAddressResponse.ProtoReflect.Descriptor instead.
func (*GetStaticIPAddressResponse) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{22}
}

func (x *GetStaticIPAddressResponse) GetStaticIPAddress() *StaticIPAddress {
	if x != nil {
		return x.StaticIPAddress
	}
	return nil
}

// This is really only meant to be used by (the) control plane(s)
type GetStaticIPAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SearchParameter:
	//	*GetStaticIPAddressesRequest_Pool
	//	*GetStaticIPAddressesRequest_Addresses
	SearchParameter isGetStaticIPAddressesRequest_SearchParameter `protobuf_oneof:"searchParameter"`
}

func (x *GetStaticIPAddressesRequest) Reset() {
	*x = GetStaticIPAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStaticIPAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStaticIPAddressesRequest) ProtoMessage() {}

func (x *GetStaticIPAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStaticIPAddressesRequest.ProtoReflect.Descriptor instead.
func (*GetStaticIPAddressesRequest) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{23}
}

func (m *GetStaticIPAddressesRequest) GetSearchParameter() isGetStaticIPAddressesRequest_SearchParameter {
	if m != nil {
		return m.SearchParameter
	}
	return nil
}

func (x *GetStaticIPAddressesRequest) GetPool() string {
	if x, ok := x.GetSearchParameter().(*GetStaticIPAddressesRequest_Pool); ok {
		return x.Pool
	}
	return ""
}

func (x *GetStaticIPAddressesRequest) GetAddresses() *StaticIPAddressIDs {
	if x, ok := x.GetSearchParameter().(*GetStaticIPAddressesRequest_Addresses); ok {
		return x.Addresses
	}
	return nil
}

type isGetStaticIPAddressesRequest_SearchParameter interface {
	isGetStaticIPAddressesRequest_SearchParameter()
}

type GetStaticIPAddressesRequest_Pool struct {
	Pool string `protobuf:"bytes,1,opt,name=pool,proto3,oneof"`
}

type GetStaticIPAddressesRequest_Addresses struct {
	Addresses *StaticIPAddressIDs `protobuf:"bytes,2,opt,name=addresses,proto3,oneof"`
}

func (*GetStaticIPAddressesRequest_Pool) isGetStaticIPAddressesRequest_SearchParameter() {}

func (*GetStaticIPAddressesRequest_Addresses) isGetStaticIPAddressesRequest_SearchParameter() {}

type GetStaticIPAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaticIPAddresses []*StaticIPAddress `protobuf:"bytes,1,rep,name=staticIPAddresses,proto3" json:"staticIPAddresses,omitempty"`
}

func (x *GetStaticIPAddressesResponse) Reset() {
	*x = GetStaticIPAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStaticIPAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStaticIPAddressesResponse) ProtoMessage() {}

func (x *GetStaticIPAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStaticIPAddressesResponse.ProtoReflect.Descriptor instead.
func (*GetStaticIPAddressesResponse) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{24}
}

func (x *GetStaticIPAddressesResponse) GetStaticIPAddresses() []*StaticIPAddress {
	if x != nil {
		return x.StaticIPAddresses
	}
	return nil
}

type GetBranchToTrunkENIMappingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBranchToTrunkENIMappingRequest) Reset() {
	*x = GetBranchToTrunkENIMappingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBranchToTrunkENIMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchToTrunkENIMappingRequest) ProtoMessage() {}

func (x *GetBranchToTrunkENIMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchToTrunkENIMappingRequest.ProtoReflect.Descriptor instead.
func (*GetBranchToTrunkENIMappingRequest) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{25}
}

type GetBranchToTrunkENIMappingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This map is branchENI => trunkENI
	BranchENIMapping map[string]string `protobuf:"bytes,1,rep,name=branchENIMapping,proto3" json:"branchENIMapping,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetBranchToTrunkENIMappingResponse) Reset() {
	*x = GetBranchToTrunkENIMappingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBranchToTrunkENIMappingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBranchToTrunkENIMappingResponse) ProtoMessage() {}

func (x *GetBranchToTrunkENIMappingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBranchToTrunkENIMappingResponse.ProtoReflect.Descriptor instead.
func (*GetBranchToTrunkENIMappingResponse) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{26}
}

func (x *GetBranchToTrunkENIMappingResponse) GetBranchENIMapping() map[string]string {
	if x != nil {
		return x.BranchENIMapping
	}
	return nil
}

type ResetSecurityGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityGroupID string `protobuf:"bytes,1,opt,name=securityGroupID,proto3" json:"securityGroupID,omitempty"`
}

func (x *ResetSecurityGroupRequest) Reset() {
	*x = ResetSecurityGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetSecurityGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetSecurityGroupRequest) ProtoMessage() {}

func (x *ResetSecurityGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetSecurityGroupRequest.ProtoReflect.Descriptor instead.
func (*ResetSecurityGroupRequest) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{27}
}

func (x *ResetSecurityGroupRequest) GetSecurityGroupID() string {
	if x != nil {
		return x.SecurityGroupID
	}
	return ""
}

type ResetSecurityGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetSecurityGroupResponse) Reset() {
	*x = ResetSecurityGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetSecurityGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetSecurityGroupResponse) ProtoMessage() {}

func (x *ResetSecurityGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetSecurityGroupResponse.ProtoReflect.Descriptor instead.
func (*ResetSecurityGroupResponse) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{28}
}

type ParametersValidationResponse_UnknownFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Failure string `protobuf:"bytes,1,opt,name=failure,proto3" json:"failure,omitempty"`
}

func (x *ParametersValidationResponse_UnknownFailure) Reset() {
	*x = ParametersValidationResponse_UnknownFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParametersValidationResponse_UnknownFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParametersValidationResponse_UnknownFailure) ProtoMessage() {}

func (x *ParametersValidationResponse_UnknownFailure) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParametersValidationResponse_UnknownFailure.ProtoReflect.Descriptor instead.
func (*ParametersValidationResponse_UnknownFailure) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ParametersValidationResponse_UnknownFailure) GetFailure() string {
	if x != nil {
		return x.Failure
	}
	return ""
}

type ParametersValidationResponse_SubnetNotFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubnetId string `protobuf:"bytes,1,opt,name=subnetId,proto3" json:"subnetId,omitempty"`
}

func (x *ParametersValidationResponse_SubnetNotFound) Reset() {
	*x = ParametersValidationResponse_SubnetNotFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParametersValidationResponse_SubnetNotFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParametersValidationResponse_SubnetNotFound) ProtoMessage() {}

func (x *ParametersValidationResponse_SubnetNotFound) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParametersValidationResponse_SubnetNotFound.ProtoReflect.Descriptor instead.
func (*ParametersValidationResponse_SubnetNotFound) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{7, 1}
}

func (x *ParametersValidationResponse_SubnetNotFound) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

type ParametersValidationResponse_SecurityGroupNotFound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityGroup string `protobuf:"bytes,1,opt,name=securityGroup,proto3" json:"securityGroup,omitempty"`
}

func (x *ParametersValidationResponse_SecurityGroupNotFound) Reset() {
	*x = ParametersValidationResponse_SecurityGroupNotFound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParametersValidationResponse_SecurityGroupNotFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParametersValidationResponse_SecurityGroupNotFound) ProtoMessage() {}

func (x *ParametersValidationResponse_SecurityGroupNotFound) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParametersValidationResponse_SecurityGroupNotFound.ProtoReflect.Descriptor instead.
func (*ParametersValidationResponse_SecurityGroupNotFound) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{7, 2}
}

func (x *ParametersValidationResponse_SecurityGroupNotFound) GetSecurityGroup() string {
	if x != nil {
		return x.SecurityGroup
	}
	return ""
}

type ParametersValidationResponse_AccountIdUnsupported struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
}

func (x *ParametersValidationResponse_AccountIdUnsupported) Reset() {
	*x = ParametersValidationResponse_AccountIdUnsupported{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParametersValidationResponse_AccountIdUnsupported) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParametersValidationResponse_AccountIdUnsupported) ProtoMessage() {}

func (x *ParametersValidationResponse_AccountIdUnsupported) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParametersValidationResponse_AccountIdUnsupported.ProtoReflect.Descriptor instead.
func (*ParametersValidationResponse_AccountIdUnsupported) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{7, 3}
}

func (x *ParametersValidationResponse_AccountIdUnsupported) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type ParametersValidationResponse_SubnetDoesNotMatchAccountId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubnetId string `protobuf:"bytes,1,opt,name=subnetId,proto3" json:"subnetId,omitempty"`
}

func (x *ParametersValidationResponse_SubnetDoesNotMatchAccountId) Reset() {
	*x = ParametersValidationResponse_SubnetDoesNotMatchAccountId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParametersValidationResponse_SubnetDoesNotMatchAccountId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParametersValidationResponse_SubnetDoesNotMatchAccountId) ProtoMessage() {}

func (x *ParametersValidationResponse_SubnetDoesNotMatchAccountId) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParametersValidationResponse_SubnetDoesNotMatchAccountId.ProtoReflect.Descriptor instead.
func (*ParametersValidationResponse_SubnetDoesNotMatchAccountId) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{7, 4}
}

func (x *ParametersValidationResponse_SubnetDoesNotMatchAccountId) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

type ParametersValidationResponse_SubnetsTooDiverse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubnetId string `protobuf:"bytes,1,opt,name=subnetId,proto3" json:"subnetId,omitempty"`
}

func (x *ParametersValidationResponse_SubnetsTooDiverse) Reset() {
	*x = ParametersValidationResponse_SubnetsTooDiverse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParametersValidationResponse_SubnetsTooDiverse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParametersValidationResponse_SubnetsTooDiverse) ProtoMessage() {}

func (x *ParametersValidationResponse_SubnetsTooDiverse) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParametersValidationResponse_SubnetsTooDiverse.ProtoReflect.Descriptor instead.
func (*ParametersValidationResponse_SubnetsTooDiverse) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{7, 5}
}

func (x *ParametersValidationResponse_SubnetsTooDiverse) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

type ParametersValidationResponse_ValidationFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to FailureOneOf:
	//	*ParametersValidationResponse_ValidationFailure_UnknownFailure
	//	*ParametersValidationResponse_ValidationFailure_SubnetNotFound
	//	*ParametersValidationResponse_ValidationFailure_SecurityGroupNotFound
	//	*ParametersValidationResponse_ValidationFailure_AccountIdUnsupported
	//	*ParametersValidationResponse_ValidationFailure_SubnetDoesNotMatchAccountId
	//	*ParametersValidationResponse_ValidationFailure_SubnetsTooDiverse
	FailureOneOf isParametersValidationResponse_ValidationFailure_FailureOneOf `protobuf_oneof:"failureOneOf"`
}

func (x *ParametersValidationResponse_ValidationFailure) Reset() {
	*x = ParametersValidationResponse_ValidationFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParametersValidationResponse_ValidationFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParametersValidationResponse_ValidationFailure) ProtoMessage() {}

func (x *ParametersValidationResponse_ValidationFailure) ProtoReflect() protoreflect.Message {
	mi := &file_netflix_titus_titus_vpc_api_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParametersValidationResponse_ValidationFailure.ProtoReflect.Descriptor instead.
func (*ParametersValidationResponse_ValidationFailure) Descriptor() ([]byte, []int) {
	return file_netflix_titus_titus_vpc_api_proto_rawDescGZIP(), []int{7, 6}
}

func (m *ParametersValidationResponse_ValidationFailure) GetFailureOneOf() isParametersValidationResponse_ValidationFailure_FailureOneOf {
	if m != nil {
		return m.FailureOneOf
	}
	return nil
}

func (x *ParametersValidationResponse_ValidationFailure) GetUnknownFailure() *ParametersValidationResponse_UnknownFailure {
	if x, ok := x.GetFailureOneOf().(*ParametersValidationResponse_ValidationFailure_UnknownFailure); ok {
		return x.UnknownFailure
	}
	return nil
}

func (x *ParametersValidationResponse_ValidationFailure) GetSubnetNotFound() *ParametersValidationResponse_SubnetNotFound {
	if x, ok := x.GetFailureOneOf().(*ParametersValidationResponse_ValidationFailure_SubnetNotFound); ok {
		return x.SubnetNotFound
	}
	return nil
}

func (x *ParametersValidationResponse_ValidationFailure) GetSecurityGroupNotFound() *ParametersValidationResponse_SecurityGroupNotFound {
	if x, ok := x.GetFailureOneOf().(*ParametersValidationResponse_ValidationFailure_SecurityGroupNotFound); ok {
		return x.SecurityGroupNotFound
	}
	return nil
}

func (x *ParametersValidationResponse_ValidationFailure) GetAccountIdUnsupported() *ParametersValidationResponse_AccountIdUnsupported {
	if x, ok := x.GetFailureOneOf().(*ParametersValidationResponse_ValidationFailure_AccountIdUnsupported); ok {
		return x.AccountIdUnsupported
	}
	return nil
}

func (x *ParametersValidationResponse_ValidationFailure) GetSubnetDoesNotMatchAccountId() *ParametersValidationResponse_SubnetDoesNotMatchAccountId {
	if x, ok := x.GetFailureOneOf().(*ParametersValidationResponse_ValidationFailure_SubnetDoesNotMatchAccountId); ok {
		return x.SubnetDoesNotMatchAccountId
	}
	return nil
}

func (x *ParametersValidationResponse_ValidationFailure) GetSubnetsTooDiverse() *ParametersValidationResponse_SubnetsTooDiverse {
	if x, ok := x.GetFailureOneOf().(*ParametersValidationResponse_ValidationFailure_SubnetsTooDiverse); ok {
		return x.SubnetsTooDiverse
	}
	return nil
}

type isParametersValidationResponse_ValidationFailure_FailureOneOf interface {
	isParametersValidationResponse_ValidationFailure_FailureOneOf()
}

type ParametersValidationResponse_ValidationFailure_UnknownFailure struct {
	UnknownFailure *ParametersValidationResponse_UnknownFailure `protobuf:"bytes,1,opt,name=unknownFailure,proto3,oneof"`
}

type ParametersValidationResponse_ValidationFailure_SubnetNotFound struct {
	SubnetNotFound *ParametersValidationResponse_SubnetNotFound `protobuf:"bytes,2,opt,name=subnetNotFound,proto3,oneof"`
}

type ParametersValidationResponse_ValidationFailure_SecurityGroupNotFound struct {
	SecurityGroupNotFound *ParametersValidationResponse_SecurityGroupNotFound `protobuf:"bytes,3,opt,name=securityGroupNotFound,proto3,oneof"`
}

type ParametersValidationResponse_ValidationFailure_AccountIdUnsupported struct {
	AccountIdUnsupported *ParametersValidationResponse_AccountIdUnsupported `protobuf:"bytes,4,opt,name=accountIdUnsupported,proto3,oneof"`
}

type ParametersValidationResponse_ValidationFailure_SubnetDoesNotMatchAccountId struct {
	SubnetDoesNotMatchAccountId *ParametersValidationResponse_SubnetDoesNotMatchAccountId `protobuf:"bytes,5,opt,name=subnetDoesNotMatchAccountId,proto3,oneof"`
}

type ParametersValidationResponse_ValidationFailure_SubnetsTooDiverse struct {
	SubnetsTooDiverse *ParametersValidationResponse_SubnetsTooDiverse `protobuf:"bytes,6,opt,name=subnetsTooDiverse,proto3,oneof"`
}

func (*ParametersValidationResponse_ValidationFailure_UnknownFailure) isParametersValidationResponse_ValidationFailure_FailureOneOf() {
}

func (*ParametersValidationResponse_ValidationFailure_SubnetNotFound) isParametersValidationResponse_ValidationFailure_FailureOneOf() {
}

func (*ParametersValidationResponse_ValidationFailure_SecurityGroupNotFound) isParametersValidationResponse_ValidationFailure_FailureOneOf() {
}

func (*ParametersValidationResponse_ValidationFailure_AccountIdUnsupported) isParametersValidationResponse_ValidationFailure_FailureOneOf() {
}

func (*ParametersValidationResponse_ValidationFailure_SubnetDoesNotMatchAccountId) isParametersValidationResponse_ValidationFailure_FailureOneOf() {
}

func (*ParametersValidationResponse_ValidationFailure_SubnetsTooDiverse) isParametersValidationResponse_ValidationFailure_FailureOneOf() {
}

var File_netflix_titus_titus_vpc_api_proto protoreflect.FileDescriptor

var file_netflix_titus_titus_vpc_api_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2f, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2f,
	0x74, 0x69, 0x74, 0x75, 0x73, 0x5f, 0x76, 0x70, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78,
	0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x1a, 0x1e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2f,
	0x74, 0x69, 0x74, 0x75, 0x73, 0x2f, 0x74, 0x69, 0x74, 0x75, 0x73, 0x5f, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x01, 0x0a, 0x16, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52,
	0x0a, 0x11, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x11, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78,
	0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x06, 0x66,
	0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x17, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64,
	0x0a, 0x17, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69,
	0x74, 0x75, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x17, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x42, 0x11,
	0x0a, 0x0f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x22, 0xd1, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x11, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74,
	0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x64, 0x0a, 0x17, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74,
	0x69, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x17, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x79, 0x0a, 0x11, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x64, 0x0a, 0x17, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x17, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x14, 0x0a, 0x12, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7d, 0x0a, 0x1b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x12, 0x26, 0x0a,
	0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0xc6, 0x09, 0x0a, 0x1c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x12, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78,
	0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x12, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x1a, 0x2a, 0x0a, 0x0e, 0x55, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x1a, 0x2c, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x4e,
	0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x49, 0x64, 0x1a, 0x3d, 0x0a, 0x15, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x1a, 0x34, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x55,
	0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x39, 0x0a, 0x1b, 0x53, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x44, 0x6f, 0x65, 0x73, 0x4e, 0x6f, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x49, 0x64, 0x1a, 0x2f, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x54, 0x6f,
	0x6f, 0x44, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x49, 0x64, 0x1a, 0xf7, 0x05, 0x0a, 0x11, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x68, 0x0a, 0x0e, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78,
	0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x12, 0x68, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x4e, 0x6f,
	0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73,
	0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0e,
	0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x7d,
	0x0a, 0x15, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75,
	0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x15, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x7a, 0x0a,
	0x14, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x55, 0x6e, 0x73, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x55, 0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x48, 0x00, 0x52, 0x14, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x55, 0x6e,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x8f, 0x01, 0x0a, 0x1b, 0x73, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x44, 0x6f, 0x65, 0x73, 0x4e, 0x6f, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x4b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69,
	0x74, 0x75, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x44, 0x6f, 0x65, 0x73, 0x4e, 0x6f, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x48, 0x00, 0x52, 0x1b,
	0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x44, 0x6f, 0x65, 0x73, 0x4e, 0x6f, 0x74, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x71, 0x0a, 0x11, 0x73,
	0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x54, 0x6f, 0x6f, 0x44, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74,
	0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x54,
	0x6f, 0x6f, 0x44, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x73, 0x75, 0x62,
	0x6e, 0x65, 0x74, 0x73, 0x54, 0x6f, 0x6f, 0x44, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x42, 0x0e,
	0x0a, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x22, 0xee,
	0x01, 0x0a, 0x1e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x12, 0x4f, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69,
	0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x6f, 0x0a, 0x1f, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x49, 0x50, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x0f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0xbf, 0x01, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x56, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x5a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5a, 0x6f, 0x6e, 0x65,
	0x12, 0x2e, 0x0a, 0x12, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x70, 0x63, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x70, 0x63, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74,
	0x49, 0x64, 0x22, 0xc8, 0x02, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x49, 0x50, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x70,
	0x76, 0x34, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x69, 0x70, 0x76, 0x34, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x69, 0x70, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x69, 0x70, 0x76, 0x36, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x6f, 0x6c, 0x12, 0x40, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74,
	0x69, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x49, 0x50, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x4e, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75,
	0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x32, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x38, 0x0a,
	0x0e, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x50, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x66, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x16,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x2e, 0x0a, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x1c, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x05, 0x76, 0x70, 0x63, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x76, 0x70, 0x63, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xa9, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x63, 0x0a, 0x16, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74,
	0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x16, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x42, 0x11, 0x0a, 0x0f, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x22, 0x6a,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x49, 0x50, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66,
	0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x04, 0x70, 0x6f,
	0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c,
	0x12, 0x45, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69,
	0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x49, 0x50,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x44, 0x73, 0x48, 0x00, 0x52, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x22, 0x70, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66,
	0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x11, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x23, 0x0a, 0x21,
	0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x54, 0x6f, 0x54, 0x72, 0x75, 0x6e, 0x6b,
	0x45, 0x4e, 0x49, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0xe2, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x54,
	0x6f, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x45, 0x4e, 0x49, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x10, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x45, 0x4e, 0x49, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78,
	0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x54, 0x6f, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x45, 0x4e, 0x49, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x45, 0x4e, 0x49, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x10, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x45, 0x4e, 0x49, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x1a, 0x43, 0x0a, 0x15, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x45, 0x4e, 0x49, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x45, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x22, 0x1c, 0x0a,
	0x1a, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x3a, 0x0a, 0x06, 0x46,
	0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x41, 0x4d, 0x49, 0x4c, 0x59, 0x5f,
	0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x41, 0x4d,
	0x49, 0x4c, 0x59, 0x5f, 0x56, 0x34, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x41, 0x4d, 0x49,
	0x4c, 0x59, 0x5f, 0x56, 0x36, 0x10, 0x02, 0x32, 0xdd, 0x01, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x50, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x68, 0x0a, 0x0f, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73,
	0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65,
	0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c,
	0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xf8, 0x01, 0x0a, 0x12, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x50, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x61,
	0x0a, 0x12, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c,
	0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x7f, 0x0a, 0x1c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e,
	0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e,
	0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0xd4, 0x05, 0x0a, 0x09, 0x49, 0x50, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x80, 0x01, 0x0a, 0x17, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x31, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73,
	0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x49,
	0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69,
	0x74, 0x75, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x21,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74,
	0x75, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e,
	0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x67, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78,
	0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65,
	0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a,
	0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69,
	0x74, 0x75, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x67, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78,
	0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65,
	0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69,
	0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e,
	0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x49,
	0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x77, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x49, 0x50, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e,
	0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e,
	0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xae, 0x01, 0x0a, 0x1f, 0x54, 0x69,
	0x74, 0x75, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x56, 0x50, 0x43, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8a, 0x01,
	0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x54, 0x6f, 0x54, 0x72,
	0x75, 0x6e, 0x6b, 0x45, 0x4e, 0x49, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x34, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e, 0x74, 0x69, 0x74, 0x75,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x54, 0x6f, 0x54, 0x72, 0x75,
	0x6e, 0x6b, 0x45, 0x4e, 0x49, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69,
	0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x54, 0x6f, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x45, 0x4e, 0x49, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x93, 0x01, 0x0a, 0x1e, 0x54,
	0x69, 0x74, 0x75, 0x73, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x71, 0x0a,
	0x12, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69,
	0x78, 0x2e, 0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x65, 0x74, 0x66, 0x6c, 0x69, 0x78, 0x2e,
	0x74, 0x69, 0x74, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x07, 0x5a, 0x05, 0x74, 0x69, 0x74, 0x75, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_netflix_titus_titus_vpc_api_proto_rawDescOnce sync.Once
	file_netflix_titus_titus_vpc_api_proto_rawDescData = file_netflix_titus_titus_vpc_api_proto_rawDesc
)

func file_netflix_titus_titus_vpc_api_proto_rawDescGZIP() []byte {
	file_netflix_titus_titus_vpc_api_proto_rawDescOnce.Do(func() {
		file_netflix_titus_titus_vpc_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_netflix_titus_titus_vpc_api_proto_rawDescData)
	})
	return file_netflix_titus_titus_vpc_api_proto_rawDescData
}

var file_netflix_titus_titus_vpc_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_netflix_titus_titus_vpc_api_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_netflix_titus_titus_vpc_api_proto_goTypes = []interface{}{
	(Family)(0),                                                      // 0: com.netflix.titus.Family
	(*AllocateAddressRequest)(nil),                                   // 1: com.netflix.titus.AllocateAddressRequest
	(*AllocateAddressResponse)(nil),                                  // 2: com.netflix.titus.AllocateAddressResponse
	(*GetAllocationRequest)(nil),                                     // 3: com.netflix.titus.GetAllocationRequest
	(*GetAllocationResponse)(nil),                                    // 4: com.netflix.titus.GetAllocationResponse
	(*ValidationRequest)(nil),                                        // 5: com.netflix.titus.ValidationRequest
	(*ValidationResponse)(nil),                                       // 6: com.netflix.titus.ValidationResponse
	(*ParametersValidationRequest)(nil),                              // 7: com.netflix.titus.ParametersValidationRequest
	(*ParametersValidationResponse)(nil),                             // 8: com.netflix.titus.ParametersValidationResponse
	(*AllocateStaticIPAddressRequest)(nil),                           // 9: com.netflix.titus.AllocateStaticIPAddressRequest
	(*AllocateStaticIPAddressResponse)(nil),                          // 10: com.netflix.titus.AllocateStaticIPAddressResponse
	(*AddressLocationV2)(nil),                                        // 11: com.netflix.titus.AddressLocationV2
	(*StaticIPAddress)(nil),                                          // 12: com.netflix.titus.StaticIPAddress
	(*SetPoolRequest)(nil),                                           // 13: com.netflix.titus.SetPoolRequest
	(*SetPoolResponse)(nil),                                          // 14: com.netflix.titus.SetPoolResponse
	(*CreateTagRequest)(nil),                                         // 15: com.netflix.titus.CreateTagRequest
	(*CreateTagResponse)(nil),                                        // 16: com.netflix.titus.CreateTagResponse
	(*DeleteTagRequest)(nil),                                         // 17: com.netflix.titus.DeleteTagRequest
	(*DeleteTagResponse)(nil),                                        // 18: com.netflix.titus.DeleteTagResponse
	(*UpdateTagRequest)(nil),                                         // 19: com.netflix.titus.UpdateTagRequest
	(*UpdateTagResponse)(nil),                                        // 20: com.netflix.titus.UpdateTagResponse
	(*AddressSearchParameter)(nil),                                   // 21: com.netflix.titus.AddressSearchParameter
	(*GetStaticIPAddressRequest)(nil),                                // 22: com.netflix.titus.GetStaticIPAddressRequest
	(*GetStaticIPAddressResponse)(nil),                               // 23: com.netflix.titus.GetStaticIPAddressResponse
	(*GetStaticIPAddressesRequest)(nil),                              // 24: com.netflix.titus.GetStaticIPAddressesRequest
	(*GetStaticIPAddressesResponse)(nil),                             // 25: com.netflix.titus.GetStaticIPAddressesResponse
	(*GetBranchToTrunkENIMappingRequest)(nil),                        // 26: com.netflix.titus.GetBranchToTrunkENIMappingRequest
	(*GetBranchToTrunkENIMappingResponse)(nil),                       // 27: com.netflix.titus.GetBranchToTrunkENIMappingResponse
	(*ResetSecurityGroupRequest)(nil),                                // 28: com.netflix.titus.ResetSecurityGroupRequest
	(*ResetSecurityGroupResponse)(nil),                               // 29: com.netflix.titus.ResetSecurityGroupResponse
	(*ParametersValidationResponse_UnknownFailure)(nil),              // 30: com.netflix.titus.ParametersValidationResponse.UnknownFailure
	(*ParametersValidationResponse_SubnetNotFound)(nil),              // 31: com.netflix.titus.ParametersValidationResponse.SubnetNotFound
	(*ParametersValidationResponse_SecurityGroupNotFound)(nil),       // 32: com.netflix.titus.ParametersValidationResponse.SecurityGroupNotFound
	(*ParametersValidationResponse_AccountIdUnsupported)(nil),        // 33: com.netflix.titus.ParametersValidationResponse.AccountIdUnsupported
	(*ParametersValidationResponse_SubnetDoesNotMatchAccountId)(nil), // 34: com.netflix.titus.ParametersValidationResponse.SubnetDoesNotMatchAccountId
	(*ParametersValidationResponse_SubnetsTooDiverse)(nil),           // 35: com.netflix.titus.ParametersValidationResponse.SubnetsTooDiverse
	(*ParametersValidationResponse_ValidationFailure)(nil),           // 36: com.netflix.titus.ParametersValidationResponse.ValidationFailure
	nil,                             // 37: com.netflix.titus.AllocateStaticIPAddressRequest.TagsEntry
	nil,                             // 38: com.netflix.titus.StaticIPAddress.TagsEntry
	nil,                             // 39: com.netflix.titus.GetBranchToTrunkENIMappingResponse.BranchENIMappingEntry
	(*AddressAllocation)(nil),       // 40: com.netflix.titus.AddressAllocation
	(*SignedAddressAllocation)(nil), // 41: com.netflix.titus.SignedAddressAllocation
	(*emptypb.Empty)(nil),           // 42: google.protobuf.Empty
	(*StaticIPAddressIDs)(nil),      // 43: com.netflix.titus.StaticIPAddressIDs
}
var file_netflix_titus_titus_vpc_api_proto_depIdxs = []int32{
	40, // 0: com.netflix.titus.AllocateAddressRequest.addressAllocation:type_name -> com.netflix.titus.AddressAllocation
	0,  // 1: com.netflix.titus.AllocateAddressRequest.family:type_name -> com.netflix.titus.Family
	41, // 2: com.netflix.titus.AllocateAddressResponse.signedAddressAllocation:type_name -> com.netflix.titus.SignedAddressAllocation
	40, // 3: com.netflix.titus.GetAllocationResponse.addressAllocation:type_name -> com.netflix.titus.AddressAllocation
	41, // 4: com.netflix.titus.GetAllocationResponse.signedAddressAllocation:type_name -> com.netflix.titus.SignedAddressAllocation
	41, // 5: com.netflix.titus.ValidationRequest.signedAddressAllocation:type_name -> com.netflix.titus.SignedAddressAllocation
	36, // 6: com.netflix.titus.ParametersValidationResponse.validationFailures:type_name -> com.netflix.titus.ParametersValidationResponse.ValidationFailure
	37, // 7: com.netflix.titus.AllocateStaticIPAddressRequest.tags:type_name -> com.netflix.titus.AllocateStaticIPAddressRequest.TagsEntry
	12, // 8: com.netflix.titus.AllocateStaticIPAddressResponse.staticIPAddress:type_name -> com.netflix.titus.StaticIPAddress
	38, // 9: com.netflix.titus.StaticIPAddress.tags:type_name -> com.netflix.titus.StaticIPAddress.TagsEntry
	11, // 10: com.netflix.titus.StaticIPAddress.addressLocation:type_name -> com.netflix.titus.AddressLocationV2
	42, // 11: com.netflix.titus.AddressSearchParameter.empty:type_name -> google.protobuf.Empty
	21, // 12: com.netflix.titus.GetStaticIPAddressRequest.addressSearchParameter:type_name -> com.netflix.titus.AddressSearchParameter
	12, // 13: com.netflix.titus.GetStaticIPAddressResponse.staticIPAddress:type_name -> com.netflix.titus.StaticIPAddress
	43, // 14: com.netflix.titus.GetStaticIPAddressesRequest.addresses:type_name -> com.netflix.titus.StaticIPAddressIDs
	12, // 15: com.netflix.titus.GetStaticIPAddressesResponse.staticIPAddresses:type_name -> com.netflix.titus.StaticIPAddress
	39, // 16: com.netflix.titus.GetBranchToTrunkENIMappingResponse.branchENIMapping:type_name -> com.netflix.titus.GetBranchToTrunkENIMappingResponse.BranchENIMappingEntry
	30, // 17: com.netflix.titus.ParametersValidationResponse.ValidationFailure.unknownFailure:type_name -> com.netflix.titus.ParametersValidationResponse.UnknownFailure
	31, // 18: com.netflix.titus.ParametersValidationResponse.ValidationFailure.subnetNotFound:type_name -> com.netflix.titus.ParametersValidationResponse.SubnetNotFound
	32, // 19: com.netflix.titus.ParametersValidationResponse.ValidationFailure.securityGroupNotFound:type_name -> com.netflix.titus.ParametersValidationResponse.SecurityGroupNotFound
	33, // 20: com.netflix.titus.ParametersValidationResponse.ValidationFailure.accountIdUnsupported:type_name -> com.netflix.titus.ParametersValidationResponse.AccountIdUnsupported
	34, // 21: com.netflix.titus.ParametersValidationResponse.ValidationFailure.subnetDoesNotMatchAccountId:type_name -> com.netflix.titus.ParametersValidationResponse.SubnetDoesNotMatchAccountId
	35, // 22: com.netflix.titus.ParametersValidationResponse.ValidationFailure.subnetsTooDiverse:type_name -> com.netflix.titus.ParametersValidationResponse.SubnetsTooDiverse
	1,  // 23: com.netflix.titus.UserIPService.AllocateAddress:input_type -> com.netflix.titus.AllocateAddressRequest
	3,  // 24: com.netflix.titus.UserIPService.GetAllocation:input_type -> com.netflix.titus.GetAllocationRequest
	5,  // 25: com.netflix.titus.ValidatorIPService.ValidateAllocation:input_type -> com.netflix.titus.ValidationRequest
	7,  // 26: com.netflix.titus.ValidatorIPService.ValidateAllocationParameters:input_type -> com.netflix.titus.ParametersValidationRequest
	9,  // 27: com.netflix.titus.IPService.AllocateStaticIPAddress:input_type -> com.netflix.titus.AllocateStaticIPAddressRequest
	13, // 28: com.netflix.titus.IPService.SetPool:input_type -> com.netflix.titus.SetPoolRequest
	15, // 29: com.netflix.titus.IPService.CreateTag:input_type -> com.netflix.titus.CreateTagRequest
	15, // 30: com.netflix.titus.IPService.DeleteTag:input_type -> com.netflix.titus.CreateTagRequest
	19, // 31: com.netflix.titus.IPService.UpdateTag:input_type -> com.netflix.titus.UpdateTagRequest
	22, // 32: com.netflix.titus.IPService.GetStaticIPAddress:input_type -> com.netflix.titus.GetStaticIPAddressRequest
	24, // 33: com.netflix.titus.IPService.GetStaticIPAddresses:input_type -> com.netflix.titus.GetStaticIPAddressesRequest
	26, // 34: com.netflix.titus.TitusAgentVPCInformationService.ListBranchToTrunkENIMapping:input_type -> com.netflix.titus.GetBranchToTrunkENIMappingRequest
	28, // 35: com.netflix.titus.TitusAgentSecurityGroupService.ResetSecurityGroup:input_type -> com.netflix.titus.ResetSecurityGroupRequest
	2,  // 36: com.netflix.titus.UserIPService.AllocateAddress:output_type -> com.netflix.titus.AllocateAddressResponse
	4,  // 37: com.netflix.titus.UserIPService.GetAllocation:output_type -> com.netflix.titus.GetAllocationResponse
	6,  // 38: com.netflix.titus.ValidatorIPService.ValidateAllocation:output_type -> com.netflix.titus.ValidationResponse
	8,  // 39: com.netflix.titus.ValidatorIPService.ValidateAllocationParameters:output_type -> com.netflix.titus.ParametersValidationResponse
	10, // 40: com.netflix.titus.IPService.AllocateStaticIPAddress:output_type -> com.netflix.titus.AllocateStaticIPAddressResponse
	14, // 41: com.netflix.titus.IPService.SetPool:output_type -> com.netflix.titus.SetPoolResponse
	16, // 42: com.netflix.titus.IPService.CreateTag:output_type -> com.netflix.titus.CreateTagResponse
	18, // 43: com.netflix.titus.IPService.DeleteTag:output_type -> com.netflix.titus.DeleteTagResponse
	20, // 44: com.netflix.titus.IPService.UpdateTag:output_type -> com.netflix.titus.UpdateTagResponse
	23, // 45: com.netflix.titus.IPService.GetStaticIPAddress:output_type -> com.netflix.titus.GetStaticIPAddressResponse
	25, // 46: com.netflix.titus.IPService.GetStaticIPAddresses:output_type -> com.netflix.titus.GetStaticIPAddressesResponse
	27, // 47: com.netflix.titus.TitusAgentVPCInformationService.ListBranchToTrunkENIMapping:output_type -> com.netflix.titus.GetBranchToTrunkENIMappingResponse
	29, // 48: com.netflix.titus.TitusAgentSecurityGroupService.ResetSecurityGroup:output_type -> com.netflix.titus.ResetSecurityGroupResponse
	36, // [36:49] is the sub-list for method output_type
	23, // [23:36] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_netflix_titus_titus_vpc_api_proto_init() }
func file_netflix_titus_titus_vpc_api_proto_init() {
	if File_netflix_titus_titus_vpc_api_proto != nil {
		return
	}
	file_netflix_titus_titus_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_netflix_titus_titus_vpc_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocateAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocateAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParametersValidationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParametersValidationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocateStaticIPAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocateStaticIPAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressLocationV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaticIPAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressSearchParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStaticIPAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStaticIPAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStaticIPAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStaticIPAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBranchToTrunkENIMappingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBranchToTrunkENIMappingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetSecurityGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetSecurityGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParametersValidationResponse_UnknownFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParametersValidationResponse_SubnetNotFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParametersValidationResponse_SecurityGroupNotFound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParametersValidationResponse_AccountIdUnsupported); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParametersValidationResponse_SubnetDoesNotMatchAccountId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParametersValidationResponse_SubnetsTooDiverse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_netflix_titus_titus_vpc_api_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParametersValidationResponse_ValidationFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_netflix_titus_titus_vpc_api_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*GetAllocationRequest_Address)(nil),
		(*GetAllocationRequest_Uuid)(nil),
	}
	file_netflix_titus_titus_vpc_api_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*AddressSearchParameter_Empty)(nil),
		(*AddressSearchParameter_SubnetId)(nil),
		(*AddressSearchParameter_VpcId)(nil),
	}
	file_netflix_titus_titus_vpc_api_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*GetStaticIPAddressRequest_Uuid)(nil),
		(*GetStaticIPAddressRequest_AddressSearchParameter)(nil),
	}
	file_netflix_titus_titus_vpc_api_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*GetStaticIPAddressesRequest_Pool)(nil),
		(*GetStaticIPAddressesRequest_Addresses)(nil),
	}
	file_netflix_titus_titus_vpc_api_proto_msgTypes[35].OneofWrappers = []interface{}{
		(*ParametersValidationResponse_ValidationFailure_UnknownFailure)(nil),
		(*ParametersValidationResponse_ValidationFailure_SubnetNotFound)(nil),
		(*ParametersValidationResponse_ValidationFailure_SecurityGroupNotFound)(nil),
		(*ParametersValidationResponse_ValidationFailure_AccountIdUnsupported)(nil),
		(*ParametersValidationResponse_ValidationFailure_SubnetDoesNotMatchAccountId)(nil),
		(*ParametersValidationResponse_ValidationFailure_SubnetsTooDiverse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_netflix_titus_titus_vpc_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_netflix_titus_titus_vpc_api_proto_goTypes,
		DependencyIndexes: file_netflix_titus_titus_vpc_api_proto_depIdxs,
		EnumInfos:         file_netflix_titus_titus_vpc_api_proto_enumTypes,
		MessageInfos:      file_netflix_titus_titus_vpc_api_proto_msgTypes,
	}.Build()
	File_netflix_titus_titus_vpc_api_proto = out.File
	file_netflix_titus_titus_vpc_api_proto_rawDesc = nil
	file_netflix_titus_titus_vpc_api_proto_goTypes = nil
	file_netflix_titus_titus_vpc_api_proto_depIdxs = nil
}

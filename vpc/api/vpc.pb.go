// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vpc.proto

package vpcapi

import (
	context "context"
	fmt "fmt"
	math "math"

	titus "github.com/Netflix/titus-executor/api/netflix/titus"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AssignIPResponseV3_Route_Family int32

const (
	AssignIPResponseV3_Route_IPv4 AssignIPResponseV3_Route_Family = 0
	AssignIPResponseV3_Route_IPv6 AssignIPResponseV3_Route_Family = 1
)

var AssignIPResponseV3_Route_Family_name = map[int32]string{
	0: "IPv4",
	1: "IPv6",
}

var AssignIPResponseV3_Route_Family_value = map[string]int32{
	"IPv4": 0,
	"IPv6": 1,
}

func (x AssignIPResponseV3_Route_Family) String() string {
	return proto.EnumName(AssignIPResponseV3_Route_Family_name, int32(x))
}

func (AssignIPResponseV3_Route_Family) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{15, 0, 0}
}

type Address struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{0}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// This is embedded in responses / replies so that a given IP Service Server may cache data from AWS. Since the client
// is the only one ever going to make requests for that given ENI, it can take a lock on that ENI. If the cache version
// the client presents is not present, or it is different from the one the server has, the server must refresh its
// state from AWS
type CacheVersion struct {
	Uuid                 []byte   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CacheVersion) Reset()         { *m = CacheVersion{} }
func (m *CacheVersion) String() string { return proto.CompactTextString(m) }
func (*CacheVersion) ProtoMessage()    {}
func (*CacheVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{1}
}

func (m *CacheVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheVersion.Unmarshal(m, b)
}
func (m *CacheVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheVersion.Marshal(b, m, deterministic)
}
func (m *CacheVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheVersion.Merge(m, src)
}
func (m *CacheVersion) XXX_Size() int {
	return xxx_messageInfo_CacheVersion.Size(m)
}
func (m *CacheVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheVersion.DiscardUnknown(m)
}

var xxx_messageInfo_CacheVersion proto.InternalMessageInfo

func (m *CacheVersion) GetUuid() []byte {
	if m != nil {
		return m.Uuid
	}
	return nil
}

type NetworkInterfaceAttachment struct {
	// 0-indexed
	DeviceIndex          uint32   `protobuf:"varint,1,opt,name=deviceIndex,proto3" json:"deviceIndex,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInterfaceAttachment) Reset()         { *m = NetworkInterfaceAttachment{} }
func (m *NetworkInterfaceAttachment) String() string { return proto.CompactTextString(m) }
func (*NetworkInterfaceAttachment) ProtoMessage()    {}
func (*NetworkInterfaceAttachment) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{2}
}

func (m *NetworkInterfaceAttachment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkInterfaceAttachment.Unmarshal(m, b)
}
func (m *NetworkInterfaceAttachment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkInterfaceAttachment.Marshal(b, m, deterministic)
}
func (m *NetworkInterfaceAttachment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInterfaceAttachment.Merge(m, src)
}
func (m *NetworkInterfaceAttachment) XXX_Size() int {
	return xxx_messageInfo_NetworkInterfaceAttachment.Size(m)
}
func (m *NetworkInterfaceAttachment) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInterfaceAttachment.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInterfaceAttachment proto.InternalMessageInfo

func (m *NetworkInterfaceAttachment) GetDeviceIndex() uint32 {
	if m != nil {
		return m.DeviceIndex
	}
	return 0
}

func (m *NetworkInterfaceAttachment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type NetworkInterface struct {
	SubnetId                   string                      `protobuf:"bytes,1,opt,name=subnetId,proto3" json:"subnetId,omitempty"`
	AvailabilityZone           string                      `protobuf:"bytes,2,opt,name=availabilityZone,proto3" json:"availabilityZone,omitempty"`
	MacAddress                 string                      `protobuf:"bytes,3,opt,name=macAddress,proto3" json:"macAddress,omitempty"`
	NetworkInterfaceId         string                      `protobuf:"bytes,4,opt,name=networkInterfaceId,proto3" json:"networkInterfaceId,omitempty"`
	OwnerAccountId             string                      `protobuf:"bytes,5,opt,name=ownerAccountId,proto3" json:"ownerAccountId,omitempty"`
	NetworkInterfaceAttachment *NetworkInterfaceAttachment `protobuf:"bytes,7,opt,name=networkInterfaceAttachment,proto3" json:"networkInterfaceAttachment,omitempty"`
	VpcId                      string                      `protobuf:"bytes,8,opt,name=vpcId,proto3" json:"vpcId,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                    `json:"-"`
	XXX_unrecognized           []byte                      `json:"-"`
	XXX_sizecache              int32                       `json:"-"`
}

func (m *NetworkInterface) Reset()         { *m = NetworkInterface{} }
func (m *NetworkInterface) String() string { return proto.CompactTextString(m) }
func (*NetworkInterface) ProtoMessage()    {}
func (*NetworkInterface) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{3}
}

func (m *NetworkInterface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkInterface.Unmarshal(m, b)
}
func (m *NetworkInterface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkInterface.Marshal(b, m, deterministic)
}
func (m *NetworkInterface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInterface.Merge(m, src)
}
func (m *NetworkInterface) XXX_Size() int {
	return xxx_messageInfo_NetworkInterface.Size(m)
}
func (m *NetworkInterface) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInterface.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInterface proto.InternalMessageInfo

func (m *NetworkInterface) GetSubnetId() string {
	if m != nil {
		return m.SubnetId
	}
	return ""
}

func (m *NetworkInterface) GetAvailabilityZone() string {
	if m != nil {
		return m.AvailabilityZone
	}
	return ""
}

func (m *NetworkInterface) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *NetworkInterface) GetNetworkInterfaceId() string {
	if m != nil {
		return m.NetworkInterfaceId
	}
	return ""
}

func (m *NetworkInterface) GetOwnerAccountId() string {
	if m != nil {
		return m.OwnerAccountId
	}
	return ""
}

func (m *NetworkInterface) GetNetworkInterfaceAttachment() *NetworkInterfaceAttachment {
	if m != nil {
		return m.NetworkInterfaceAttachment
	}
	return nil
}

func (m *NetworkInterface) GetVpcId() string {
	if m != nil {
		return m.VpcId
	}
	return ""
}

type InstanceIdentity struct {
	// This is duplicated data , but we include it for verification beyond Metatron. No containers should run
	// on the instance prior to this API call being completed. We can then rely on the instance
	// identity document for further verification.
	InstanceIdentityDocument  string   `protobuf:"bytes,1,opt,name=instanceIdentityDocument,proto3" json:"instanceIdentityDocument,omitempty"`
	InstanceIdentitySignature string   `protobuf:"bytes,2,opt,name=instanceIdentitySignature,proto3" json:"instanceIdentitySignature,omitempty"`
	InstanceID                string   `protobuf:"bytes,3,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	Region                    string   `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	AccountID                 string   `protobuf:"bytes,5,opt,name=accountID,proto3" json:"accountID,omitempty"`
	InstanceType              string   `protobuf:"bytes,6,opt,name=instanceType,proto3" json:"instanceType,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *InstanceIdentity) Reset()         { *m = InstanceIdentity{} }
func (m *InstanceIdentity) String() string { return proto.CompactTextString(m) }
func (*InstanceIdentity) ProtoMessage()    {}
func (*InstanceIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{4}
}

func (m *InstanceIdentity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceIdentity.Unmarshal(m, b)
}
func (m *InstanceIdentity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceIdentity.Marshal(b, m, deterministic)
}
func (m *InstanceIdentity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceIdentity.Merge(m, src)
}
func (m *InstanceIdentity) XXX_Size() int {
	return xxx_messageInfo_InstanceIdentity.Size(m)
}
func (m *InstanceIdentity) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceIdentity.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceIdentity proto.InternalMessageInfo

func (m *InstanceIdentity) GetInstanceIdentityDocument() string {
	if m != nil {
		return m.InstanceIdentityDocument
	}
	return ""
}

func (m *InstanceIdentity) GetInstanceIdentitySignature() string {
	if m != nil {
		return m.InstanceIdentitySignature
	}
	return ""
}

func (m *InstanceIdentity) GetInstanceID() string {
	if m != nil {
		return m.InstanceID
	}
	return ""
}

func (m *InstanceIdentity) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *InstanceIdentity) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *InstanceIdentity) GetInstanceType() string {
	if m != nil {
		return m.InstanceType
	}
	return ""
}

// ProvisionInstanceRequest is called when the instance is first initialized, in order to configure its interfaces,
// and other network capabilities.
// The provisioning service decides which account / subnet / VPC the interface will live in.
type ProvisionInstanceRequest struct {
	InstanceIdentity *InstanceIdentity `protobuf:"bytes,1,opt,name=instanceIdentity,proto3" json:"instanceIdentity,omitempty"`
	// If accountID and subnetID are not specified then the titusvpcservice will decide on their behalf
	AccountID            string   `protobuf:"bytes,2,opt,name=accountID,proto3" json:"accountID,omitempty"`
	SubnetID             string   `protobuf:"bytes,3,opt,name=subnetID,proto3" json:"subnetID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProvisionInstanceRequest) Reset()         { *m = ProvisionInstanceRequest{} }
func (m *ProvisionInstanceRequest) String() string { return proto.CompactTextString(m) }
func (*ProvisionInstanceRequest) ProtoMessage()    {}
func (*ProvisionInstanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{5}
}

func (m *ProvisionInstanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProvisionInstanceRequest.Unmarshal(m, b)
}
func (m *ProvisionInstanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProvisionInstanceRequest.Marshal(b, m, deterministic)
}
func (m *ProvisionInstanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProvisionInstanceRequest.Merge(m, src)
}
func (m *ProvisionInstanceRequest) XXX_Size() int {
	return xxx_messageInfo_ProvisionInstanceRequest.Size(m)
}
func (m *ProvisionInstanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProvisionInstanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProvisionInstanceRequest proto.InternalMessageInfo

func (m *ProvisionInstanceRequest) GetInstanceIdentity() *InstanceIdentity {
	if m != nil {
		return m.InstanceIdentity
	}
	return nil
}

func (m *ProvisionInstanceRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *ProvisionInstanceRequest) GetSubnetID() string {
	if m != nil {
		return m.SubnetID
	}
	return ""
}

type ProvisionInstanceResponse struct {
	// In this, the deviceIndex, macAddress, and networkInterfaceId must be unique in this list.
	NetworkInterfaces    []*NetworkInterface `protobuf:"bytes,1,rep,name=networkInterfaces,proto3" json:"networkInterfaces,omitempty"`
	CacheVersion         *CacheVersion       `protobuf:"bytes,2,opt,name=cacheVersion,proto3" json:"cacheVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ProvisionInstanceResponse) Reset()         { *m = ProvisionInstanceResponse{} }
func (m *ProvisionInstanceResponse) String() string { return proto.CompactTextString(m) }
func (*ProvisionInstanceResponse) ProtoMessage()    {}
func (*ProvisionInstanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{6}
}

func (m *ProvisionInstanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProvisionInstanceResponse.Unmarshal(m, b)
}
func (m *ProvisionInstanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProvisionInstanceResponse.Marshal(b, m, deterministic)
}
func (m *ProvisionInstanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProvisionInstanceResponse.Merge(m, src)
}
func (m *ProvisionInstanceResponse) XXX_Size() int {
	return xxx_messageInfo_ProvisionInstanceResponse.Size(m)
}
func (m *ProvisionInstanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProvisionInstanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProvisionInstanceResponse proto.InternalMessageInfo

func (m *ProvisionInstanceResponse) GetNetworkInterfaces() []*NetworkInterface {
	if m != nil {
		return m.NetworkInterfaces
	}
	return nil
}

func (m *ProvisionInstanceResponse) GetCacheVersion() *CacheVersion {
	if m != nil {
		return m.CacheVersion
	}
	return nil
}

type ProvisionInstanceRequestV3 struct {
	InstanceIdentity     *InstanceIdentity `protobuf:"bytes,1,opt,name=instanceIdentity,proto3" json:"instanceIdentity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ProvisionInstanceRequestV3) Reset()         { *m = ProvisionInstanceRequestV3{} }
func (m *ProvisionInstanceRequestV3) String() string { return proto.CompactTextString(m) }
func (*ProvisionInstanceRequestV3) ProtoMessage()    {}
func (*ProvisionInstanceRequestV3) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{7}
}

func (m *ProvisionInstanceRequestV3) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProvisionInstanceRequestV3.Unmarshal(m, b)
}
func (m *ProvisionInstanceRequestV3) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProvisionInstanceRequestV3.Marshal(b, m, deterministic)
}
func (m *ProvisionInstanceRequestV3) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProvisionInstanceRequestV3.Merge(m, src)
}
func (m *ProvisionInstanceRequestV3) XXX_Size() int {
	return xxx_messageInfo_ProvisionInstanceRequestV3.Size(m)
}
func (m *ProvisionInstanceRequestV3) XXX_DiscardUnknown() {
	xxx_messageInfo_ProvisionInstanceRequestV3.DiscardUnknown(m)
}

var xxx_messageInfo_ProvisionInstanceRequestV3 proto.InternalMessageInfo

func (m *ProvisionInstanceRequestV3) GetInstanceIdentity() *InstanceIdentity {
	if m != nil {
		return m.InstanceIdentity
	}
	return nil
}

type ProvisionInstanceResponseV3 struct {
	TrunkNetworkInterface *NetworkInterface `protobuf:"bytes,1,opt,name=trunkNetworkInterface,proto3" json:"trunkNetworkInterface,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}          `json:"-"`
	XXX_unrecognized      []byte            `json:"-"`
	XXX_sizecache         int32             `json:"-"`
}

func (m *ProvisionInstanceResponseV3) Reset()         { *m = ProvisionInstanceResponseV3{} }
func (m *ProvisionInstanceResponseV3) String() string { return proto.CompactTextString(m) }
func (*ProvisionInstanceResponseV3) ProtoMessage()    {}
func (*ProvisionInstanceResponseV3) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{8}
}

func (m *ProvisionInstanceResponseV3) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProvisionInstanceResponseV3.Unmarshal(m, b)
}
func (m *ProvisionInstanceResponseV3) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProvisionInstanceResponseV3.Marshal(b, m, deterministic)
}
func (m *ProvisionInstanceResponseV3) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProvisionInstanceResponseV3.Merge(m, src)
}
func (m *ProvisionInstanceResponseV3) XXX_Size() int {
	return xxx_messageInfo_ProvisionInstanceResponseV3.Size(m)
}
func (m *ProvisionInstanceResponseV3) XXX_DiscardUnknown() {
	xxx_messageInfo_ProvisionInstanceResponseV3.DiscardUnknown(m)
}

var xxx_messageInfo_ProvisionInstanceResponseV3 proto.InternalMessageInfo

func (m *ProvisionInstanceResponseV3) GetTrunkNetworkInterface() *NetworkInterface {
	if m != nil {
		return m.TrunkNetworkInterface
	}
	return nil
}

type UtilizedAddress struct {
	Address              *Address               `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	LastUsedTime         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=lastUsedTime,proto3" json:"lastUsedTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UtilizedAddress) Reset()         { *m = UtilizedAddress{} }
func (m *UtilizedAddress) String() string { return proto.CompactTextString(m) }
func (*UtilizedAddress) ProtoMessage()    {}
func (*UtilizedAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{9}
}

func (m *UtilizedAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UtilizedAddress.Unmarshal(m, b)
}
func (m *UtilizedAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UtilizedAddress.Marshal(b, m, deterministic)
}
func (m *UtilizedAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UtilizedAddress.Merge(m, src)
}
func (m *UtilizedAddress) XXX_Size() int {
	return xxx_messageInfo_UtilizedAddress.Size(m)
}
func (m *UtilizedAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_UtilizedAddress.DiscardUnknown(m)
}

var xxx_messageInfo_UtilizedAddress proto.InternalMessageInfo

func (m *UtilizedAddress) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *UtilizedAddress) GetLastUsedTime() *timestamppb.Timestamp {
	if m != nil {
		return m.LastUsedTime
	}
	return nil
}

type AssignIPRequest struct {
	CacheVersion               *CacheVersion               `protobuf:"bytes,1,opt,name=cacheVersion,proto3" json:"cacheVersion,omitempty"`
	NetworkInterfaceAttachment *NetworkInterfaceAttachment `protobuf:"bytes,3,opt,name=networkInterfaceAttachment,proto3" json:"networkInterfaceAttachment,omitempty"`
	SecurityGroupIds           []string                    `protobuf:"bytes,4,rep,name=securityGroupIds,proto3" json:"securityGroupIds,omitempty"`
	Ipv6AddressRequested       bool                        `protobuf:"varint,5,opt,name=ipv6AddressRequested,proto3" json:"ipv6AddressRequested,omitempty"`
	UtilizedAddresses          []*UtilizedAddress          `protobuf:"bytes,6,rep,name=utilizedAddresses,proto3" json:"utilizedAddresses,omitempty"`
	InstanceIdentity           *InstanceIdentity           `protobuf:"bytes,7,opt,name=instanceIdentity,proto3" json:"instanceIdentity,omitempty"`
	AllowSecurityGroupChange   bool                        `protobuf:"varint,8,opt,name=allowSecurityGroupChange,proto3" json:"allowSecurityGroupChange,omitempty"`
	// This is optional. If it is not specified then we will assign a "random" IP to the interface
	SignedAddressAllocations []*titus.SignedAddressAllocation `protobuf:"bytes,9,rep,name=signedAddressAllocations,proto3" json:"signedAddressAllocations,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                         `json:"-"`
	XXX_unrecognized         []byte                           `json:"-"`
	XXX_sizecache            int32                            `json:"-"`
}

func (m *AssignIPRequest) Reset()         { *m = AssignIPRequest{} }
func (m *AssignIPRequest) String() string { return proto.CompactTextString(m) }
func (*AssignIPRequest) ProtoMessage()    {}
func (*AssignIPRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{10}
}

func (m *AssignIPRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignIPRequest.Unmarshal(m, b)
}
func (m *AssignIPRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignIPRequest.Marshal(b, m, deterministic)
}
func (m *AssignIPRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignIPRequest.Merge(m, src)
}
func (m *AssignIPRequest) XXX_Size() int {
	return xxx_messageInfo_AssignIPRequest.Size(m)
}
func (m *AssignIPRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignIPRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AssignIPRequest proto.InternalMessageInfo

func (m *AssignIPRequest) GetCacheVersion() *CacheVersion {
	if m != nil {
		return m.CacheVersion
	}
	return nil
}

func (m *AssignIPRequest) GetNetworkInterfaceAttachment() *NetworkInterfaceAttachment {
	if m != nil {
		return m.NetworkInterfaceAttachment
	}
	return nil
}

func (m *AssignIPRequest) GetSecurityGroupIds() []string {
	if m != nil {
		return m.SecurityGroupIds
	}
	return nil
}

func (m *AssignIPRequest) GetIpv6AddressRequested() bool {
	if m != nil {
		return m.Ipv6AddressRequested
	}
	return false
}

func (m *AssignIPRequest) GetUtilizedAddresses() []*UtilizedAddress {
	if m != nil {
		return m.UtilizedAddresses
	}
	return nil
}

func (m *AssignIPRequest) GetInstanceIdentity() *InstanceIdentity {
	if m != nil {
		return m.InstanceIdentity
	}
	return nil
}

func (m *AssignIPRequest) GetAllowSecurityGroupChange() bool {
	if m != nil {
		return m.AllowSecurityGroupChange
	}
	return false
}

func (m *AssignIPRequest) GetSignedAddressAllocations() []*titus.SignedAddressAllocation {
	if m != nil {
		return m.SignedAddressAllocations
	}
	return nil
}

type AssignIPResponse struct {
	CacheVersion *CacheVersion `protobuf:"bytes,1,opt,name=cacheVersion,proto3" json:"cacheVersion,omitempty"`
	// A batch of IPs may be given back. It is up to the client to figure out what IPs it can use.
	UsableAddresses      []*UsableAddress  `protobuf:"bytes,2,rep,name=usableAddresses,proto3" json:"usableAddresses,omitempty"`
	NetworkInterface     *NetworkInterface `protobuf:"bytes,3,opt,name=networkInterface,proto3" json:"networkInterface,omitempty"`
	SecurityGroupIds     []string          `protobuf:"bytes,4,rep,name=securityGroupIds,proto3" json:"securityGroupIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AssignIPResponse) Reset()         { *m = AssignIPResponse{} }
func (m *AssignIPResponse) String() string { return proto.CompactTextString(m) }
func (*AssignIPResponse) ProtoMessage()    {}
func (*AssignIPResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{11}
}

func (m *AssignIPResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignIPResponse.Unmarshal(m, b)
}
func (m *AssignIPResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignIPResponse.Marshal(b, m, deterministic)
}
func (m *AssignIPResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignIPResponse.Merge(m, src)
}
func (m *AssignIPResponse) XXX_Size() int {
	return xxx_messageInfo_AssignIPResponse.Size(m)
}
func (m *AssignIPResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignIPResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AssignIPResponse proto.InternalMessageInfo

func (m *AssignIPResponse) GetCacheVersion() *CacheVersion {
	if m != nil {
		return m.CacheVersion
	}
	return nil
}

func (m *AssignIPResponse) GetUsableAddresses() []*UsableAddress {
	if m != nil {
		return m.UsableAddresses
	}
	return nil
}

func (m *AssignIPResponse) GetNetworkInterface() *NetworkInterface {
	if m != nil {
		return m.NetworkInterface
	}
	return nil
}

func (m *AssignIPResponse) GetSecurityGroupIds() []string {
	if m != nil {
		return m.SecurityGroupIds
	}
	return nil
}

type ElasticAddressSet struct {
	ElasticAddresses     []string `protobuf:"bytes,1,rep,name=elasticAddresses,proto3" json:"elasticAddresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ElasticAddressSet) Reset()         { *m = ElasticAddressSet{} }
func (m *ElasticAddressSet) String() string { return proto.CompactTextString(m) }
func (*ElasticAddressSet) ProtoMessage()    {}
func (*ElasticAddressSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{12}
}

func (m *ElasticAddressSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElasticAddressSet.Unmarshal(m, b)
}
func (m *ElasticAddressSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElasticAddressSet.Marshal(b, m, deterministic)
}
func (m *ElasticAddressSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElasticAddressSet.Merge(m, src)
}
func (m *ElasticAddressSet) XXX_Size() int {
	return xxx_messageInfo_ElasticAddressSet.Size(m)
}
func (m *ElasticAddressSet) XXX_DiscardUnknown() {
	xxx_messageInfo_ElasticAddressSet.DiscardUnknown(m)
}

var xxx_messageInfo_ElasticAddressSet proto.InternalMessageInfo

func (m *ElasticAddressSet) GetElasticAddresses() []string {
	if m != nil {
		return m.ElasticAddresses
	}
	return nil
}

type AssignIPRequestV3 struct {
	TaskId           string   `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	SecurityGroupIds []string `protobuf:"bytes,2,rep,name=securityGroupIds,proto3" json:"securityGroupIds,omitempty"`
	// Types that are valid to be assigned to Ipv6:
	//	*AssignIPRequestV3_Ipv6AddressRequested
	Ipv6 isAssignIPRequestV3_Ipv6 `protobuf_oneof:"ipv6"`
	// Types that are valid to be assigned to Ipv4:
	//	*AssignIPRequestV3_Ipv4AddressRequested
	//	*AssignIPRequestV3_Ipv4SignedAddressAllocation
	Ipv4    isAssignIPRequestV3_Ipv4 `protobuf_oneof:"ipv4"`
	Subnets []string                 `protobuf:"bytes,7,rep,name=subnets,proto3" json:"subnets,omitempty"`
	// This identifies the trunk ENI
	InstanceIdentity *InstanceIdentity `protobuf:"bytes,8,opt,name=instanceIdentity,proto3" json:"instanceIdentity,omitempty"`
	AccountID        string            `protobuf:"bytes,9,opt,name=accountID,proto3" json:"accountID,omitempty"`
	// Types that are valid to be assigned to ElasticAddress:
	//	*AssignIPRequestV3_Empty
	//	*AssignIPRequestV3_ElasticAdddresses
	//	*AssignIPRequestV3_GroupName
	ElasticAddress isAssignIPRequestV3_ElasticAddress `protobuf_oneof:"elasticAddress"`
	// If this assignment ID already exists in the database, then return that assignment.
	// If that assignment was not completed, then we will try to unassign it and re-assign it.
	Idempotent bool `protobuf:"varint,13,opt,name=idempotent,proto3" json:"idempotent,omitempty"`
	// Jumbo: I want "default routes" with an MTU of "Jumbo"
	Jumbo bool `protobuf:"varint,14,opt,name=jumbo,proto3" json:"jumbo,omitempty"`
	Burst bool `protobuf:"varint,15,opt,name=burst,proto3" json:"burst,omitempty"`
	// bandwidth is in bits per second
	Bandwidth            uint64   `protobuf:"varint,16,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssignIPRequestV3) Reset()         { *m = AssignIPRequestV3{} }
func (m *AssignIPRequestV3) String() string { return proto.CompactTextString(m) }
func (*AssignIPRequestV3) ProtoMessage()    {}
func (*AssignIPRequestV3) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{13}
}

func (m *AssignIPRequestV3) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignIPRequestV3.Unmarshal(m, b)
}
func (m *AssignIPRequestV3) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignIPRequestV3.Marshal(b, m, deterministic)
}
func (m *AssignIPRequestV3) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignIPRequestV3.Merge(m, src)
}
func (m *AssignIPRequestV3) XXX_Size() int {
	return xxx_messageInfo_AssignIPRequestV3.Size(m)
}
func (m *AssignIPRequestV3) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignIPRequestV3.DiscardUnknown(m)
}

var xxx_messageInfo_AssignIPRequestV3 proto.InternalMessageInfo

func (m *AssignIPRequestV3) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *AssignIPRequestV3) GetSecurityGroupIds() []string {
	if m != nil {
		return m.SecurityGroupIds
	}
	return nil
}

type isAssignIPRequestV3_Ipv6 interface {
	isAssignIPRequestV3_Ipv6()
}

type AssignIPRequestV3_Ipv6AddressRequested struct {
	Ipv6AddressRequested bool `protobuf:"varint,3,opt,name=ipv6AddressRequested,proto3,oneof"`
}

func (*AssignIPRequestV3_Ipv6AddressRequested) isAssignIPRequestV3_Ipv6() {}

func (m *AssignIPRequestV3) GetIpv6() isAssignIPRequestV3_Ipv6 {
	if m != nil {
		return m.Ipv6
	}
	return nil
}

func (m *AssignIPRequestV3) GetIpv6AddressRequested() bool {
	if x, ok := m.GetIpv6().(*AssignIPRequestV3_Ipv6AddressRequested); ok {
		return x.Ipv6AddressRequested
	}
	return false
}

type isAssignIPRequestV3_Ipv4 interface {
	isAssignIPRequestV3_Ipv4()
}

type AssignIPRequestV3_Ipv4AddressRequested struct {
	Ipv4AddressRequested bool `protobuf:"varint,4,opt,name=ipv4AddressRequested,proto3,oneof"`
}

type AssignIPRequestV3_Ipv4SignedAddressAllocation struct {
	Ipv4SignedAddressAllocation *titus.SignedAddressAllocation `protobuf:"bytes,5,opt,name=ipv4SignedAddressAllocation,proto3,oneof"`
}

func (*AssignIPRequestV3_Ipv4AddressRequested) isAssignIPRequestV3_Ipv4() {}

func (*AssignIPRequestV3_Ipv4SignedAddressAllocation) isAssignIPRequestV3_Ipv4() {}

func (m *AssignIPRequestV3) GetIpv4() isAssignIPRequestV3_Ipv4 {
	if m != nil {
		return m.Ipv4
	}
	return nil
}

func (m *AssignIPRequestV3) GetIpv4AddressRequested() bool {
	if x, ok := m.GetIpv4().(*AssignIPRequestV3_Ipv4AddressRequested); ok {
		return x.Ipv4AddressRequested
	}
	return false
}

func (m *AssignIPRequestV3) GetIpv4SignedAddressAllocation() *titus.SignedAddressAllocation {
	if x, ok := m.GetIpv4().(*AssignIPRequestV3_Ipv4SignedAddressAllocation); ok {
		return x.Ipv4SignedAddressAllocation
	}
	return nil
}

func (m *AssignIPRequestV3) GetSubnets() []string {
	if m != nil {
		return m.Subnets
	}
	return nil
}

func (m *AssignIPRequestV3) GetInstanceIdentity() *InstanceIdentity {
	if m != nil {
		return m.InstanceIdentity
	}
	return nil
}

func (m *AssignIPRequestV3) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

type isAssignIPRequestV3_ElasticAddress interface {
	isAssignIPRequestV3_ElasticAddress()
}

type AssignIPRequestV3_Empty struct {
	Empty *emptypb.Empty `protobuf:"bytes,10,opt,name=empty,proto3,oneof"`
}

type AssignIPRequestV3_ElasticAdddresses struct {
	ElasticAdddresses *ElasticAddressSet `protobuf:"bytes,11,opt,name=elasticAdddresses,proto3,oneof"`
}

type AssignIPRequestV3_GroupName struct {
	GroupName string `protobuf:"bytes,12,opt,name=groupName,proto3,oneof"`
}

func (*AssignIPRequestV3_Empty) isAssignIPRequestV3_ElasticAddress() {}

func (*AssignIPRequestV3_ElasticAdddresses) isAssignIPRequestV3_ElasticAddress() {}

func (*AssignIPRequestV3_GroupName) isAssignIPRequestV3_ElasticAddress() {}

func (m *AssignIPRequestV3) GetElasticAddress() isAssignIPRequestV3_ElasticAddress {
	if m != nil {
		return m.ElasticAddress
	}
	return nil
}

func (m *AssignIPRequestV3) GetEmpty() *emptypb.Empty {
	if x, ok := m.GetElasticAddress().(*AssignIPRequestV3_Empty); ok {
		return x.Empty
	}
	return nil
}

func (m *AssignIPRequestV3) GetElasticAdddresses() *ElasticAddressSet {
	if x, ok := m.GetElasticAddress().(*AssignIPRequestV3_ElasticAdddresses); ok {
		return x.ElasticAdddresses
	}
	return nil
}

func (m *AssignIPRequestV3) GetGroupName() string {
	if x, ok := m.GetElasticAddress().(*AssignIPRequestV3_GroupName); ok {
		return x.GroupName
	}
	return ""
}

func (m *AssignIPRequestV3) GetIdempotent() bool {
	if m != nil {
		return m.Idempotent
	}
	return false
}

func (m *AssignIPRequestV3) GetJumbo() bool {
	if m != nil {
		return m.Jumbo
	}
	return false
}

func (m *AssignIPRequestV3) GetBurst() bool {
	if m != nil {
		return m.Burst
	}
	return false
}

func (m *AssignIPRequestV3) GetBandwidth() uint64 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AssignIPRequestV3) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AssignIPRequestV3_Ipv6AddressRequested)(nil),
		(*AssignIPRequestV3_Ipv4AddressRequested)(nil),
		(*AssignIPRequestV3_Ipv4SignedAddressAllocation)(nil),
		(*AssignIPRequestV3_Empty)(nil),
		(*AssignIPRequestV3_ElasticAdddresses)(nil),
		(*AssignIPRequestV3_GroupName)(nil),
	}
}

type ElasticAddress struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	AllocationId         string   `protobuf:"bytes,2,opt,name=allocationId,proto3" json:"allocationId,omitempty"`
	AssociationdId       string   `protobuf:"bytes,3,opt,name=associationdId,proto3" json:"associationdId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ElasticAddress) Reset()         { *m = ElasticAddress{} }
func (m *ElasticAddress) String() string { return proto.CompactTextString(m) }
func (*ElasticAddress) ProtoMessage()    {}
func (*ElasticAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{14}
}

func (m *ElasticAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElasticAddress.Unmarshal(m, b)
}
func (m *ElasticAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElasticAddress.Marshal(b, m, deterministic)
}
func (m *ElasticAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElasticAddress.Merge(m, src)
}
func (m *ElasticAddress) XXX_Size() int {
	return xxx_messageInfo_ElasticAddress.Size(m)
}
func (m *ElasticAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_ElasticAddress.DiscardUnknown(m)
}

var xxx_messageInfo_ElasticAddress proto.InternalMessageInfo

func (m *ElasticAddress) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *ElasticAddress) GetAllocationId() string {
	if m != nil {
		return m.AllocationId
	}
	return ""
}

func (m *ElasticAddress) GetAssociationdId() string {
	if m != nil {
		return m.AssociationdId
	}
	return ""
}

type AssignIPResponseV3 struct {
	Ipv4Address            *UsableAddress    `protobuf:"bytes,1,opt,name=ipv4address,proto3" json:"ipv4address,omitempty"`
	Ipv6Address            *UsableAddress    `protobuf:"bytes,2,opt,name=ipv6address,proto3" json:"ipv6address,omitempty"`
	BranchNetworkInterface *NetworkInterface `protobuf:"bytes,3,opt,name=branchNetworkInterface,proto3" json:"branchNetworkInterface,omitempty"`
	TrunkNetworkInterface  *NetworkInterface `protobuf:"bytes,4,opt,name=trunkNetworkInterface,proto3" json:"trunkNetworkInterface,omitempty"`
	VlanId                 uint32            `protobuf:"varint,5,opt,name=vlanId,proto3" json:"vlanId,omitempty"`
	ElasticAddress         *ElasticAddress   `protobuf:"bytes,6,opt,name=elasticAddress,proto3" json:"elasticAddress,omitempty"`
	ClassId                uint32            `protobuf:"varint,7,opt,name=classId,proto3" json:"classId,omitempty"`
	// Routes act as overrides. There may be an override for default, but it if it not present, one should still be
	// assigned.
	Routes               []*AssignIPResponseV3_Route   `protobuf:"bytes,9,rep,name=routes,proto3" json:"routes,omitempty"`
	Bandwidth            *AssignIPResponseV3_Bandwidth `protobuf:"bytes,10,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *AssignIPResponseV3) Reset()         { *m = AssignIPResponseV3{} }
func (m *AssignIPResponseV3) String() string { return proto.CompactTextString(m) }
func (*AssignIPResponseV3) ProtoMessage()    {}
func (*AssignIPResponseV3) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{15}
}

func (m *AssignIPResponseV3) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignIPResponseV3.Unmarshal(m, b)
}
func (m *AssignIPResponseV3) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignIPResponseV3.Marshal(b, m, deterministic)
}
func (m *AssignIPResponseV3) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignIPResponseV3.Merge(m, src)
}
func (m *AssignIPResponseV3) XXX_Size() int {
	return xxx_messageInfo_AssignIPResponseV3.Size(m)
}
func (m *AssignIPResponseV3) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignIPResponseV3.DiscardUnknown(m)
}

var xxx_messageInfo_AssignIPResponseV3 proto.InternalMessageInfo

func (m *AssignIPResponseV3) GetIpv4Address() *UsableAddress {
	if m != nil {
		return m.Ipv4Address
	}
	return nil
}

func (m *AssignIPResponseV3) GetIpv6Address() *UsableAddress {
	if m != nil {
		return m.Ipv6Address
	}
	return nil
}

func (m *AssignIPResponseV3) GetBranchNetworkInterface() *NetworkInterface {
	if m != nil {
		return m.BranchNetworkInterface
	}
	return nil
}

func (m *AssignIPResponseV3) GetTrunkNetworkInterface() *NetworkInterface {
	if m != nil {
		return m.TrunkNetworkInterface
	}
	return nil
}

func (m *AssignIPResponseV3) GetVlanId() uint32 {
	if m != nil {
		return m.VlanId
	}
	return 0
}

func (m *AssignIPResponseV3) GetElasticAddress() *ElasticAddress {
	if m != nil {
		return m.ElasticAddress
	}
	return nil
}

func (m *AssignIPResponseV3) GetClassId() uint32 {
	if m != nil {
		return m.ClassId
	}
	return 0
}

func (m *AssignIPResponseV3) GetRoutes() []*AssignIPResponseV3_Route {
	if m != nil {
		return m.Routes
	}
	return nil
}

func (m *AssignIPResponseV3) GetBandwidth() *AssignIPResponseV3_Bandwidth {
	if m != nil {
		return m.Bandwidth
	}
	return nil
}

// Right now this is just to over-ride the MTU per-route.
type AssignIPResponseV3_Route struct {
	// Destination, formatted as CIDR, like 10.0.0.0/8. Unfortunately, this is somewhat ambigious
	// because say 10.0.250.0/8 is kind of equivalent from a routing perspective
	Destination string `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	// mtu of 0 is default
	Mtu                  uint32                          `protobuf:"varint,2,opt,name=mtu,proto3" json:"mtu,omitempty"`
	Family               AssignIPResponseV3_Route_Family `protobuf:"varint,3,opt,name=family,proto3,enum=com.netflix.titus.executor.vpc.AssignIPResponseV3_Route_Family" json:"family,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *AssignIPResponseV3_Route) Reset()         { *m = AssignIPResponseV3_Route{} }
func (m *AssignIPResponseV3_Route) String() string { return proto.CompactTextString(m) }
func (*AssignIPResponseV3_Route) ProtoMessage()    {}
func (*AssignIPResponseV3_Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{15, 0}
}

func (m *AssignIPResponseV3_Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignIPResponseV3_Route.Unmarshal(m, b)
}
func (m *AssignIPResponseV3_Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignIPResponseV3_Route.Marshal(b, m, deterministic)
}
func (m *AssignIPResponseV3_Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignIPResponseV3_Route.Merge(m, src)
}
func (m *AssignIPResponseV3_Route) XXX_Size() int {
	return xxx_messageInfo_AssignIPResponseV3_Route.Size(m)
}
func (m *AssignIPResponseV3_Route) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignIPResponseV3_Route.DiscardUnknown(m)
}

var xxx_messageInfo_AssignIPResponseV3_Route proto.InternalMessageInfo

func (m *AssignIPResponseV3_Route) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func (m *AssignIPResponseV3_Route) GetMtu() uint32 {
	if m != nil {
		return m.Mtu
	}
	return 0
}

func (m *AssignIPResponseV3_Route) GetFamily() AssignIPResponseV3_Route_Family {
	if m != nil {
		return m.Family
	}
	return AssignIPResponseV3_Route_IPv4
}

type AssignIPResponseV3_Bandwidth struct {
	// bandwidth is in bits per second
	Bandwidth uint64 `protobuf:"varint,1,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	// burst is the HTB class's ceil in bits per second
	Burst                uint64   `protobuf:"varint,2,opt,name=burst,proto3" json:"burst,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssignIPResponseV3_Bandwidth) Reset()         { *m = AssignIPResponseV3_Bandwidth{} }
func (m *AssignIPResponseV3_Bandwidth) String() string { return proto.CompactTextString(m) }
func (*AssignIPResponseV3_Bandwidth) ProtoMessage()    {}
func (*AssignIPResponseV3_Bandwidth) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{15, 1}
}

func (m *AssignIPResponseV3_Bandwidth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignIPResponseV3_Bandwidth.Unmarshal(m, b)
}
func (m *AssignIPResponseV3_Bandwidth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignIPResponseV3_Bandwidth.Marshal(b, m, deterministic)
}
func (m *AssignIPResponseV3_Bandwidth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignIPResponseV3_Bandwidth.Merge(m, src)
}
func (m *AssignIPResponseV3_Bandwidth) XXX_Size() int {
	return xxx_messageInfo_AssignIPResponseV3_Bandwidth.Size(m)
}
func (m *AssignIPResponseV3_Bandwidth) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignIPResponseV3_Bandwidth.DiscardUnknown(m)
}

var xxx_messageInfo_AssignIPResponseV3_Bandwidth proto.InternalMessageInfo

func (m *AssignIPResponseV3_Bandwidth) GetBandwidth() uint64 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *AssignIPResponseV3_Bandwidth) GetBurst() uint64 {
	if m != nil {
		return m.Burst
	}
	return 0
}

type Error struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{16}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// This is for storage of an assignment in the titus executor.
type Assignment struct {
	// Types that are valid to be assigned to Assignment:
	//	*Assignment_AssignIPResponseV3
	Assignment           isAssignment_Assignment `protobuf_oneof:"assignment"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Assignment) Reset()         { *m = Assignment{} }
func (m *Assignment) String() string { return proto.CompactTextString(m) }
func (*Assignment) ProtoMessage()    {}
func (*Assignment) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{17}
}

func (m *Assignment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Assignment.Unmarshal(m, b)
}
func (m *Assignment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Assignment.Marshal(b, m, deterministic)
}
func (m *Assignment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Assignment.Merge(m, src)
}
func (m *Assignment) XXX_Size() int {
	return xxx_messageInfo_Assignment.Size(m)
}
func (m *Assignment) XXX_DiscardUnknown() {
	xxx_messageInfo_Assignment.DiscardUnknown(m)
}

var xxx_messageInfo_Assignment proto.InternalMessageInfo

type isAssignment_Assignment interface {
	isAssignment_Assignment()
}

type Assignment_AssignIPResponseV3 struct {
	AssignIPResponseV3 *AssignIPResponseV3 `protobuf:"bytes,1,opt,name=assignIPResponseV3,proto3,oneof"`
}

func (*Assignment_AssignIPResponseV3) isAssignment_Assignment() {}

func (m *Assignment) GetAssignment() isAssignment_Assignment {
	if m != nil {
		return m.Assignment
	}
	return nil
}

func (m *Assignment) GetAssignIPResponseV3() *AssignIPResponseV3 {
	if x, ok := m.GetAssignment().(*Assignment_AssignIPResponseV3); ok {
		return x.AssignIPResponseV3
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Assignment) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Assignment_AssignIPResponseV3)(nil),
	}
}

// This is the serialized output of the VPC Tool
type VPCToolResult struct {
	// Types that are valid to be assigned to Result:
	//	*VPCToolResult_Assignment
	//	*VPCToolResult_Error
	Result               isVPCToolResult_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *VPCToolResult) Reset()         { *m = VPCToolResult{} }
func (m *VPCToolResult) String() string { return proto.CompactTextString(m) }
func (*VPCToolResult) ProtoMessage()    {}
func (*VPCToolResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{18}
}

func (m *VPCToolResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VPCToolResult.Unmarshal(m, b)
}
func (m *VPCToolResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VPCToolResult.Marshal(b, m, deterministic)
}
func (m *VPCToolResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VPCToolResult.Merge(m, src)
}
func (m *VPCToolResult) XXX_Size() int {
	return xxx_messageInfo_VPCToolResult.Size(m)
}
func (m *VPCToolResult) XXX_DiscardUnknown() {
	xxx_messageInfo_VPCToolResult.DiscardUnknown(m)
}

var xxx_messageInfo_VPCToolResult proto.InternalMessageInfo

type isVPCToolResult_Result interface {
	isVPCToolResult_Result()
}

type VPCToolResult_Assignment struct {
	Assignment *Assignment `protobuf:"bytes,1,opt,name=assignment,proto3,oneof"`
}

type VPCToolResult_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*VPCToolResult_Assignment) isVPCToolResult_Result() {}

func (*VPCToolResult_Error) isVPCToolResult_Result() {}

func (m *VPCToolResult) GetResult() isVPCToolResult_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *VPCToolResult) GetAssignment() *Assignment {
	if x, ok := m.GetResult().(*VPCToolResult_Assignment); ok {
		return x.Assignment
	}
	return nil
}

func (m *VPCToolResult) GetError() *Error {
	if x, ok := m.GetResult().(*VPCToolResult_Error); ok {
		return x.Error
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*VPCToolResult) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*VPCToolResult_Assignment)(nil),
		(*VPCToolResult_Error)(nil),
	}
}

type UnassignIPRequestV3 struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnassignIPRequestV3) Reset()         { *m = UnassignIPRequestV3{} }
func (m *UnassignIPRequestV3) String() string { return proto.CompactTextString(m) }
func (*UnassignIPRequestV3) ProtoMessage()    {}
func (*UnassignIPRequestV3) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{19}
}

func (m *UnassignIPRequestV3) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnassignIPRequestV3.Unmarshal(m, b)
}
func (m *UnassignIPRequestV3) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnassignIPRequestV3.Marshal(b, m, deterministic)
}
func (m *UnassignIPRequestV3) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnassignIPRequestV3.Merge(m, src)
}
func (m *UnassignIPRequestV3) XXX_Size() int {
	return xxx_messageInfo_UnassignIPRequestV3.Size(m)
}
func (m *UnassignIPRequestV3) XXX_DiscardUnknown() {
	xxx_messageInfo_UnassignIPRequestV3.DiscardUnknown(m)
}

var xxx_messageInfo_UnassignIPRequestV3 proto.InternalMessageInfo

func (m *UnassignIPRequestV3) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type UnassignIPResponseV3 struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnassignIPResponseV3) Reset()         { *m = UnassignIPResponseV3{} }
func (m *UnassignIPResponseV3) String() string { return proto.CompactTextString(m) }
func (*UnassignIPResponseV3) ProtoMessage()    {}
func (*UnassignIPResponseV3) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{20}
}

func (m *UnassignIPResponseV3) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnassignIPResponseV3.Unmarshal(m, b)
}
func (m *UnassignIPResponseV3) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnassignIPResponseV3.Marshal(b, m, deterministic)
}
func (m *UnassignIPResponseV3) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnassignIPResponseV3.Merge(m, src)
}
func (m *UnassignIPResponseV3) XXX_Size() int {
	return xxx_messageInfo_UnassignIPResponseV3.Size(m)
}
func (m *UnassignIPResponseV3) XXX_DiscardUnknown() {
	xxx_messageInfo_UnassignIPResponseV3.DiscardUnknown(m)
}

var xxx_messageInfo_UnassignIPResponseV3 proto.InternalMessageInfo

type UsableAddress struct {
	Address              *Address `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PrefixLength         uint32   `protobuf:"varint,2,opt,name=prefixLength,proto3" json:"prefixLength,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsableAddress) Reset()         { *m = UsableAddress{} }
func (m *UsableAddress) String() string { return proto.CompactTextString(m) }
func (*UsableAddress) ProtoMessage()    {}
func (*UsableAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{21}
}

func (m *UsableAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsableAddress.Unmarshal(m, b)
}
func (m *UsableAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsableAddress.Marshal(b, m, deterministic)
}
func (m *UsableAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsableAddress.Merge(m, src)
}
func (m *UsableAddress) XXX_Size() int {
	return xxx_messageInfo_UsableAddress.Size(m)
}
func (m *UsableAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_UsableAddress.DiscardUnknown(m)
}

var xxx_messageInfo_UsableAddress proto.InternalMessageInfo

func (m *UsableAddress) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *UsableAddress) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

// AddressGCMetadata is sent when the instance requests that the IP Service GC it. It's basically a way to
// indicate when the IP was last used, and we can GC it based on that metadata.
type GCRequest struct {
	CacheVersion               *CacheVersion               `protobuf:"bytes,1,opt,name=cacheVersion,proto3" json:"cacheVersion,omitempty"`
	InstanceIdentity           *InstanceIdentity           `protobuf:"bytes,2,opt,name=instanceIdentity,proto3" json:"instanceIdentity,omitempty"`
	NetworkInterfaceAttachment *NetworkInterfaceAttachment `protobuf:"bytes,3,opt,name=networkInterfaceAttachment,proto3" json:"networkInterfaceAttachment,omitempty"`
	// unallocatedAddresses are addresses we were able to take a lock on
	UnallocatedAddresses []*UtilizedAddress `protobuf:"bytes,4,rep,name=unallocatedAddresses,proto3" json:"unallocatedAddresses,omitempty"`
	// nonviableAddresses are addresses which we found found in the store, but we decided not to nominate
	// for GC, because they've been bumped recently
	NonviableAddresses []*UtilizedAddress `protobuf:"bytes,5,rep,name=nonviableAddresses,proto3" json:"nonviableAddresses,omitempty"`
	// allocatedAddresses are addresses currently in use.
	AllocatedAddresses   []*UtilizedAddress `protobuf:"bytes,6,rep,name=allocatedAddresses,proto3" json:"allocatedAddresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GCRequest) Reset()         { *m = GCRequest{} }
func (m *GCRequest) String() string { return proto.CompactTextString(m) }
func (*GCRequest) ProtoMessage()    {}
func (*GCRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{22}
}

func (m *GCRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GCRequest.Unmarshal(m, b)
}
func (m *GCRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GCRequest.Marshal(b, m, deterministic)
}
func (m *GCRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GCRequest.Merge(m, src)
}
func (m *GCRequest) XXX_Size() int {
	return xxx_messageInfo_GCRequest.Size(m)
}
func (m *GCRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GCRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GCRequest proto.InternalMessageInfo

func (m *GCRequest) GetCacheVersion() *CacheVersion {
	if m != nil {
		return m.CacheVersion
	}
	return nil
}

func (m *GCRequest) GetInstanceIdentity() *InstanceIdentity {
	if m != nil {
		return m.InstanceIdentity
	}
	return nil
}

func (m *GCRequest) GetNetworkInterfaceAttachment() *NetworkInterfaceAttachment {
	if m != nil {
		return m.NetworkInterfaceAttachment
	}
	return nil
}

func (m *GCRequest) GetUnallocatedAddresses() []*UtilizedAddress {
	if m != nil {
		return m.UnallocatedAddresses
	}
	return nil
}

func (m *GCRequest) GetNonviableAddresses() []*UtilizedAddress {
	if m != nil {
		return m.NonviableAddresses
	}
	return nil
}

func (m *GCRequest) GetAllocatedAddresses() []*UtilizedAddress {
	if m != nil {
		return m.AllocatedAddresses
	}
	return nil
}

type GCResponse struct {
	CacheVersion         *CacheVersion `protobuf:"bytes,1,opt,name=cacheVersion,proto3" json:"cacheVersion,omitempty"`
	AddressToBump        []*Address    `protobuf:"bytes,2,rep,name=addressToBump,proto3" json:"addressToBump,omitempty"`
	AddressToDelete      []*Address    `protobuf:"bytes,3,rep,name=addressToDelete,proto3" json:"addressToDelete,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GCResponse) Reset()         { *m = GCResponse{} }
func (m *GCResponse) String() string { return proto.CompactTextString(m) }
func (*GCResponse) ProtoMessage()    {}
func (*GCResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{23}
}

func (m *GCResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GCResponse.Unmarshal(m, b)
}
func (m *GCResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GCResponse.Marshal(b, m, deterministic)
}
func (m *GCResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GCResponse.Merge(m, src)
}
func (m *GCResponse) XXX_Size() int {
	return xxx_messageInfo_GCResponse.Size(m)
}
func (m *GCResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GCResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GCResponse proto.InternalMessageInfo

func (m *GCResponse) GetCacheVersion() *CacheVersion {
	if m != nil {
		return m.CacheVersion
	}
	return nil
}

func (m *GCResponse) GetAddressToBump() []*Address {
	if m != nil {
		return m.AddressToBump
	}
	return nil
}

func (m *GCResponse) GetAddressToDelete() []*Address {
	if m != nil {
		return m.AddressToDelete
	}
	return nil
}

type GCRequestV3 struct {
	InstanceIdentity *InstanceIdentity `protobuf:"bytes,1,opt,name=instanceIdentity,proto3" json:"instanceIdentity,omitempty"`
	RunningTaskIDs   []string          `protobuf:"bytes,2,rep,name=runningTaskIDs,proto3" json:"runningTaskIDs,omitempty"`
	// Soft indicates that do not perform the actual GC, only return the task IDs that would be GC'd
	Soft                 bool     `protobuf:"varint,3,opt,name=soft,proto3" json:"soft,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GCRequestV3) Reset()         { *m = GCRequestV3{} }
func (m *GCRequestV3) String() string { return proto.CompactTextString(m) }
func (*GCRequestV3) ProtoMessage()    {}
func (*GCRequestV3) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{24}
}

func (m *GCRequestV3) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GCRequestV3.Unmarshal(m, b)
}
func (m *GCRequestV3) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GCRequestV3.Marshal(b, m, deterministic)
}
func (m *GCRequestV3) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GCRequestV3.Merge(m, src)
}
func (m *GCRequestV3) XXX_Size() int {
	return xxx_messageInfo_GCRequestV3.Size(m)
}
func (m *GCRequestV3) XXX_DiscardUnknown() {
	xxx_messageInfo_GCRequestV3.DiscardUnknown(m)
}

var xxx_messageInfo_GCRequestV3 proto.InternalMessageInfo

func (m *GCRequestV3) GetInstanceIdentity() *InstanceIdentity {
	if m != nil {
		return m.InstanceIdentity
	}
	return nil
}

func (m *GCRequestV3) GetRunningTaskIDs() []string {
	if m != nil {
		return m.RunningTaskIDs
	}
	return nil
}

func (m *GCRequestV3) GetSoft() bool {
	if m != nil {
		return m.Soft
	}
	return false
}

type GCResponseV3 struct {
	RemovedAssignments   []string `protobuf:"bytes,1,rep,name=removedAssignments,proto3" json:"removedAssignments,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GCResponseV3) Reset()         { *m = GCResponseV3{} }
func (m *GCResponseV3) String() string { return proto.CompactTextString(m) }
func (*GCResponseV3) ProtoMessage()    {}
func (*GCResponseV3) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{25}
}

func (m *GCResponseV3) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GCResponseV3.Unmarshal(m, b)
}
func (m *GCResponseV3) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GCResponseV3.Marshal(b, m, deterministic)
}
func (m *GCResponseV3) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GCResponseV3.Merge(m, src)
}
func (m *GCResponseV3) XXX_Size() int {
	return xxx_messageInfo_GCResponseV3.Size(m)
}
func (m *GCResponseV3) XXX_DiscardUnknown() {
	xxx_messageInfo_GCResponseV3.DiscardUnknown(m)
}

var xxx_messageInfo_GCResponseV3 proto.InternalMessageInfo

func (m *GCResponseV3) GetRemovedAssignments() []string {
	if m != nil {
		return m.RemovedAssignments
	}
	return nil
}

type RefreshIPRequest struct {
	UtilizedAddress        []*UtilizedAddress `protobuf:"bytes,1,rep,name=utilizedAddress,proto3" json:"utilizedAddress,omitempty"`
	BranchNetworkInterface *NetworkInterface  `protobuf:"bytes,2,opt,name=branchNetworkInterface,proto3" json:"branchNetworkInterface,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}           `json:"-"`
	XXX_unrecognized       []byte             `json:"-"`
	XXX_sizecache          int32              `json:"-"`
}

func (m *RefreshIPRequest) Reset()         { *m = RefreshIPRequest{} }
func (m *RefreshIPRequest) String() string { return proto.CompactTextString(m) }
func (*RefreshIPRequest) ProtoMessage()    {}
func (*RefreshIPRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{26}
}

func (m *RefreshIPRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshIPRequest.Unmarshal(m, b)
}
func (m *RefreshIPRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshIPRequest.Marshal(b, m, deterministic)
}
func (m *RefreshIPRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshIPRequest.Merge(m, src)
}
func (m *RefreshIPRequest) XXX_Size() int {
	return xxx_messageInfo_RefreshIPRequest.Size(m)
}
func (m *RefreshIPRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshIPRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshIPRequest proto.InternalMessageInfo

func (m *RefreshIPRequest) GetUtilizedAddress() []*UtilizedAddress {
	if m != nil {
		return m.UtilizedAddress
	}
	return nil
}

func (m *RefreshIPRequest) GetBranchNetworkInterface() *NetworkInterface {
	if m != nil {
		return m.BranchNetworkInterface
	}
	return nil
}

type RefreshIPResponse struct {
	NextRefresh          *durationpb.Duration `protobuf:"bytes,1,opt,name=nextRefresh,proto3" json:"nextRefresh,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RefreshIPResponse) Reset()         { *m = RefreshIPResponse{} }
func (m *RefreshIPResponse) String() string { return proto.CompactTextString(m) }
func (*RefreshIPResponse) ProtoMessage()    {}
func (*RefreshIPResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{27}
}

func (m *RefreshIPResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshIPResponse.Unmarshal(m, b)
}
func (m *RefreshIPResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshIPResponse.Marshal(b, m, deterministic)
}
func (m *RefreshIPResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshIPResponse.Merge(m, src)
}
func (m *RefreshIPResponse) XXX_Size() int {
	return xxx_messageInfo_RefreshIPResponse.Size(m)
}
func (m *RefreshIPResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshIPResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshIPResponse proto.InternalMessageInfo

func (m *RefreshIPResponse) GetNextRefresh() *durationpb.Duration {
	if m != nil {
		return m.NextRefresh
	}
	return nil
}

type GCSetupRequest struct {
	InstanceIdentity     *InstanceIdentity `protobuf:"bytes,1,opt,name=instanceIdentity,proto3" json:"instanceIdentity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GCSetupRequest) Reset()         { *m = GCSetupRequest{} }
func (m *GCSetupRequest) String() string { return proto.CompactTextString(m) }
func (*GCSetupRequest) ProtoMessage()    {}
func (*GCSetupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{28}
}

func (m *GCSetupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GCSetupRequest.Unmarshal(m, b)
}
func (m *GCSetupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GCSetupRequest.Marshal(b, m, deterministic)
}
func (m *GCSetupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GCSetupRequest.Merge(m, src)
}
func (m *GCSetupRequest) XXX_Size() int {
	return xxx_messageInfo_GCSetupRequest.Size(m)
}
func (m *GCSetupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GCSetupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GCSetupRequest proto.InternalMessageInfo

func (m *GCSetupRequest) GetInstanceIdentity() *InstanceIdentity {
	if m != nil {
		return m.InstanceIdentity
	}
	return nil
}

type GCSetupResponse struct {
	NetworkInterfaceAttachment []*NetworkInterfaceAttachment `protobuf:"bytes,1,rep,name=networkInterfaceAttachment,proto3" json:"networkInterfaceAttachment,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                      `json:"-"`
	XXX_unrecognized           []byte                        `json:"-"`
	XXX_sizecache              int32                         `json:"-"`
}

func (m *GCSetupResponse) Reset()         { *m = GCSetupResponse{} }
func (m *GCSetupResponse) String() string { return proto.CompactTextString(m) }
func (*GCSetupResponse) ProtoMessage()    {}
func (*GCSetupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{29}
}

func (m *GCSetupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GCSetupResponse.Unmarshal(m, b)
}
func (m *GCSetupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GCSetupResponse.Marshal(b, m, deterministic)
}
func (m *GCSetupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GCSetupResponse.Merge(m, src)
}
func (m *GCSetupResponse) XXX_Size() int {
	return xxx_messageInfo_GCSetupResponse.Size(m)
}
func (m *GCSetupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GCSetupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GCSetupResponse proto.InternalMessageInfo

func (m *GCSetupResponse) GetNetworkInterfaceAttachment() []*NetworkInterfaceAttachment {
	if m != nil {
		return m.NetworkInterfaceAttachment
	}
	return nil
}

type GCLegacySetupRequest struct {
	InstanceIdentity     *InstanceIdentity `protobuf:"bytes,1,opt,name=instanceIdentity,proto3" json:"instanceIdentity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GCLegacySetupRequest) Reset()         { *m = GCLegacySetupRequest{} }
func (m *GCLegacySetupRequest) String() string { return proto.CompactTextString(m) }
func (*GCLegacySetupRequest) ProtoMessage()    {}
func (*GCLegacySetupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{30}
}

func (m *GCLegacySetupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GCLegacySetupRequest.Unmarshal(m, b)
}
func (m *GCLegacySetupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GCLegacySetupRequest.Marshal(b, m, deterministic)
}
func (m *GCLegacySetupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GCLegacySetupRequest.Merge(m, src)
}
func (m *GCLegacySetupRequest) XXX_Size() int {
	return xxx_messageInfo_GCLegacySetupRequest.Size(m)
}
func (m *GCLegacySetupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GCLegacySetupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GCLegacySetupRequest proto.InternalMessageInfo

func (m *GCLegacySetupRequest) GetInstanceIdentity() *InstanceIdentity {
	if m != nil {
		return m.InstanceIdentity
	}
	return nil
}

type GCLegacySetupResponse struct {
	NetworkInterfaceAttachment []*NetworkInterfaceAttachment `protobuf:"bytes,1,rep,name=networkInterfaceAttachment,proto3" json:"networkInterfaceAttachment,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                      `json:"-"`
	XXX_unrecognized           []byte                        `json:"-"`
	XXX_sizecache              int32                         `json:"-"`
}

func (m *GCLegacySetupResponse) Reset()         { *m = GCLegacySetupResponse{} }
func (m *GCLegacySetupResponse) String() string { return proto.CompactTextString(m) }
func (*GCLegacySetupResponse) ProtoMessage()    {}
func (*GCLegacySetupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{31}
}

func (m *GCLegacySetupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GCLegacySetupResponse.Unmarshal(m, b)
}
func (m *GCLegacySetupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GCLegacySetupResponse.Marshal(b, m, deterministic)
}
func (m *GCLegacySetupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GCLegacySetupResponse.Merge(m, src)
}
func (m *GCLegacySetupResponse) XXX_Size() int {
	return xxx_messageInfo_GCLegacySetupResponse.Size(m)
}
func (m *GCLegacySetupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GCLegacySetupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GCLegacySetupResponse proto.InternalMessageInfo

func (m *GCLegacySetupResponse) GetNetworkInterfaceAttachment() []*NetworkInterfaceAttachment {
	if m != nil {
		return m.NetworkInterfaceAttachment
	}
	return nil
}

type LockId struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LockId) Reset()         { *m = LockId{} }
func (m *LockId) String() string { return proto.CompactTextString(m) }
func (*LockId) ProtoMessage()    {}
func (*LockId) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{32}
}

func (m *LockId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockId.Unmarshal(m, b)
}
func (m *LockId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockId.Marshal(b, m, deterministic)
}
func (m *LockId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockId.Merge(m, src)
}
func (m *LockId) XXX_Size() int {
	return xxx_messageInfo_LockId.Size(m)
}
func (m *LockId) XXX_DiscardUnknown() {
	xxx_messageInfo_LockId.DiscardUnknown(m)
}

var xxx_messageInfo_LockId proto.InternalMessageInfo

func (m *LockId) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Lock struct {
	Id                   int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	LockName             string                 `protobuf:"bytes,2,opt,name=lockName,proto3" json:"lockName,omitempty"`
	HeldBy               string                 `protobuf:"bytes,3,opt,name=heldBy,proto3" json:"heldBy,omitempty"`
	HeldUntil            *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=heldUntil,proto3" json:"heldUntil,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Lock) Reset()         { *m = Lock{} }
func (m *Lock) String() string { return proto.CompactTextString(m) }
func (*Lock) ProtoMessage()    {}
func (*Lock) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{33}
}

func (m *Lock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lock.Unmarshal(m, b)
}
func (m *Lock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lock.Marshal(b, m, deterministic)
}
func (m *Lock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lock.Merge(m, src)
}
func (m *Lock) XXX_Size() int {
	return xxx_messageInfo_Lock.Size(m)
}
func (m *Lock) XXX_DiscardUnknown() {
	xxx_messageInfo_Lock.DiscardUnknown(m)
}

var xxx_messageInfo_Lock proto.InternalMessageInfo

func (m *Lock) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Lock) GetLockName() string {
	if m != nil {
		return m.LockName
	}
	return ""
}

func (m *Lock) GetHeldBy() string {
	if m != nil {
		return m.HeldBy
	}
	return ""
}

func (m *Lock) GetHeldUntil() *timestamppb.Timestamp {
	if m != nil {
		return m.HeldUntil
	}
	return nil
}

type GetLocksRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLocksRequest) Reset()         { *m = GetLocksRequest{} }
func (m *GetLocksRequest) String() string { return proto.CompactTextString(m) }
func (*GetLocksRequest) ProtoMessage()    {}
func (*GetLocksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{34}
}

func (m *GetLocksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLocksRequest.Unmarshal(m, b)
}
func (m *GetLocksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLocksRequest.Marshal(b, m, deterministic)
}
func (m *GetLocksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLocksRequest.Merge(m, src)
}
func (m *GetLocksRequest) XXX_Size() int {
	return xxx_messageInfo_GetLocksRequest.Size(m)
}
func (m *GetLocksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLocksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLocksRequest proto.InternalMessageInfo

type GetLocksResponse struct {
	Locks                []*Lock  `protobuf:"bytes,1,rep,name=locks,proto3" json:"locks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLocksResponse) Reset()         { *m = GetLocksResponse{} }
func (m *GetLocksResponse) String() string { return proto.CompactTextString(m) }
func (*GetLocksResponse) ProtoMessage()    {}
func (*GetLocksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{35}
}

func (m *GetLocksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLocksResponse.Unmarshal(m, b)
}
func (m *GetLocksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLocksResponse.Marshal(b, m, deterministic)
}
func (m *GetLocksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLocksResponse.Merge(m, src)
}
func (m *GetLocksResponse) XXX_Size() int {
	return xxx_messageInfo_GetLocksResponse.Size(m)
}
func (m *GetLocksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLocksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLocksResponse proto.InternalMessageInfo

func (m *GetLocksResponse) GetLocks() []*Lock {
	if m != nil {
		return m.Locks
	}
	return nil
}

type PreemptLockRequest struct {
	LockName             string   `protobuf:"bytes,1,opt,name=lockName,proto3" json:"lockName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PreemptLockRequest) Reset()         { *m = PreemptLockRequest{} }
func (m *PreemptLockRequest) String() string { return proto.CompactTextString(m) }
func (*PreemptLockRequest) ProtoMessage()    {}
func (*PreemptLockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{36}
}

func (m *PreemptLockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreemptLockRequest.Unmarshal(m, b)
}
func (m *PreemptLockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreemptLockRequest.Marshal(b, m, deterministic)
}
func (m *PreemptLockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreemptLockRequest.Merge(m, src)
}
func (m *PreemptLockRequest) XXX_Size() int {
	return xxx_messageInfo_PreemptLockRequest.Size(m)
}
func (m *PreemptLockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PreemptLockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PreemptLockRequest proto.InternalMessageInfo

func (m *PreemptLockRequest) GetLockName() string {
	if m != nil {
		return m.LockName
	}
	return ""
}

type AssociateTrunkNetworkInterfaceRequest struct {
	// Types that are valid to be assigned to TrunkNetworkInterfaceIdentifier:
	//	*AssociateTrunkNetworkInterfaceRequest_InstanceIdentity
	//	*AssociateTrunkNetworkInterfaceRequest_TrunkENI
	TrunkNetworkInterfaceIdentifier isAssociateTrunkNetworkInterfaceRequest_TrunkNetworkInterfaceIdentifier `protobuf_oneof:"trunkNetworkInterfaceIdentifier"`
	BranchENI                       string                                                                  `protobuf:"bytes,3,opt,name=branchENI,proto3" json:"branchENI,omitempty"`
	VlanId                          uint64                                                                  `protobuf:"varint,4,opt,name=vlanId,proto3" json:"vlanId,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}                                                                `json:"-"`
	XXX_unrecognized                []byte                                                                  `json:"-"`
	XXX_sizecache                   int32                                                                   `json:"-"`
}

func (m *AssociateTrunkNetworkInterfaceRequest) Reset()         { *m = AssociateTrunkNetworkInterfaceRequest{} }
func (m *AssociateTrunkNetworkInterfaceRequest) String() string { return proto.CompactTextString(m) }
func (*AssociateTrunkNetworkInterfaceRequest) ProtoMessage()    {}
func (*AssociateTrunkNetworkInterfaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{37}
}

func (m *AssociateTrunkNetworkInterfaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssociateTrunkNetworkInterfaceRequest.Unmarshal(m, b)
}
func (m *AssociateTrunkNetworkInterfaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssociateTrunkNetworkInterfaceRequest.Marshal(b, m, deterministic)
}
func (m *AssociateTrunkNetworkInterfaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssociateTrunkNetworkInterfaceRequest.Merge(m, src)
}
func (m *AssociateTrunkNetworkInterfaceRequest) XXX_Size() int {
	return xxx_messageInfo_AssociateTrunkNetworkInterfaceRequest.Size(m)
}
func (m *AssociateTrunkNetworkInterfaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssociateTrunkNetworkInterfaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AssociateTrunkNetworkInterfaceRequest proto.InternalMessageInfo

type isAssociateTrunkNetworkInterfaceRequest_TrunkNetworkInterfaceIdentifier interface {
	isAssociateTrunkNetworkInterfaceRequest_TrunkNetworkInterfaceIdentifier()
}

type AssociateTrunkNetworkInterfaceRequest_InstanceIdentity struct {
	InstanceIdentity *InstanceIdentity `protobuf:"bytes,1,opt,name=instanceIdentity,proto3,oneof"`
}

type AssociateTrunkNetworkInterfaceRequest_TrunkENI struct {
	TrunkENI string `protobuf:"bytes,2,opt,name=trunkENI,proto3,oneof"`
}

func (*AssociateTrunkNetworkInterfaceRequest_InstanceIdentity) isAssociateTrunkNetworkInterfaceRequest_TrunkNetworkInterfaceIdentifier() {
}

func (*AssociateTrunkNetworkInterfaceRequest_TrunkENI) isAssociateTrunkNetworkInterfaceRequest_TrunkNetworkInterfaceIdentifier() {
}

func (m *AssociateTrunkNetworkInterfaceRequest) GetTrunkNetworkInterfaceIdentifier() isAssociateTrunkNetworkInterfaceRequest_TrunkNetworkInterfaceIdentifier {
	if m != nil {
		return m.TrunkNetworkInterfaceIdentifier
	}
	return nil
}

func (m *AssociateTrunkNetworkInterfaceRequest) GetInstanceIdentity() *InstanceIdentity {
	if x, ok := m.GetTrunkNetworkInterfaceIdentifier().(*AssociateTrunkNetworkInterfaceRequest_InstanceIdentity); ok {
		return x.InstanceIdentity
	}
	return nil
}

func (m *AssociateTrunkNetworkInterfaceRequest) GetTrunkENI() string {
	if x, ok := m.GetTrunkNetworkInterfaceIdentifier().(*AssociateTrunkNetworkInterfaceRequest_TrunkENI); ok {
		return x.TrunkENI
	}
	return ""
}

func (m *AssociateTrunkNetworkInterfaceRequest) GetBranchENI() string {
	if m != nil {
		return m.BranchENI
	}
	return ""
}

func (m *AssociateTrunkNetworkInterfaceRequest) GetVlanId() uint64 {
	if m != nil {
		return m.VlanId
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AssociateTrunkNetworkInterfaceRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AssociateTrunkNetworkInterfaceRequest_InstanceIdentity)(nil),
		(*AssociateTrunkNetworkInterfaceRequest_TrunkENI)(nil),
	}
}

type AssociateTrunkNetworkInterfaceResponse struct {
	AssociationId        string   `protobuf:"bytes,1,opt,name=associationId,proto3" json:"associationId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssociateTrunkNetworkInterfaceResponse) Reset() {
	*m = AssociateTrunkNetworkInterfaceResponse{}
}
func (m *AssociateTrunkNetworkInterfaceResponse) String() string { return proto.CompactTextString(m) }
func (*AssociateTrunkNetworkInterfaceResponse) ProtoMessage()    {}
func (*AssociateTrunkNetworkInterfaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{38}
}

func (m *AssociateTrunkNetworkInterfaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssociateTrunkNetworkInterfaceResponse.Unmarshal(m, b)
}
func (m *AssociateTrunkNetworkInterfaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssociateTrunkNetworkInterfaceResponse.Marshal(b, m, deterministic)
}
func (m *AssociateTrunkNetworkInterfaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssociateTrunkNetworkInterfaceResponse.Merge(m, src)
}
func (m *AssociateTrunkNetworkInterfaceResponse) XXX_Size() int {
	return xxx_messageInfo_AssociateTrunkNetworkInterfaceResponse.Size(m)
}
func (m *AssociateTrunkNetworkInterfaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AssociateTrunkNetworkInterfaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AssociateTrunkNetworkInterfaceResponse proto.InternalMessageInfo

func (m *AssociateTrunkNetworkInterfaceResponse) GetAssociationId() string {
	if m != nil {
		return m.AssociationId
	}
	return ""
}

type DisassociateTrunkNetworkInterfaceRequest struct {
	// Types that are valid to be assigned to Key:
	//	*DisassociateTrunkNetworkInterfaceRequest_AssociationId
	Key                  isDisassociateTrunkNetworkInterfaceRequest_Key `protobuf_oneof:"key"`
	Force                bool                                           `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *DisassociateTrunkNetworkInterfaceRequest) Reset() {
	*m = DisassociateTrunkNetworkInterfaceRequest{}
}
func (m *DisassociateTrunkNetworkInterfaceRequest) String() string { return proto.CompactTextString(m) }
func (*DisassociateTrunkNetworkInterfaceRequest) ProtoMessage()    {}
func (*DisassociateTrunkNetworkInterfaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{39}
}

func (m *DisassociateTrunkNetworkInterfaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisassociateTrunkNetworkInterfaceRequest.Unmarshal(m, b)
}
func (m *DisassociateTrunkNetworkInterfaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisassociateTrunkNetworkInterfaceRequest.Marshal(b, m, deterministic)
}
func (m *DisassociateTrunkNetworkInterfaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisassociateTrunkNetworkInterfaceRequest.Merge(m, src)
}
func (m *DisassociateTrunkNetworkInterfaceRequest) XXX_Size() int {
	return xxx_messageInfo_DisassociateTrunkNetworkInterfaceRequest.Size(m)
}
func (m *DisassociateTrunkNetworkInterfaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisassociateTrunkNetworkInterfaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisassociateTrunkNetworkInterfaceRequest proto.InternalMessageInfo

type isDisassociateTrunkNetworkInterfaceRequest_Key interface {
	isDisassociateTrunkNetworkInterfaceRequest_Key()
}

type DisassociateTrunkNetworkInterfaceRequest_AssociationId struct {
	AssociationId string `protobuf:"bytes,1,opt,name=associationId,proto3,oneof"`
}

func (*DisassociateTrunkNetworkInterfaceRequest_AssociationId) isDisassociateTrunkNetworkInterfaceRequest_Key() {
}

func (m *DisassociateTrunkNetworkInterfaceRequest) GetKey() isDisassociateTrunkNetworkInterfaceRequest_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *DisassociateTrunkNetworkInterfaceRequest) GetAssociationId() string {
	if x, ok := m.GetKey().(*DisassociateTrunkNetworkInterfaceRequest_AssociationId); ok {
		return x.AssociationId
	}
	return ""
}

func (m *DisassociateTrunkNetworkInterfaceRequest) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DisassociateTrunkNetworkInterfaceRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DisassociateTrunkNetworkInterfaceRequest_AssociationId)(nil),
	}
}

type DisassociateTrunkNetworkInterfaceResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisassociateTrunkNetworkInterfaceResponse) Reset() {
	*m = DisassociateTrunkNetworkInterfaceResponse{}
}
func (m *DisassociateTrunkNetworkInterfaceResponse) String() string {
	return proto.CompactTextString(m)
}
func (*DisassociateTrunkNetworkInterfaceResponse) ProtoMessage() {}
func (*DisassociateTrunkNetworkInterfaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{40}
}

func (m *DisassociateTrunkNetworkInterfaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisassociateTrunkNetworkInterfaceResponse.Unmarshal(m, b)
}
func (m *DisassociateTrunkNetworkInterfaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisassociateTrunkNetworkInterfaceResponse.Marshal(b, m, deterministic)
}
func (m *DisassociateTrunkNetworkInterfaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisassociateTrunkNetworkInterfaceResponse.Merge(m, src)
}
func (m *DisassociateTrunkNetworkInterfaceResponse) XXX_Size() int {
	return xxx_messageInfo_DisassociateTrunkNetworkInterfaceResponse.Size(m)
}
func (m *DisassociateTrunkNetworkInterfaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisassociateTrunkNetworkInterfaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisassociateTrunkNetworkInterfaceResponse proto.InternalMessageInfo

type DescribeTrunkNetworkInterfaceRequest struct {
	// Types that are valid to be assigned to TrunkNetworkInterfaceIdentifier:
	//	*DescribeTrunkNetworkInterfaceRequest_InstanceIdentity
	//	*DescribeTrunkNetworkInterfaceRequest_TrunkENI
	TrunkNetworkInterfaceIdentifier isDescribeTrunkNetworkInterfaceRequest_TrunkNetworkInterfaceIdentifier `protobuf_oneof:"trunkNetworkInterfaceIdentifier"`
	XXX_NoUnkeyedLiteral            struct{}                                                               `json:"-"`
	XXX_unrecognized                []byte                                                                 `json:"-"`
	XXX_sizecache                   int32                                                                  `json:"-"`
}

func (m *DescribeTrunkNetworkInterfaceRequest) Reset()         { *m = DescribeTrunkNetworkInterfaceRequest{} }
func (m *DescribeTrunkNetworkInterfaceRequest) String() string { return proto.CompactTextString(m) }
func (*DescribeTrunkNetworkInterfaceRequest) ProtoMessage()    {}
func (*DescribeTrunkNetworkInterfaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{41}
}

func (m *DescribeTrunkNetworkInterfaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeTrunkNetworkInterfaceRequest.Unmarshal(m, b)
}
func (m *DescribeTrunkNetworkInterfaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeTrunkNetworkInterfaceRequest.Marshal(b, m, deterministic)
}
func (m *DescribeTrunkNetworkInterfaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeTrunkNetworkInterfaceRequest.Merge(m, src)
}
func (m *DescribeTrunkNetworkInterfaceRequest) XXX_Size() int {
	return xxx_messageInfo_DescribeTrunkNetworkInterfaceRequest.Size(m)
}
func (m *DescribeTrunkNetworkInterfaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeTrunkNetworkInterfaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeTrunkNetworkInterfaceRequest proto.InternalMessageInfo

type isDescribeTrunkNetworkInterfaceRequest_TrunkNetworkInterfaceIdentifier interface {
	isDescribeTrunkNetworkInterfaceRequest_TrunkNetworkInterfaceIdentifier()
}

type DescribeTrunkNetworkInterfaceRequest_InstanceIdentity struct {
	InstanceIdentity *InstanceIdentity `protobuf:"bytes,1,opt,name=instanceIdentity,proto3,oneof"`
}

type DescribeTrunkNetworkInterfaceRequest_TrunkENI struct {
	TrunkENI string `protobuf:"bytes,2,opt,name=trunkENI,proto3,oneof"`
}

func (*DescribeTrunkNetworkInterfaceRequest_InstanceIdentity) isDescribeTrunkNetworkInterfaceRequest_TrunkNetworkInterfaceIdentifier() {
}

func (*DescribeTrunkNetworkInterfaceRequest_TrunkENI) isDescribeTrunkNetworkInterfaceRequest_TrunkNetworkInterfaceIdentifier() {
}

func (m *DescribeTrunkNetworkInterfaceRequest) GetTrunkNetworkInterfaceIdentifier() isDescribeTrunkNetworkInterfaceRequest_TrunkNetworkInterfaceIdentifier {
	if m != nil {
		return m.TrunkNetworkInterfaceIdentifier
	}
	return nil
}

func (m *DescribeTrunkNetworkInterfaceRequest) GetInstanceIdentity() *InstanceIdentity {
	if x, ok := m.GetTrunkNetworkInterfaceIdentifier().(*DescribeTrunkNetworkInterfaceRequest_InstanceIdentity); ok {
		return x.InstanceIdentity
	}
	return nil
}

func (m *DescribeTrunkNetworkInterfaceRequest) GetTrunkENI() string {
	if x, ok := m.GetTrunkNetworkInterfaceIdentifier().(*DescribeTrunkNetworkInterfaceRequest_TrunkENI); ok {
		return x.TrunkENI
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DescribeTrunkNetworkInterfaceRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DescribeTrunkNetworkInterfaceRequest_InstanceIdentity)(nil),
		(*DescribeTrunkNetworkInterfaceRequest_TrunkENI)(nil),
	}
}

type DescribeTrunkNetworkInterfaceResponse struct {
	TrunkENI             *DescribeTrunkNetworkInterfaceResponse_TrunkENI                           `protobuf:"bytes,1,opt,name=trunkENI,proto3" json:"trunkENI,omitempty"`
	Associations         []*DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation `protobuf:"bytes,2,rep,name=associations,proto3" json:"associations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                                  `json:"-"`
	XXX_unrecognized     []byte                                                                    `json:"-"`
	XXX_sizecache        int32                                                                     `json:"-"`
}

func (m *DescribeTrunkNetworkInterfaceResponse) Reset()         { *m = DescribeTrunkNetworkInterfaceResponse{} }
func (m *DescribeTrunkNetworkInterfaceResponse) String() string { return proto.CompactTextString(m) }
func (*DescribeTrunkNetworkInterfaceResponse) ProtoMessage()    {}
func (*DescribeTrunkNetworkInterfaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{42}
}

func (m *DescribeTrunkNetworkInterfaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse.Unmarshal(m, b)
}
func (m *DescribeTrunkNetworkInterfaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse.Marshal(b, m, deterministic)
}
func (m *DescribeTrunkNetworkInterfaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse.Merge(m, src)
}
func (m *DescribeTrunkNetworkInterfaceResponse) XXX_Size() int {
	return xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse.Size(m)
}
func (m *DescribeTrunkNetworkInterfaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse proto.InternalMessageInfo

func (m *DescribeTrunkNetworkInterfaceResponse) GetTrunkENI() *DescribeTrunkNetworkInterfaceResponse_TrunkENI {
	if m != nil {
		return m.TrunkENI
	}
	return nil
}

func (m *DescribeTrunkNetworkInterfaceResponse) GetAssociations() []*DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation {
	if m != nil {
		return m.Associations
	}
	return nil
}

type DescribeTrunkNetworkInterfaceResponse_TrunkENI struct {
	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountId            string                 `protobuf:"bytes,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Az                   string                 `protobuf:"bytes,3,opt,name=az,proto3" json:"az,omitempty"`
	CreatedAt            *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	SubnetId             string                 `protobuf:"bytes,5,opt,name=subnetId,proto3" json:"subnetId,omitempty"`
	VpcId                string                 `protobuf:"bytes,6,opt,name=vpcId,proto3" json:"vpcId,omitempty"`
	Region               string                 `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DescribeTrunkNetworkInterfaceResponse_TrunkENI) Reset() {
	*m = DescribeTrunkNetworkInterfaceResponse_TrunkENI{}
}
func (m *DescribeTrunkNetworkInterfaceResponse_TrunkENI) String() string {
	return proto.CompactTextString(m)
}
func (*DescribeTrunkNetworkInterfaceResponse_TrunkENI) ProtoMessage() {}
func (*DescribeTrunkNetworkInterfaceResponse_TrunkENI) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{42, 0}
}

func (m *DescribeTrunkNetworkInterfaceResponse_TrunkENI) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse_TrunkENI.Unmarshal(m, b)
}
func (m *DescribeTrunkNetworkInterfaceResponse_TrunkENI) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse_TrunkENI.Marshal(b, m, deterministic)
}
func (m *DescribeTrunkNetworkInterfaceResponse_TrunkENI) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse_TrunkENI.Merge(m, src)
}
func (m *DescribeTrunkNetworkInterfaceResponse_TrunkENI) XXX_Size() int {
	return xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse_TrunkENI.Size(m)
}
func (m *DescribeTrunkNetworkInterfaceResponse_TrunkENI) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse_TrunkENI.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse_TrunkENI proto.InternalMessageInfo

func (m *DescribeTrunkNetworkInterfaceResponse_TrunkENI) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DescribeTrunkNetworkInterfaceResponse_TrunkENI) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *DescribeTrunkNetworkInterfaceResponse_TrunkENI) GetAz() string {
	if m != nil {
		return m.Az
	}
	return ""
}

func (m *DescribeTrunkNetworkInterfaceResponse_TrunkENI) GetCreatedAt() *timestamppb.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *DescribeTrunkNetworkInterfaceResponse_TrunkENI) GetSubnetId() string {
	if m != nil {
		return m.SubnetId
	}
	return ""
}

func (m *DescribeTrunkNetworkInterfaceResponse_TrunkENI) GetVpcId() string {
	if m != nil {
		return m.VpcId
	}
	return ""
}

func (m *DescribeTrunkNetworkInterfaceResponse_TrunkENI) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type DescribeTrunkNetworkInterfaceResponse_BranchENI struct {
	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	AccountId            string                 `protobuf:"bytes,3,opt,name=accountId,proto3" json:"accountId,omitempty"`
	SubnetId             string                 `protobuf:"bytes,4,opt,name=subnetId,proto3" json:"subnetId,omitempty"`
	VpcId                string                 `protobuf:"bytes,5,opt,name=vpcId,proto3" json:"vpcId,omitempty"`
	SecurityGroupIds     []string               `protobuf:"bytes,6,rep,name=securityGroupIds,proto3" json:"securityGroupIds,omitempty"`
	ModifiedAt           *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=modifiedAt,proto3" json:"modifiedAt,omitempty"`
	LastAssignedTo       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=lastAssignedTo,proto3" json:"lastAssignedTo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DescribeTrunkNetworkInterfaceResponse_BranchENI) Reset() {
	*m = DescribeTrunkNetworkInterfaceResponse_BranchENI{}
}
func (m *DescribeTrunkNetworkInterfaceResponse_BranchENI) String() string {
	return proto.CompactTextString(m)
}
func (*DescribeTrunkNetworkInterfaceResponse_BranchENI) ProtoMessage() {}
func (*DescribeTrunkNetworkInterfaceResponse_BranchENI) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{42, 1}
}

func (m *DescribeTrunkNetworkInterfaceResponse_BranchENI) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse_BranchENI.Unmarshal(m, b)
}
func (m *DescribeTrunkNetworkInterfaceResponse_BranchENI) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse_BranchENI.Marshal(b, m, deterministic)
}
func (m *DescribeTrunkNetworkInterfaceResponse_BranchENI) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse_BranchENI.Merge(m, src)
}
func (m *DescribeTrunkNetworkInterfaceResponse_BranchENI) XXX_Size() int {
	return xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse_BranchENI.Size(m)
}
func (m *DescribeTrunkNetworkInterfaceResponse_BranchENI) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse_BranchENI.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse_BranchENI proto.InternalMessageInfo

func (m *DescribeTrunkNetworkInterfaceResponse_BranchENI) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DescribeTrunkNetworkInterfaceResponse_BranchENI) GetCreatedAt() *timestamppb.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *DescribeTrunkNetworkInterfaceResponse_BranchENI) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *DescribeTrunkNetworkInterfaceResponse_BranchENI) GetSubnetId() string {
	if m != nil {
		return m.SubnetId
	}
	return ""
}

func (m *DescribeTrunkNetworkInterfaceResponse_BranchENI) GetVpcId() string {
	if m != nil {
		return m.VpcId
	}
	return ""
}

func (m *DescribeTrunkNetworkInterfaceResponse_BranchENI) GetSecurityGroupIds() []string {
	if m != nil {
		return m.SecurityGroupIds
	}
	return nil
}

func (m *DescribeTrunkNetworkInterfaceResponse_BranchENI) GetModifiedAt() *timestamppb.Timestamp {
	if m != nil {
		return m.ModifiedAt
	}
	return nil
}

func (m *DescribeTrunkNetworkInterfaceResponse_BranchENI) GetLastAssignedTo() *timestamppb.Timestamp {
	if m != nil {
		return m.LastAssignedTo
	}
	return nil
}

type DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation struct {
	VlanId               uint64                                           `protobuf:"varint,1,opt,name=vlanId,proto3" json:"vlanId,omitempty"`
	AssociationId        string                                           `protobuf:"bytes,2,opt,name=associationId,proto3" json:"associationId,omitempty"`
	BranchENI            *DescribeTrunkNetworkInterfaceResponse_BranchENI `protobuf:"bytes,3,opt,name=branchENI,proto3" json:"branchENI,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation) Reset() {
	*m = DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation{}
}
func (m *DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation) String() string {
	return proto.CompactTextString(m)
}
func (*DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation) ProtoMessage() {}
func (*DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{42, 2}
}

func (m *DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation.Unmarshal(m, b)
}
func (m *DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation.Marshal(b, m, deterministic)
}
func (m *DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation.Merge(m, src)
}
func (m *DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation) XXX_Size() int {
	return xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation.Size(m)
}
func (m *DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation proto.InternalMessageInfo

func (m *DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation) GetVlanId() uint64 {
	if m != nil {
		return m.VlanId
	}
	return 0
}

func (m *DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation) GetAssociationId() string {
	if m != nil {
		return m.AssociationId
	}
	return ""
}

func (m *DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation) GetBranchENI() *DescribeTrunkNetworkInterfaceResponse_BranchENI {
	if m != nil {
		return m.BranchENI
	}
	return nil
}

type DetachBranchNetworkInterfaceRequest struct {
	// Types that are valid to be assigned to TrunkNetworkInterfaceIdentifier:
	//	*DetachBranchNetworkInterfaceRequest_InstanceIdentity
	TrunkNetworkInterfaceIdentifier isDetachBranchNetworkInterfaceRequest_TrunkNetworkInterfaceIdentifier `protobuf_oneof:"trunkNetworkInterfaceIdentifier"`
	XXX_NoUnkeyedLiteral            struct{}                                                              `json:"-"`
	XXX_unrecognized                []byte                                                                `json:"-"`
	XXX_sizecache                   int32                                                                 `json:"-"`
}

func (m *DetachBranchNetworkInterfaceRequest) Reset()         { *m = DetachBranchNetworkInterfaceRequest{} }
func (m *DetachBranchNetworkInterfaceRequest) String() string { return proto.CompactTextString(m) }
func (*DetachBranchNetworkInterfaceRequest) ProtoMessage()    {}
func (*DetachBranchNetworkInterfaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{43}
}

func (m *DetachBranchNetworkInterfaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetachBranchNetworkInterfaceRequest.Unmarshal(m, b)
}
func (m *DetachBranchNetworkInterfaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetachBranchNetworkInterfaceRequest.Marshal(b, m, deterministic)
}
func (m *DetachBranchNetworkInterfaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetachBranchNetworkInterfaceRequest.Merge(m, src)
}
func (m *DetachBranchNetworkInterfaceRequest) XXX_Size() int {
	return xxx_messageInfo_DetachBranchNetworkInterfaceRequest.Size(m)
}
func (m *DetachBranchNetworkInterfaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DetachBranchNetworkInterfaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DetachBranchNetworkInterfaceRequest proto.InternalMessageInfo

type isDetachBranchNetworkInterfaceRequest_TrunkNetworkInterfaceIdentifier interface {
	isDetachBranchNetworkInterfaceRequest_TrunkNetworkInterfaceIdentifier()
}

type DetachBranchNetworkInterfaceRequest_InstanceIdentity struct {
	InstanceIdentity *InstanceIdentity `protobuf:"bytes,1,opt,name=instanceIdentity,proto3,oneof"`
}

func (*DetachBranchNetworkInterfaceRequest_InstanceIdentity) isDetachBranchNetworkInterfaceRequest_TrunkNetworkInterfaceIdentifier() {
}

func (m *DetachBranchNetworkInterfaceRequest) GetTrunkNetworkInterfaceIdentifier() isDetachBranchNetworkInterfaceRequest_TrunkNetworkInterfaceIdentifier {
	if m != nil {
		return m.TrunkNetworkInterfaceIdentifier
	}
	return nil
}

func (m *DetachBranchNetworkInterfaceRequest) GetInstanceIdentity() *InstanceIdentity {
	if x, ok := m.GetTrunkNetworkInterfaceIdentifier().(*DetachBranchNetworkInterfaceRequest_InstanceIdentity); ok {
		return x.InstanceIdentity
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DetachBranchNetworkInterfaceRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DetachBranchNetworkInterfaceRequest_InstanceIdentity)(nil),
	}
}

type DetachBranchNetworkInterfaceResponse struct {
	VlanId               uint64   `protobuf:"varint,1,opt,name=vlanId,proto3" json:"vlanId,omitempty"`
	BranchENI            string   `protobuf:"bytes,2,opt,name=branchENI,proto3" json:"branchENI,omitempty"`
	AssociationID        string   `protobuf:"bytes,3,opt,name=associationID,proto3" json:"associationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetachBranchNetworkInterfaceResponse) Reset()         { *m = DetachBranchNetworkInterfaceResponse{} }
func (m *DetachBranchNetworkInterfaceResponse) String() string { return proto.CompactTextString(m) }
func (*DetachBranchNetworkInterfaceResponse) ProtoMessage()    {}
func (*DetachBranchNetworkInterfaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{44}
}

func (m *DetachBranchNetworkInterfaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetachBranchNetworkInterfaceResponse.Unmarshal(m, b)
}
func (m *DetachBranchNetworkInterfaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetachBranchNetworkInterfaceResponse.Marshal(b, m, deterministic)
}
func (m *DetachBranchNetworkInterfaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetachBranchNetworkInterfaceResponse.Merge(m, src)
}
func (m *DetachBranchNetworkInterfaceResponse) XXX_Size() int {
	return xxx_messageInfo_DetachBranchNetworkInterfaceResponse.Size(m)
}
func (m *DetachBranchNetworkInterfaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DetachBranchNetworkInterfaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DetachBranchNetworkInterfaceResponse proto.InternalMessageInfo

func (m *DetachBranchNetworkInterfaceResponse) GetVlanId() uint64 {
	if m != nil {
		return m.VlanId
	}
	return 0
}

func (m *DetachBranchNetworkInterfaceResponse) GetBranchENI() string {
	if m != nil {
		return m.BranchENI
	}
	return ""
}

func (m *DetachBranchNetworkInterfaceResponse) GetAssociationID() string {
	if m != nil {
		return m.AssociationID
	}
	return ""
}

type GetAssignmentRequest struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAssignmentRequest) Reset()         { *m = GetAssignmentRequest{} }
func (m *GetAssignmentRequest) String() string { return proto.CompactTextString(m) }
func (*GetAssignmentRequest) ProtoMessage()    {}
func (*GetAssignmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{45}
}

func (m *GetAssignmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAssignmentRequest.Unmarshal(m, b)
}
func (m *GetAssignmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAssignmentRequest.Marshal(b, m, deterministic)
}
func (m *GetAssignmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAssignmentRequest.Merge(m, src)
}
func (m *GetAssignmentRequest) XXX_Size() int {
	return xxx_messageInfo_GetAssignmentRequest.Size(m)
}
func (m *GetAssignmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAssignmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAssignmentRequest proto.InternalMessageInfo

func (m *GetAssignmentRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type GetAssignmentResponse struct {
	Assignment           *AssignIPResponseV3 `protobuf:"bytes,1,opt,name=assignment,proto3" json:"assignment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetAssignmentResponse) Reset()         { *m = GetAssignmentResponse{} }
func (m *GetAssignmentResponse) String() string { return proto.CompactTextString(m) }
func (*GetAssignmentResponse) ProtoMessage()    {}
func (*GetAssignmentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{46}
}

func (m *GetAssignmentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAssignmentResponse.Unmarshal(m, b)
}
func (m *GetAssignmentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAssignmentResponse.Marshal(b, m, deterministic)
}
func (m *GetAssignmentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAssignmentResponse.Merge(m, src)
}
func (m *GetAssignmentResponse) XXX_Size() int {
	return xxx_messageInfo_GetAssignmentResponse.Size(m)
}
func (m *GetAssignmentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAssignmentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAssignmentResponse proto.InternalMessageInfo

func (m *GetAssignmentResponse) GetAssignment() *AssignIPResponseV3 {
	if m != nil {
		return m.Assignment
	}
	return nil
}

type PrivateKey struct {
	Hostname  string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Generated *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=generated,proto3" json:"generated,omitempty"`
	// Types that are valid to be assigned to Key:
	//	*PrivateKey_Ed25519Key_
	Key                  isPrivateKey_Key `protobuf_oneof:"key"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PrivateKey) Reset()         { *m = PrivateKey{} }
func (m *PrivateKey) String() string { return proto.CompactTextString(m) }
func (*PrivateKey) ProtoMessage()    {}
func (*PrivateKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{47}
}

func (m *PrivateKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivateKey.Unmarshal(m, b)
}
func (m *PrivateKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivateKey.Marshal(b, m, deterministic)
}
func (m *PrivateKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateKey.Merge(m, src)
}
func (m *PrivateKey) XXX_Size() int {
	return xxx_messageInfo_PrivateKey.Size(m)
}
func (m *PrivateKey) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateKey.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateKey proto.InternalMessageInfo

func (m *PrivateKey) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *PrivateKey) GetGenerated() *timestamppb.Timestamp {
	if m != nil {
		return m.Generated
	}
	return nil
}

type isPrivateKey_Key interface {
	isPrivateKey_Key()
}

type PrivateKey_Ed25519Key_ struct {
	Ed25519Key *PrivateKey_Ed25519Key `protobuf:"bytes,3,opt,name=ed25519Key,proto3,oneof"`
}

func (*PrivateKey_Ed25519Key_) isPrivateKey_Key() {}

func (m *PrivateKey) GetKey() isPrivateKey_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *PrivateKey) GetEd25519Key() *PrivateKey_Ed25519Key {
	if x, ok := m.GetKey().(*PrivateKey_Ed25519Key_); ok {
		return x.Ed25519Key
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PrivateKey) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PrivateKey_Ed25519Key_)(nil),
	}
}

type PrivateKey_Ed25519Key struct {
	Rfc8032Key           []byte   `protobuf:"bytes,1,opt,name=rfc8032key,proto3" json:"rfc8032key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrivateKey_Ed25519Key) Reset()         { *m = PrivateKey_Ed25519Key{} }
func (m *PrivateKey_Ed25519Key) String() string { return proto.CompactTextString(m) }
func (*PrivateKey_Ed25519Key) ProtoMessage()    {}
func (*PrivateKey_Ed25519Key) Descriptor() ([]byte, []int) {
	return fileDescriptor_95d23e4d548ba1d7, []int{47, 0}
}

func (m *PrivateKey_Ed25519Key) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivateKey_Ed25519Key.Unmarshal(m, b)
}
func (m *PrivateKey_Ed25519Key) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivateKey_Ed25519Key.Marshal(b, m, deterministic)
}
func (m *PrivateKey_Ed25519Key) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateKey_Ed25519Key.Merge(m, src)
}
func (m *PrivateKey_Ed25519Key) XXX_Size() int {
	return xxx_messageInfo_PrivateKey_Ed25519Key.Size(m)
}
func (m *PrivateKey_Ed25519Key) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateKey_Ed25519Key.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateKey_Ed25519Key proto.InternalMessageInfo

func (m *PrivateKey_Ed25519Key) GetRfc8032Key() []byte {
	if m != nil {
		return m.Rfc8032Key
	}
	return nil
}

func init() {
	proto.RegisterEnum("com.netflix.titus.executor.vpc.AssignIPResponseV3_Route_Family", AssignIPResponseV3_Route_Family_name, AssignIPResponseV3_Route_Family_value)
	proto.RegisterType((*Address)(nil), "com.netflix.titus.executor.vpc.Address")
	proto.RegisterType((*CacheVersion)(nil), "com.netflix.titus.executor.vpc.CacheVersion")
	proto.RegisterType((*NetworkInterfaceAttachment)(nil), "com.netflix.titus.executor.vpc.NetworkInterfaceAttachment")
	proto.RegisterType((*NetworkInterface)(nil), "com.netflix.titus.executor.vpc.NetworkInterface")
	proto.RegisterType((*InstanceIdentity)(nil), "com.netflix.titus.executor.vpc.InstanceIdentity")
	proto.RegisterType((*ProvisionInstanceRequest)(nil), "com.netflix.titus.executor.vpc.ProvisionInstanceRequest")
	proto.RegisterType((*ProvisionInstanceResponse)(nil), "com.netflix.titus.executor.vpc.ProvisionInstanceResponse")
	proto.RegisterType((*ProvisionInstanceRequestV3)(nil), "com.netflix.titus.executor.vpc.ProvisionInstanceRequestV3")
	proto.RegisterType((*ProvisionInstanceResponseV3)(nil), "com.netflix.titus.executor.vpc.ProvisionInstanceResponseV3")
	proto.RegisterType((*UtilizedAddress)(nil), "com.netflix.titus.executor.vpc.UtilizedAddress")
	proto.RegisterType((*AssignIPRequest)(nil), "com.netflix.titus.executor.vpc.AssignIPRequest")
	proto.RegisterType((*AssignIPResponse)(nil), "com.netflix.titus.executor.vpc.AssignIPResponse")
	proto.RegisterType((*ElasticAddressSet)(nil), "com.netflix.titus.executor.vpc.elasticAddressSet")
	proto.RegisterType((*AssignIPRequestV3)(nil), "com.netflix.titus.executor.vpc.AssignIPRequestV3")
	proto.RegisterType((*ElasticAddress)(nil), "com.netflix.titus.executor.vpc.ElasticAddress")
	proto.RegisterType((*AssignIPResponseV3)(nil), "com.netflix.titus.executor.vpc.AssignIPResponseV3")
	proto.RegisterType((*AssignIPResponseV3_Route)(nil), "com.netflix.titus.executor.vpc.AssignIPResponseV3.Route")
	proto.RegisterType((*AssignIPResponseV3_Bandwidth)(nil), "com.netflix.titus.executor.vpc.AssignIPResponseV3.Bandwidth")
	proto.RegisterType((*Error)(nil), "com.netflix.titus.executor.vpc.Error")
	proto.RegisterType((*Assignment)(nil), "com.netflix.titus.executor.vpc.Assignment")
	proto.RegisterType((*VPCToolResult)(nil), "com.netflix.titus.executor.vpc.VPCToolResult")
	proto.RegisterType((*UnassignIPRequestV3)(nil), "com.netflix.titus.executor.vpc.UnassignIPRequestV3")
	proto.RegisterType((*UnassignIPResponseV3)(nil), "com.netflix.titus.executor.vpc.UnassignIPResponseV3")
	proto.RegisterType((*UsableAddress)(nil), "com.netflix.titus.executor.vpc.UsableAddress")
	proto.RegisterType((*GCRequest)(nil), "com.netflix.titus.executor.vpc.GCRequest")
	proto.RegisterType((*GCResponse)(nil), "com.netflix.titus.executor.vpc.GCResponse")
	proto.RegisterType((*GCRequestV3)(nil), "com.netflix.titus.executor.vpc.GCRequestV3")
	proto.RegisterType((*GCResponseV3)(nil), "com.netflix.titus.executor.vpc.GCResponseV3")
	proto.RegisterType((*RefreshIPRequest)(nil), "com.netflix.titus.executor.vpc.RefreshIPRequest")
	proto.RegisterType((*RefreshIPResponse)(nil), "com.netflix.titus.executor.vpc.RefreshIPResponse")
	proto.RegisterType((*GCSetupRequest)(nil), "com.netflix.titus.executor.vpc.GCSetupRequest")
	proto.RegisterType((*GCSetupResponse)(nil), "com.netflix.titus.executor.vpc.GCSetupResponse")
	proto.RegisterType((*GCLegacySetupRequest)(nil), "com.netflix.titus.executor.vpc.GCLegacySetupRequest")
	proto.RegisterType((*GCLegacySetupResponse)(nil), "com.netflix.titus.executor.vpc.GCLegacySetupResponse")
	proto.RegisterType((*LockId)(nil), "com.netflix.titus.executor.vpc.LockId")
	proto.RegisterType((*Lock)(nil), "com.netflix.titus.executor.vpc.Lock")
	proto.RegisterType((*GetLocksRequest)(nil), "com.netflix.titus.executor.vpc.GetLocksRequest")
	proto.RegisterType((*GetLocksResponse)(nil), "com.netflix.titus.executor.vpc.GetLocksResponse")
	proto.RegisterType((*PreemptLockRequest)(nil), "com.netflix.titus.executor.vpc.PreemptLockRequest")
	proto.RegisterType((*AssociateTrunkNetworkInterfaceRequest)(nil), "com.netflix.titus.executor.vpc.AssociateTrunkNetworkInterfaceRequest")
	proto.RegisterType((*AssociateTrunkNetworkInterfaceResponse)(nil), "com.netflix.titus.executor.vpc.AssociateTrunkNetworkInterfaceResponse")
	proto.RegisterType((*DisassociateTrunkNetworkInterfaceRequest)(nil), "com.netflix.titus.executor.vpc.DisassociateTrunkNetworkInterfaceRequest")
	proto.RegisterType((*DisassociateTrunkNetworkInterfaceResponse)(nil), "com.netflix.titus.executor.vpc.DisassociateTrunkNetworkInterfaceResponse")
	proto.RegisterType((*DescribeTrunkNetworkInterfaceRequest)(nil), "com.netflix.titus.executor.vpc.DescribeTrunkNetworkInterfaceRequest")
	proto.RegisterType((*DescribeTrunkNetworkInterfaceResponse)(nil), "com.netflix.titus.executor.vpc.DescribeTrunkNetworkInterfaceResponse")
	proto.RegisterType((*DescribeTrunkNetworkInterfaceResponse_TrunkENI)(nil), "com.netflix.titus.executor.vpc.DescribeTrunkNetworkInterfaceResponse.TrunkENI")
	proto.RegisterType((*DescribeTrunkNetworkInterfaceResponse_BranchENI)(nil), "com.netflix.titus.executor.vpc.DescribeTrunkNetworkInterfaceResponse.BranchENI")
	proto.RegisterType((*DescribeTrunkNetworkInterfaceResponse_TrunkNetworkInterfaceAssociation)(nil), "com.netflix.titus.executor.vpc.DescribeTrunkNetworkInterfaceResponse.TrunkNetworkInterfaceAssociation")
	proto.RegisterType((*DetachBranchNetworkInterfaceRequest)(nil), "com.netflix.titus.executor.vpc.DetachBranchNetworkInterfaceRequest")
	proto.RegisterType((*DetachBranchNetworkInterfaceResponse)(nil), "com.netflix.titus.executor.vpc.DetachBranchNetworkInterfaceResponse")
	proto.RegisterType((*GetAssignmentRequest)(nil), "com.netflix.titus.executor.vpc.GetAssignmentRequest")
	proto.RegisterType((*GetAssignmentResponse)(nil), "com.netflix.titus.executor.vpc.GetAssignmentResponse")
	proto.RegisterType((*PrivateKey)(nil), "com.netflix.titus.executor.vpc.PrivateKey")
	proto.RegisterType((*PrivateKey_Ed25519Key)(nil), "com.netflix.titus.executor.vpc.PrivateKey.Ed25519Key")
}

func init() {
	proto.RegisterFile("vpc.proto", fileDescriptor_95d23e4d548ba1d7)
}

var fileDescriptor_95d23e4d548ba1d7 = []byte{
	// 2698 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x1a, 0x4d, 0x6f, 0x1b, 0xc7,
	0x55, 0x4b, 0x51, 0x14, 0xf5, 0xa8, 0x0f, 0x6a, 0xa2, 0x18, 0xcc, 0x26, 0x51, 0x94, 0x49, 0xe2,
	0xba, 0x4e, 0x42, 0xdb, 0xa4, 0x6d, 0x38, 0x4a, 0x1a, 0x43, 0x94, 0x14, 0x91, 0x88, 0xab, 0xa8,
	0x2b, 0x99, 0x46, 0x8c, 0x36, 0xc1, 0x6a, 0x77, 0x48, 0x6d, 0x44, 0xee, 0xb2, 0xbb, 0xb3, 0xb4,
	0x69, 0xf4, 0x10, 0x14, 0x6d, 0x11, 0x14, 0x68, 0x2f, 0x6d, 0xef, 0x3d, 0xf5, 0x03, 0x2d, 0x50,
	0x20, 0x87, 0xa2, 0xff, 0x20, 0x97, 0x16, 0x45, 0x4f, 0xbd, 0xf5, 0xd4, 0x1f, 0xd0, 0x5f, 0x50,
	0x14, 0x33, 0x3b, 0x4b, 0xee, 0x2e, 0x97, 0x5a, 0x52, 0xa6, 0xdc, 0x5c, 0xa4, 0x9d, 0x37, 0x33,
	0xef, 0xfb, 0xbd, 0x79, 0x6f, 0x86, 0xb0, 0xd0, 0xed, 0x68, 0xc5, 0x8e, 0x6d, 0x51, 0x0b, 0xad,
	0x6b, 0x56, 0xbb, 0x68, 0x12, 0xda, 0x68, 0x19, 0x8f, 0x8b, 0xd4, 0xa0, 0xae, 0x53, 0x24, 0x8f,
	0x89, 0xe6, 0x52, 0xcb, 0x2e, 0x76, 0x3b, 0x9a, 0xfc, 0x4a, 0xd3, 0xb2, 0x9a, 0x2d, 0x72, 0x8d,
	0xaf, 0x3e, 0x76, 0x1b, 0xd7, 0xa8, 0xd1, 0x26, 0x0e, 0x55, 0xdb, 0x1d, 0x0f, 0x81, 0xbc, 0x1e,
	0x5d, 0xa0, 0xbb, 0xb6, 0x4a, 0x0d, 0xcb, 0x14, 0xf3, 0x2f, 0x46, 0xe7, 0x49, 0xbb, 0x43, 0x7b,
	0xfe, 0x66, 0x41, 0xf9, 0x1a, 0xa7, 0xec, 0xfd, 0xfd, 0xf4, 0x58, 0x75, 0x88, 0x37, 0x8f, 0x5f,
	0x83, 0xf9, 0x2d, 0x5d, 0xb7, 0x89, 0xe3, 0xa0, 0x02, 0xcc, 0xab, 0xde, 0x67, 0x41, 0xda, 0x90,
	0xae, 0x2c, 0x28, 0xfe, 0x10, 0x63, 0x58, 0xdc, 0x56, 0xb5, 0x13, 0x52, 0x27, 0xb6, 0x63, 0x58,
	0x26, 0x42, 0x90, 0x76, 0x5d, 0x43, 0xe7, 0xcb, 0x16, 0x15, 0xfe, 0x8d, 0xf7, 0x41, 0xde, 0x27,
	0xf4, 0x91, 0x65, 0x9f, 0xd6, 0x4c, 0x4a, 0xec, 0x86, 0xaa, 0x91, 0x2d, 0x4a, 0x55, 0xed, 0xa4,
	0x4d, 0x4c, 0x8a, 0x36, 0x20, 0xa7, 0x93, 0xae, 0xa1, 0x91, 0x9a, 0xa9, 0x93, 0xc7, 0x7c, 0xe3,
	0x92, 0x12, 0x04, 0xa1, 0x65, 0x48, 0x19, 0x7a, 0x21, 0xc5, 0x09, 0xa7, 0x0c, 0x1d, 0xff, 0x3b,
	0x05, 0xf9, 0x28, 0x42, 0x24, 0x43, 0xd6, 0x71, 0x8f, 0x4d, 0x42, 0x6b, 0xba, 0xe0, 0xb1, 0x3f,
	0x46, 0x57, 0x21, 0xaf, 0x76, 0x55, 0xa3, 0xa5, 0x1e, 0x1b, 0x2d, 0x83, 0xf6, 0x1e, 0x5a, 0x26,
	0x11, 0xe8, 0x86, 0xe0, 0x68, 0x1d, 0xa0, 0xad, 0x6a, 0x42, 0xf0, 0xc2, 0x2c, 0x5f, 0x15, 0x80,
	0xa0, 0x22, 0x20, 0x33, 0x42, 0xbb, 0xa6, 0x17, 0xd2, 0x7c, 0x5d, 0xcc, 0x0c, 0xba, 0x0c, 0xcb,
	0xd6, 0x23, 0x93, 0xd8, 0x5b, 0x9a, 0x66, 0xb9, 0x26, 0xe3, 0x6e, 0x8e, 0xaf, 0x8d, 0x40, 0xd1,
	0x13, 0x90, 0xcd, 0x91, 0x4a, 0x2a, 0xcc, 0x6f, 0x48, 0x57, 0x72, 0xa5, 0xcd, 0xe2, 0xd9, 0x0e,
	0x53, 0x1c, 0xad, 0x66, 0xe5, 0x0c, 0xec, 0x68, 0x0d, 0xe6, 0xba, 0x1d, 0xad, 0xa6, 0x17, 0xb2,
	0x9c, 0x35, 0x6f, 0x80, 0x7f, 0x92, 0x82, 0x7c, 0xcd, 0x74, 0xa8, 0x6a, 0x32, 0x41, 0x88, 0x49,
	0x0d, 0xda, 0x43, 0x9b, 0x50, 0x30, 0x22, 0xb0, 0x1d, 0x4b, 0x73, 0x39, 0x93, 0x9e, 0xda, 0x47,
	0xce, 0xa3, 0xf7, 0xe0, 0x85, 0xe8, 0xdc, 0xa1, 0xd1, 0x34, 0x55, 0xea, 0xda, 0xbe, 0x3d, 0x46,
	0x2f, 0x60, 0x86, 0xe9, 0x4f, 0xee, 0xf8, 0x86, 0x19, 0x40, 0xd0, 0x25, 0xc8, 0xd8, 0xa4, 0x69,
	0x58, 0xa6, 0x30, 0x86, 0x18, 0xa1, 0x97, 0x60, 0x41, 0x15, 0x5a, 0xde, 0x11, 0xba, 0x1f, 0x00,
	0x10, 0x86, 0x45, 0x1f, 0xc7, 0x51, 0xaf, 0x43, 0x0a, 0x19, 0xbe, 0x20, 0x04, 0xc3, 0x5f, 0x4a,
	0x50, 0x38, 0xb0, 0xad, 0xae, 0xc1, 0x3c, 0xdc, 0xd7, 0x88, 0x42, 0xbe, 0xef, 0x12, 0x87, 0xa2,
	0xef, 0x42, 0x3e, 0xca, 0x33, 0x57, 0x44, 0xae, 0x74, 0x3d, 0xc9, 0x5a, 0x51, 0xe5, 0x2a, 0x43,
	0x98, 0xc2, 0xcc, 0xa7, 0xa2, 0xcc, 0x0f, 0x7c, 0xde, 0x57, 0x48, 0x7f, 0x8c, 0xff, 0x26, 0xc1,
	0x0b, 0x31, 0x4c, 0x3b, 0x1d, 0xcb, 0x74, 0x08, 0xfa, 0x04, 0x56, 0xa3, 0xfe, 0xc0, 0x42, 0x7b,
	0x76, 0x1c, 0xb6, 0xa3, 0x4e, 0xa6, 0x0c, 0xa3, 0x42, 0x07, 0xb0, 0xa8, 0x05, 0xd2, 0x02, 0x67,
	0x3d, 0x57, 0x7a, 0x2b, 0x09, 0x75, 0x30, 0x95, 0x28, 0x21, 0x0c, 0xf8, 0x09, 0xc8, 0xa3, 0x6c,
	0x50, 0x2f, 0x5f, 0xac, 0x15, 0xf0, 0x8f, 0x25, 0x78, 0x71, 0xa4, 0x2e, 0xeb, 0x65, 0xd4, 0x80,
	0xe7, 0xa9, 0xed, 0x9a, 0xa7, 0x51, 0xcd, 0x8c, 0xcb, 0xc2, 0x90, 0x46, 0xe3, 0xd1, 0xe1, 0x5f,
	0x4a, 0xb0, 0x72, 0x9f, 0x1a, 0x2d, 0xe3, 0x09, 0xd1, 0xfd, 0x7c, 0xb4, 0x15, 0x4e, 0xcd, 0xb9,
	0xd2, 0x37, 0x92, 0xa8, 0x89, 0x9d, 0xfd, 0x1c, 0x8e, 0xde, 0x87, 0xc5, 0x96, 0xea, 0xd0, 0xfb,
	0x0e, 0xd1, 0x8f, 0x8c, 0x36, 0x11, 0xc6, 0x92, 0x8b, 0xde, 0xe1, 0x51, 0xf4, 0x0f, 0x8f, 0xe2,
	0x91, 0x7f, 0xfa, 0x28, 0xa1, 0xf5, 0xf8, 0xd7, 0x73, 0xb0, 0xb2, 0xe5, 0x38, 0x46, 0xd3, 0xac,
	0x1d, 0xf8, 0x61, 0x11, 0x75, 0x00, 0xe9, 0x69, 0x1d, 0x20, 0x21, 0x41, 0xce, 0x5e, 0x68, 0x82,
	0xbc, 0x0a, 0x79, 0x87, 0x68, 0xae, 0x6d, 0xd0, 0xde, 0x9e, 0x6d, 0xb9, 0x9d, 0x9a, 0xee, 0x14,
	0xd2, 0x1b, 0xb3, 0xec, 0x00, 0x89, 0xc2, 0x51, 0x09, 0xd6, 0x8c, 0x4e, 0xf7, 0xb6, 0xaf, 0x65,
	0x4f, 0x1f, 0xc4, 0x4b, 0xfb, 0x59, 0x25, 0x76, 0x0e, 0x7d, 0x0f, 0x56, 0xdd, 0xb0, 0x5d, 0x89,
	0x53, 0xc8, 0xf0, 0x70, 0xbc, 0x96, 0x24, 0x52, 0xc4, 0x21, 0x94, 0x61, 0x4c, 0xb1, 0xd1, 0x31,
	0x3f, 0xb5, 0x1c, 0xb5, 0x09, 0x05, 0xb5, 0xd5, 0xb2, 0x1e, 0x1d, 0x06, 0x35, 0xb1, 0x7d, 0xa2,
	0x9a, 0x4d, 0xc2, 0x0f, 0x94, 0xac, 0x32, 0x72, 0x1e, 0x35, 0xa0, 0xc0, 0xfc, 0xa6, 0xcf, 0xec,
	0x56, 0xab, 0x65, 0x69, 0xbc, 0x82, 0x71, 0x0a, 0x0b, 0x5c, 0xfe, 0xab, 0x31, 0x1c, 0x1e, 0xc6,
	0x6f, 0x51, 0x46, 0xe2, 0xc2, 0x5f, 0xa5, 0x20, 0x3f, 0x70, 0x51, 0x91, 0x04, 0xa7, 0xef, 0xa3,
	0x0f, 0x60, 0xc5, 0x75, 0xd4, 0xe3, 0x16, 0x19, 0x58, 0x31, 0xc5, 0xa5, 0x78, 0x3b, 0xd1, 0x8a,
	0xc1, 0x6d, 0x4a, 0x14, 0x0b, 0xb3, 0x60, 0xd4, 0x3d, 0x85, 0xcb, 0x4f, 0x9e, 0x5c, 0x86, 0x30,
	0x4d, 0xe2, 0xde, 0xf8, 0x2e, 0xac, 0x12, 0x16, 0xfd, 0x86, 0x5f, 0x11, 0x1d, 0x12, 0x1e, 0x1f,
	0x61, 0xa0, 0x38, 0x4d, 0x16, 0x94, 0x21, 0x38, 0xfe, 0x22, 0x03, 0xab, 0x91, 0x6c, 0x51, 0x2f,
	0xb3, 0xd3, 0x9b, 0xaa, 0xce, 0x69, 0xbf, 0x78, 0x13, 0xa3, 0x58, 0xd6, 0x52, 0x23, 0x22, 0xef,
	0xe6, 0x88, 0xc8, 0x63, 0x8a, 0xca, 0x56, 0x67, 0x46, 0xc4, 0x9e, 0xb7, 0xeb, 0xe6, 0xd0, 0xae,
	0x34, 0xdf, 0x25, 0x29, 0xb1, 0xb3, 0xc8, 0x84, 0x17, 0x19, 0x7c, 0x84, 0x27, 0xf2, 0x60, 0x9f,
	0xc8, 0x77, 0xab, 0x92, 0x72, 0x16, 0x42, 0x56, 0x81, 0x7b, 0x47, 0xbb, 0x53, 0x98, 0xe7, 0xe2,
	0xfb, 0xc3, 0xd8, 0xe0, 0xce, 0x5e, 0x4c, 0x01, 0xb2, 0x10, 0x2d, 0x40, 0x8a, 0x30, 0xc7, 0x3b,
	0x8a, 0x02, 0x70, 0x82, 0x97, 0x86, 0x8e, 0x8c, 0x5d, 0x36, 0x5b, 0x4d, 0x29, 0xde, 0x32, 0xa4,
	0x06, 0x9d, 0xc7, 0x77, 0x94, 0x1c, 0xdf, 0x7b, 0x23, 0x89, 0xd9, 0x21, 0xaf, 0xab, 0xa6, 0x94,
	0x61, 0x6c, 0x68, 0x1d, 0x16, 0x9a, 0xcc, 0x21, 0xf6, 0xd5, 0x36, 0x29, 0x2c, 0x32, 0x86, 0xab,
	0x29, 0x65, 0x00, 0xe2, 0x65, 0xa4, 0x4e, 0xda, 0x1d, 0x8b, 0xb2, 0x63, 0x63, 0x89, 0xe7, 0xa7,
	0x00, 0x84, 0xd5, 0xc2, 0x9f, 0xb9, 0xed, 0x63, 0xab, 0xb0, 0xcc, 0xa7, 0xbc, 0x01, 0x83, 0x1e,
	0xbb, 0xb6, 0x43, 0x0b, 0x2b, 0x1e, 0x94, 0x0f, 0x98, 0x72, 0x8e, 0x55, 0x53, 0x7f, 0x64, 0xe8,
	0xf4, 0xa4, 0x90, 0xdf, 0x90, 0xae, 0xa4, 0x95, 0x01, 0xa0, 0x92, 0x81, 0x34, 0x73, 0x38, 0xf1,
	0xff, 0x66, 0x25, 0x0f, 0xcb, 0x61, 0x19, 0x70, 0x0b, 0x96, 0x77, 0x43, 0x10, 0xde, 0xea, 0x74,
	0x44, 0x08, 0xa4, 0x8c, 0x0e, 0x2b, 0x4f, 0xd5, 0xbe, 0x13, 0xd4, 0xfc, 0x26, 0x28, 0x04, 0x63,
	0x1d, 0x86, 0xea, 0x38, 0x96, 0x66, 0x70, 0x80, 0x5e, 0xd3, 0x45, 0x2d, 0x18, 0x81, 0xe2, 0x3f,
	0xcf, 0x03, 0x8a, 0xe6, 0xc0, 0x7a, 0x19, 0x7d, 0x04, 0x39, 0xc6, 0x5e, 0xb8, 0x88, 0x98, 0x30,
	0x5f, 0x05, 0x31, 0x08, 0x84, 0xb7, 0x7d, 0x84, 0xa9, 0xf3, 0x22, 0xf4, 0x31, 0xa0, 0x13, 0xb8,
	0x74, 0x6c, 0xab, 0xa6, 0x76, 0xb2, 0x3f, 0xad, 0x14, 0x38, 0x02, 0xdf, 0xe8, 0x42, 0x2e, 0x3d,
	0xd5, 0x42, 0x8e, 0x65, 0xbb, 0x6e, 0x4b, 0x35, 0x45, 0x33, 0xb8, 0xa4, 0x88, 0x11, 0xaa, 0x47,
	0x5d, 0x84, 0xf7, 0x23, 0xb9, 0x52, 0x31, 0x89, 0x70, 0xd8, 0x8d, 0x94, 0x08, 0x16, 0x96, 0x3d,
	0xb4, 0x96, 0xea, 0x38, 0x35, 0x9d, 0x9f, 0xfb, 0x4b, 0x8a, 0x3f, 0x44, 0x07, 0x90, 0xb1, 0x2d,
	0x97, 0x12, 0xff, 0xb8, 0xbd, 0x93, 0x58, 0x3d, 0x0e, 0x79, 0x50, 0x51, 0x61, 0x08, 0x14, 0x81,
	0x07, 0x3d, 0x0c, 0x06, 0x85, 0x97, 0x17, 0xde, 0x3b, 0x07, 0xd2, 0x8a, 0x8f, 0x23, 0x10, 0x52,
	0xf2, 0x97, 0x12, 0xcc, 0x71, 0x6a, 0xde, 0xad, 0x81, 0x43, 0x0d, 0xd3, 0xcb, 0xb7, 0x5e, 0xc4,
	0x04, 0x41, 0x28, 0x0f, 0xb3, 0x6d, 0xea, 0x72, 0xf7, 0x5b, 0x52, 0xd8, 0x27, 0x7a, 0x00, 0x99,
	0x86, 0xda, 0x36, 0x5a, 0x3d, 0xee, 0x37, 0xcb, 0xa5, 0xbb, 0xe7, 0x95, 0xb5, 0xf8, 0x01, 0x47,
	0xa3, 0x08, 0x74, 0xf8, 0x25, 0xc8, 0x78, 0x10, 0x94, 0x85, 0x74, 0xed, 0xa0, 0x7b, 0x33, 0x3f,
	0x23, 0xbe, 0x6e, 0xe7, 0x25, 0xf9, 0x2e, 0x2c, 0xf4, 0x85, 0x09, 0xa7, 0x0c, 0x29, 0x92, 0x32,
	0x06, 0x69, 0x26, 0xc5, 0x67, 0xbc, 0x01, 0x7e, 0x19, 0xe6, 0x76, 0x6d, 0xdb, 0xb2, 0xd9, 0x34,
	0x61, 0x1f, 0x42, 0x5c, 0x6f, 0x80, 0x3f, 0x97, 0x00, 0x3c, 0x4e, 0x79, 0xad, 0xaa, 0x03, 0x52,
	0x87, 0xf8, 0x16, 0x61, 0x5d, 0x9a, 0x5c, 0xe2, 0xea, 0x8c, 0x12, 0x83, 0xaf, 0xb2, 0x08, 0xa0,
	0xf6, 0x69, 0xe2, 0xdf, 0x48, 0xb0, 0x54, 0x3f, 0xd8, 0x3e, 0xb2, 0xac, 0x96, 0x42, 0x1c, 0xb7,
	0x45, 0xd1, 0xbd, 0xe0, 0xbc, 0xa0, 0x7e, 0x75, 0x3c, 0xea, 0x6c, 0x47, 0x75, 0x46, 0x09, 0xec,
	0x47, 0xdf, 0xf2, 0x05, 0xf7, 0x92, 0xc9, 0x1b, 0x89, 0xe1, 0xc0, 0x16, 0x57, 0x67, 0x84, 0x86,
	0x2a, 0x59, 0xc8, 0xd8, 0x9c, 0x2d, 0xfc, 0x36, 0x3c, 0x77, 0xdf, 0x54, 0xc7, 0xad, 0x3e, 0xf0,
	0x25, 0x58, 0x0b, 0x2e, 0xf7, 0xa5, 0xc7, 0x5d, 0x58, 0x0a, 0xe5, 0xab, 0x69, 0x74, 0x61, 0x18,
	0x16, 0x3b, 0x36, 0x69, 0x18, 0x8f, 0xef, 0x11, 0xb3, 0x49, 0x4f, 0x84, 0xe3, 0x86, 0x60, 0xf8,
	0x5f, 0x69, 0x58, 0xd8, 0xdb, 0xbe, 0xb8, 0x1e, 0x2b, 0xae, 0x96, 0x48, 0x4d, 0xad, 0x96, 0xf8,
	0x7f, 0x76, 0x70, 0x1a, 0xac, 0xb9, 0xa6, 0x38, 0x36, 0x83, 0x4d, 0x56, 0xfa, 0x7c, 0x4d, 0x56,
	0x2c, 0x32, 0xf4, 0x29, 0x20, 0xd3, 0x32, 0xbb, 0x46, 0xb8, 0x03, 0x98, 0x3b, 0x1f, 0x89, 0x18,
	0x54, 0x8c, 0x40, 0x8c, 0x0c, 0xe7, 0x6c, 0x14, 0x63, 0x50, 0xe1, 0xcf, 0x53, 0x00, 0xcc, 0xc1,
	0x2e, 0xac, 0x43, 0xfa, 0x36, 0x2c, 0x09, 0x87, 0x3f, 0xb2, 0x2a, 0x6e, 0xbb, 0x23, 0xfa, 0xa3,
	0xb1, 0xc3, 0x25, 0xbc, 0x1b, 0x7d, 0x07, 0x56, 0xfa, 0x80, 0x1d, 0xd2, 0x22, 0x94, 0xd5, 0x04,
	0x13, 0x21, 0x8c, 0xee, 0xc7, 0xbf, 0x95, 0x20, 0xd7, 0x8f, 0xb1, 0x8b, 0xbe, 0x5a, 0x62, 0xc5,
	0x9b, 0xed, 0x9a, 0xa6, 0x61, 0x36, 0x8f, 0x58, 0xca, 0xd9, 0xf1, 0xbb, 0x9b, 0x08, 0x14, 0x21,
	0x48, 0x3b, 0x56, 0xc3, 0x8b, 0x92, 0xac, 0xc2, 0xbf, 0xf1, 0xfb, 0xb0, 0x38, 0xb0, 0x55, 0xbd,
	0x8c, 0x8a, 0x80, 0x6c, 0xd2, 0xb6, 0xba, 0x44, 0x1f, 0x24, 0x52, 0xbf, 0x0f, 0x8b, 0x99, 0xc1,
	0xff, 0x94, 0x20, 0xaf, 0x90, 0x86, 0x4d, 0x9c, 0x93, 0xc1, 0xc5, 0xcd, 0xc7, 0xb0, 0x12, 0xb9,
	0x40, 0x10, 0xf7, 0x82, 0x13, 0xfb, 0x57, 0x14, 0xcf, 0x19, 0x75, 0x5c, 0x6a, 0xba, 0x75, 0x1c,
	0x3e, 0x80, 0xd5, 0x80, 0x60, 0xc2, 0x99, 0xdf, 0x85, 0x9c, 0x49, 0x1e, 0x53, 0x31, 0x21, 0x6c,
	0xf8, 0xc2, 0x50, 0xcb, 0xb2, 0x23, 0x9e, 0x50, 0x94, 0xe0, 0x6a, 0x6c, 0xc2, 0xf2, 0xde, 0xf6,
	0x21, 0xa1, 0x6e, 0xe7, 0x99, 0x5c, 0xfc, 0xe2, 0x9f, 0x49, 0xb0, 0xd2, 0x27, 0x28, 0x04, 0x38,
	0x3b, 0x7f, 0x7a, 0x56, 0xba, 0xa0, 0xfc, 0x89, 0x29, 0xac, 0xed, 0x6d, 0xdf, 0x23, 0x4d, 0x55,
	0xeb, 0x3d, 0x43, 0x2d, 0xfc, 0x42, 0x82, 0xe7, 0x23, 0x64, 0xbf, 0x06, 0xba, 0x28, 0x40, 0xe6,
	0x9e, 0xa5, 0x9d, 0xd6, 0x74, 0xf1, 0x32, 0xc5, 0xe4, 0x9d, 0xe5, 0x2f, 0x53, 0x3f, 0x92, 0x20,
	0xcd, 0xa6, 0xa2, 0x13, 0x48, 0x86, 0x6c, 0xcb, 0xd2, 0x4e, 0x79, 0x53, 0xea, 0xf5, 0x70, 0xfd,
	0x31, 0x2b, 0x3e, 0x4e, 0x48, 0x4b, 0xaf, 0xf4, 0x44, 0xdf, 0x26, 0x46, 0xe8, 0x0e, 0x2c, 0xb0,
	0xaf, 0xfb, 0x26, 0x35, 0x5a, 0xa2, 0x01, 0x39, 0xeb, 0x4e, 0x76, 0xb0, 0x18, 0xaf, 0xc2, 0xca,
	0x1e, 0xa1, 0x8c, 0x11, 0xff, 0xc6, 0x02, 0xef, 0x43, 0x7e, 0x00, 0x12, 0x3a, 0xdc, 0x84, 0x39,
	0xc6, 0x84, 0x1f, 0xe0, 0xaf, 0x27, 0xa9, 0x8b, 0xed, 0x56, 0xbc, 0x2d, 0xf8, 0x3a, 0xa0, 0x03,
	0x9b, 0xb0, 0xae, 0x9e, 0x43, 0x85, 0x37, 0x04, 0xc5, 0x94, 0xc2, 0x62, 0xe2, 0xff, 0x4a, 0xf0,
	0xc6, 0x96, 0xe8, 0x48, 0xc9, 0x51, 0x5c, 0x5b, 0xe4, 0x63, 0xf9, 0x64, 0x7a, 0x3e, 0x55, 0x9d,
	0x89, 0xbd, 0xd3, 0xc8, 0xf2, 0xb6, 0x6c, 0x77, 0xbf, 0xe6, 0x19, 0xa3, 0x3a, 0xa3, 0xf4, 0x21,
	0xbc, 0x42, 0xe7, 0x59, 0x85, 0x4d, 0x7b, 0x16, 0x19, 0x00, 0x02, 0x9d, 0x5b, 0x9a, 0x97, 0xe8,
	0x62, 0x54, 0x79, 0x15, 0x5e, 0x89, 0x6d, 0xf5, 0x3c, 0xa2, 0x0d, 0x83, 0xd8, 0x78, 0x1f, 0x2e,
	0x27, 0xc9, 0x2f, 0x0c, 0xf3, 0x3a, 0x2c, 0x05, 0x7a, 0xf7, 0x7e, 0x55, 0x1a, 0x06, 0x62, 0x0b,
	0xae, 0xec, 0x18, 0x8e, 0x3a, 0x96, 0x4a, 0x2f, 0xc7, 0x62, 0xac, 0xce, 0x44, 0x70, 0xb2, 0x0e,
	0xa3, 0x61, 0xd9, 0x22, 0x23, 0x67, 0x15, 0x6f, 0x50, 0x99, 0x83, 0xd9, 0x53, 0xd2, 0xc3, 0x6f,
	0xc2, 0x37, 0xc7, 0x20, 0xe8, 0xc9, 0x80, 0xbf, 0x92, 0xe0, 0xf5, 0x1d, 0xe2, 0x68, 0xb6, 0x71,
	0xfc, 0x35, 0xb6, 0xf6, 0x38, 0x76, 0xfb, 0x55, 0x16, 0xde, 0x48, 0x90, 0x44, 0xd8, 0xed, 0xb3,
	0x00, 0x29, 0x4f, 0x84, 0xfd, 0x24, 0x11, 0xc6, 0x42, 0x5c, 0x3c, 0x12, 0x58, 0x03, 0x6e, 0xfa,
	0x53, 0x09, 0x16, 0x03, 0xb6, 0xf3, 0x2f, 0x9a, 0x1b, 0x53, 0x24, 0x38, 0x94, 0x1e, 0x07, 0xe4,
	0x94, 0x10, 0x6d, 0xf9, 0xaf, 0x12, 0x64, 0x7d, 0x1e, 0x03, 0xb9, 0x8f, 0x3f, 0xd7, 0x07, 0xaf,
	0x10, 0xf5, 0xe8, 0x1b, 0x26, 0x4f, 0xa1, 0xea, 0x13, 0x11, 0x67, 0x29, 0xf5, 0x09, 0xcb, 0x7a,
	0x9a, 0x4d, 0x78, 0x55, 0x4a, 0xc7, 0xc9, 0x7a, 0xfd, 0xc5, 0xa1, 0x5f, 0x00, 0xcc, 0x45, 0x7e,
	0x01, 0xd0, 0x7f, 0xe1, 0xce, 0x04, 0x5e, 0xb8, 0x03, 0x4f, 0xc6, 0xf3, 0xc1, 0x27, 0x63, 0xf9,
	0x1f, 0x29, 0x58, 0xa8, 0xf4, 0x43, 0x3e, 0x2a, 0x4f, 0x88, 0xc3, 0xd4, 0x24, 0x1c, 0x86, 0x34,
	0x31, 0x1b, 0xd5, 0x44, 0x90, 0xff, 0xf4, 0x28, 0xfe, 0xe7, 0x82, 0xfc, 0xc7, 0x5d, 0x8e, 0x67,
	0x46, 0x5c, 0x8e, 0x6f, 0x02, 0xb4, 0x2d, 0x9d, 0x79, 0x34, 0x63, 0x7b, 0x3e, 0x91, 0xed, 0xc0,
	0x6a, 0x54, 0x81, 0xe5, 0x96, 0xea, 0x50, 0xaf, 0x76, 0x24, 0xfa, 0x91, 0x25, 0x2e, 0x98, 0xcf,
	0xda, 0x1f, 0xd9, 0x21, 0xff, 0x5d, 0x82, 0x8d, 0x24, 0xaf, 0x0a, 0x64, 0x57, 0x29, 0x98, 0x5d,
	0x87, 0x13, 0x62, 0x2a, 0x26, 0x21, 0xa2, 0x76, 0x34, 0x73, 0xe7, 0x4a, 0x1f, 0x4d, 0x27, 0x1c,
	0xfa, 0xce, 0x10, 0x38, 0x0a, 0xf0, 0xef, 0x24, 0x78, 0x6d, 0x87, 0xb0, 0xaa, 0xa0, 0x12, 0x5b,
	0x85, 0x3e, 0xa3, 0x04, 0x37, 0x4e, 0x0a, 0xfb, 0x21, 0x4f, 0xc6, 0x67, 0xb1, 0x2a, 0x32, 0xd8,
	0x28, 0x03, 0x84, 0x0e, 0xc5, 0x54, 0xf4, 0x50, 0x8c, 0x98, 0xc7, 0xff, 0x31, 0x42, 0x18, 0x88,
	0x8b, 0xb0, 0xb6, 0x47, 0xe8, 0xa0, 0x01, 0xf1, 0xf5, 0x33, 0xea, 0xf2, 0xe5, 0x14, 0x9e, 0x8f,
	0xac, 0x17, 0x4c, 0x2a, 0x31, 0x77, 0x4b, 0xe7, 0xb8, 0xd9, 0x0a, 0xde, 0x30, 0xe1, 0xff, 0x48,
	0x00, 0x07, 0xb6, 0xd1, 0x55, 0x29, 0xf9, 0x90, 0xf4, 0x58, 0x2c, 0x9e, 0x58, 0x0e, 0x35, 0x03,
	0x85, 0x8c, 0x3f, 0x66, 0xf1, 0xdf, 0x24, 0x26, 0xb1, 0x59, 0x50, 0x8f, 0x13, 0xff, 0xfd, 0xc5,
	0xe8, 0x01, 0x00, 0xd1, 0x4b, 0xb7, 0x6e, 0xdd, 0x78, 0xe7, 0x43, 0xd2, 0x13, 0x1e, 0x7a, 0x2b,
	0x89, 0xf1, 0x01, 0x57, 0xc5, 0xdd, 0xfe, 0xe6, 0xea, 0x8c, 0x12, 0x40, 0x25, 0xbf, 0x05, 0x30,
	0x98, 0x43, 0xeb, 0x00, 0x76, 0x43, 0xbb, 0x73, 0xbd, 0x5c, 0x3a, 0x25, 0x3d, 0xf1, 0x4b, 0xac,
	0x00, 0x44, 0x1c, 0xe7, 0xa5, 0x3f, 0xac, 0xc0, 0xda, 0x11, 0xa3, 0xb7, 0xd5, 0x24, 0x26, 0xad,
	0x1f, 0x6c, 0x1f, 0x12, 0xbb, 0x6b, 0x68, 0x04, 0x7d, 0x21, 0xc1, 0xea, 0xd0, 0xcf, 0x1d, 0xd0,
	0x9d, 0x64, 0x46, 0xe3, 0x7f, 0x9e, 0x21, 0xbf, 0x73, 0x8e, 0x9d, 0xc2, 0xd4, 0x3f, 0x97, 0xe0,
	0xb9, 0xa1, 0xd9, 0x7a, 0x19, 0x6d, 0x9e, 0x97, 0x99, 0x7a, 0x59, 0x7e, 0xf7, 0xdc, 0xec, 0xd4,
	0xcb, 0xa8, 0x0d, 0x59, 0xdf, 0x93, 0xd0, 0xb5, 0xf1, 0x7d, 0xce, 0x53, 0xc4, 0xf5, 0x49, 0x9d,
	0x14, 0x39, 0xfe, 0xd5, 0x6e, 0xed, 0xa0, 0x5e, 0x46, 0x37, 0x26, 0x24, 0x58, 0x2f, 0xcb, 0xe7,
	0x88, 0x0b, 0xd4, 0x83, 0xc5, 0xc1, 0xad, 0x67, 0xbd, 0x8c, 0xca, 0x89, 0x9d, 0xff, 0xf0, 0x95,
	0xaa, 0x7c, 0x73, 0x92, 0x4d, 0x7d, 0xd2, 0x3f, 0x80, 0xa5, 0x50, 0xcc, 0xa3, 0x44, 0x34, 0x71,
	0x29, 0x45, 0xbe, 0x35, 0xe1, 0x2e, 0xa1, 0x6d, 0x15, 0xd2, 0x7b, 0xdb, 0xf5, 0x32, 0x7a, 0x33,
	0x71, 0xfb, 0xe0, 0x7e, 0x48, 0x7e, 0x6b, 0x9c, 0xc5, 0x41, 0xff, 0xf1, 0xfb, 0xb0, 0x64, 0xff,
	0x89, 0x34, 0x71, 0xc9, 0xfe, 0x33, 0xd4, 0xe2, 0x3d, 0x80, 0x79, 0x01, 0x43, 0x97, 0xc7, 0x69,
	0xef, 0x6a, 0xba, 0x3c, 0x56, 0x1b, 0x88, 0xee, 0x01, 0x78, 0xf7, 0x65, 0x13, 0xe1, 0x1e, 0xf1,
	0x40, 0x8c, 0x3e, 0x86, 0x5c, 0xa0, 0x9b, 0x44, 0xa5, 0xe4, 0x08, 0x8d, 0xb6, 0x9e, 0x23, 0x51,
	0xff, 0x49, 0x82, 0xf5, 0xb3, 0xdb, 0x2e, 0xb4, 0x3b, 0x46, 0x8c, 0x24, 0xf7, 0x58, 0xf2, 0x07,
	0x4f, 0x8b, 0x46, 0xd8, 0xec, 0x2f, 0x12, 0xbc, 0x9a, 0xd8, 0x67, 0xa1, 0x6a, 0x62, 0x65, 0x33,
	0x66, 0x6f, 0x28, 0xd7, 0xa6, 0x80, 0x49, 0xb0, 0xfe, 0x47, 0x09, 0x5e, 0x3e, 0xb3, 0xa2, 0x42,
	0x3b, 0x4f, 0x59, 0x90, 0x79, 0x2c, 0xef, 0x4e, 0xa5, 0xac, 0x43, 0xbf, 0x97, 0xe0, 0xa5, 0xb3,
	0xca, 0x22, 0xb4, 0x9d, 0x4c, 0x27, 0xb1, 0xfe, 0x93, 0x77, 0x9e, 0x0e, 0x89, 0xc7, 0x6b, 0x25,
	0xfb, 0x30, 0xd3, 0xed, 0x68, 0x6a, 0xc7, 0x38, 0xce, 0x70, 0x0f, 0x2f, 0xff, 0x2f, 0x00, 0x00,
	0xff, 0xff, 0xcc, 0x8a, 0x40, 0x78, 0x49, 0x2e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TitusAgentVPCServiceClient is the client API for TitusAgentVPCService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TitusAgentVPCServiceClient interface {
	// This ProvisionInstance function has to be called at startup of the instance, and it is idempotent.
	ProvisionInstance(ctx context.Context, in *ProvisionInstanceRequest, opts ...grpc.CallOption) (*ProvisionInstanceResponse, error)
	ProvisionInstanceV3(ctx context.Context, in *ProvisionInstanceRequestV3, opts ...grpc.CallOption) (*ProvisionInstanceResponseV3, error)
	AssignIP(ctx context.Context, in *AssignIPRequest, opts ...grpc.CallOption) (*AssignIPResponse, error)
	AssignIPV3(ctx context.Context, in *AssignIPRequestV3, opts ...grpc.CallOption) (*AssignIPResponseV3, error)
	UnassignIPV3(ctx context.Context, in *UnassignIPRequestV3, opts ...grpc.CallOption) (*UnassignIPResponseV3, error)
	GetAssignment(ctx context.Context, in *GetAssignmentRequest, opts ...grpc.CallOption) (*GetAssignmentResponse, error)
	GCV3(ctx context.Context, in *GCRequestV3, opts ...grpc.CallOption) (*GCResponseV3, error)
	// Lock Management
	GetLocks(ctx context.Context, in *GetLocksRequest, opts ...grpc.CallOption) (*GetLocksResponse, error)
	GetLock(ctx context.Context, in *LockId, opts ...grpc.CallOption) (*Lock, error)
	DeleteLock(ctx context.Context, in *LockId, opts ...grpc.CallOption) (*emptypb.Empty, error)
	PreemptLock(ctx context.Context, in *PreemptLockRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// These are internal APIs that should really only be used by operators
	AssociateTrunkNetworkInterface(ctx context.Context, in *AssociateTrunkNetworkInterfaceRequest, opts ...grpc.CallOption) (*AssociateTrunkNetworkInterfaceResponse, error)
	DisassociateTrunkNetworkInterface(ctx context.Context, in *DisassociateTrunkNetworkInterfaceRequest, opts ...grpc.CallOption) (*DisassociateTrunkNetworkInterfaceResponse, error)
	DescribeTrunkNetworkInterface(ctx context.Context, in *DescribeTrunkNetworkInterfaceRequest, opts ...grpc.CallOption) (*DescribeTrunkNetworkInterfaceResponse, error)
	DetachBranchNetworkInterface(ctx context.Context, in *DetachBranchNetworkInterfaceRequest, opts ...grpc.CallOption) (*DetachBranchNetworkInterfaceResponse, error)
}

type titusAgentVPCServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTitusAgentVPCServiceClient(cc grpc.ClientConnInterface) TitusAgentVPCServiceClient {
	return &titusAgentVPCServiceClient{cc}
}

func (c *titusAgentVPCServiceClient) ProvisionInstance(ctx context.Context, in *ProvisionInstanceRequest, opts ...grpc.CallOption) (*ProvisionInstanceResponse, error) {
	out := new(ProvisionInstanceResponse)
	err := c.cc.Invoke(ctx, "/com.netflix.titus.executor.vpc.TitusAgentVPCService/ProvisionInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *titusAgentVPCServiceClient) ProvisionInstanceV3(ctx context.Context, in *ProvisionInstanceRequestV3, opts ...grpc.CallOption) (*ProvisionInstanceResponseV3, error) {
	out := new(ProvisionInstanceResponseV3)
	err := c.cc.Invoke(ctx, "/com.netflix.titus.executor.vpc.TitusAgentVPCService/ProvisionInstanceV3", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *titusAgentVPCServiceClient) AssignIP(ctx context.Context, in *AssignIPRequest, opts ...grpc.CallOption) (*AssignIPResponse, error) {
	out := new(AssignIPResponse)
	err := c.cc.Invoke(ctx, "/com.netflix.titus.executor.vpc.TitusAgentVPCService/AssignIP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *titusAgentVPCServiceClient) AssignIPV3(ctx context.Context, in *AssignIPRequestV3, opts ...grpc.CallOption) (*AssignIPResponseV3, error) {
	out := new(AssignIPResponseV3)
	err := c.cc.Invoke(ctx, "/com.netflix.titus.executor.vpc.TitusAgentVPCService/AssignIPV3", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *titusAgentVPCServiceClient) UnassignIPV3(ctx context.Context, in *UnassignIPRequestV3, opts ...grpc.CallOption) (*UnassignIPResponseV3, error) {
	out := new(UnassignIPResponseV3)
	err := c.cc.Invoke(ctx, "/com.netflix.titus.executor.vpc.TitusAgentVPCService/UnassignIPV3", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *titusAgentVPCServiceClient) GetAssignment(ctx context.Context, in *GetAssignmentRequest, opts ...grpc.CallOption) (*GetAssignmentResponse, error) {
	out := new(GetAssignmentResponse)
	err := c.cc.Invoke(ctx, "/com.netflix.titus.executor.vpc.TitusAgentVPCService/GetAssignment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *titusAgentVPCServiceClient) GCV3(ctx context.Context, in *GCRequestV3, opts ...grpc.CallOption) (*GCResponseV3, error) {
	out := new(GCResponseV3)
	err := c.cc.Invoke(ctx, "/com.netflix.titus.executor.vpc.TitusAgentVPCService/GCV3", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *titusAgentVPCServiceClient) GetLocks(ctx context.Context, in *GetLocksRequest, opts ...grpc.CallOption) (*GetLocksResponse, error) {
	out := new(GetLocksResponse)
	err := c.cc.Invoke(ctx, "/com.netflix.titus.executor.vpc.TitusAgentVPCService/GetLocks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *titusAgentVPCServiceClient) GetLock(ctx context.Context, in *LockId, opts ...grpc.CallOption) (*Lock, error) {
	out := new(Lock)
	err := c.cc.Invoke(ctx, "/com.netflix.titus.executor.vpc.TitusAgentVPCService/GetLock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *titusAgentVPCServiceClient) DeleteLock(ctx context.Context, in *LockId, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/com.netflix.titus.executor.vpc.TitusAgentVPCService/DeleteLock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *titusAgentVPCServiceClient) PreemptLock(ctx context.Context, in *PreemptLockRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/com.netflix.titus.executor.vpc.TitusAgentVPCService/PreemptLock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *titusAgentVPCServiceClient) AssociateTrunkNetworkInterface(ctx context.Context, in *AssociateTrunkNetworkInterfaceRequest, opts ...grpc.CallOption) (*AssociateTrunkNetworkInterfaceResponse, error) {
	out := new(AssociateTrunkNetworkInterfaceResponse)
	err := c.cc.Invoke(ctx, "/com.netflix.titus.executor.vpc.TitusAgentVPCService/AssociateTrunkNetworkInterface", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *titusAgentVPCServiceClient) DisassociateTrunkNetworkInterface(ctx context.Context, in *DisassociateTrunkNetworkInterfaceRequest, opts ...grpc.CallOption) (*DisassociateTrunkNetworkInterfaceResponse, error) {
	out := new(DisassociateTrunkNetworkInterfaceResponse)
	err := c.cc.Invoke(ctx, "/com.netflix.titus.executor.vpc.TitusAgentVPCService/DisassociateTrunkNetworkInterface", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *titusAgentVPCServiceClient) DescribeTrunkNetworkInterface(ctx context.Context, in *DescribeTrunkNetworkInterfaceRequest, opts ...grpc.CallOption) (*DescribeTrunkNetworkInterfaceResponse, error) {
	out := new(DescribeTrunkNetworkInterfaceResponse)
	err := c.cc.Invoke(ctx, "/com.netflix.titus.executor.vpc.TitusAgentVPCService/DescribeTrunkNetworkInterface", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *titusAgentVPCServiceClient) DetachBranchNetworkInterface(ctx context.Context, in *DetachBranchNetworkInterfaceRequest, opts ...grpc.CallOption) (*DetachBranchNetworkInterfaceResponse, error) {
	out := new(DetachBranchNetworkInterfaceResponse)
	err := c.cc.Invoke(ctx, "/com.netflix.titus.executor.vpc.TitusAgentVPCService/DetachBranchNetworkInterface", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TitusAgentVPCServiceServer is the server API for TitusAgentVPCService service.
type TitusAgentVPCServiceServer interface {
	// This ProvisionInstance function has to be called at startup of the instance, and it is idempotent.
	ProvisionInstance(context.Context, *ProvisionInstanceRequest) (*ProvisionInstanceResponse, error)
	ProvisionInstanceV3(context.Context, *ProvisionInstanceRequestV3) (*ProvisionInstanceResponseV3, error)
	AssignIP(context.Context, *AssignIPRequest) (*AssignIPResponse, error)
	AssignIPV3(context.Context, *AssignIPRequestV3) (*AssignIPResponseV3, error)
	UnassignIPV3(context.Context, *UnassignIPRequestV3) (*UnassignIPResponseV3, error)
	GetAssignment(context.Context, *GetAssignmentRequest) (*GetAssignmentResponse, error)
	GCV3(context.Context, *GCRequestV3) (*GCResponseV3, error)
	// Lock Management
	GetLocks(context.Context, *GetLocksRequest) (*GetLocksResponse, error)
	GetLock(context.Context, *LockId) (*Lock, error)
	DeleteLock(context.Context, *LockId) (*emptypb.Empty, error)
	PreemptLock(context.Context, *PreemptLockRequest) (*emptypb.Empty, error)
	// These are internal APIs that should really only be used by operators
	AssociateTrunkNetworkInterface(context.Context, *AssociateTrunkNetworkInterfaceRequest) (*AssociateTrunkNetworkInterfaceResponse, error)
	DisassociateTrunkNetworkInterface(context.Context, *DisassociateTrunkNetworkInterfaceRequest) (*DisassociateTrunkNetworkInterfaceResponse, error)
	DescribeTrunkNetworkInterface(context.Context, *DescribeTrunkNetworkInterfaceRequest) (*DescribeTrunkNetworkInterfaceResponse, error)
	DetachBranchNetworkInterface(context.Context, *DetachBranchNetworkInterfaceRequest) (*DetachBranchNetworkInterfaceResponse, error)
}

// UnimplementedTitusAgentVPCServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTitusAgentVPCServiceServer struct {
}

func (*UnimplementedTitusAgentVPCServiceServer) ProvisionInstance(ctx context.Context, req *ProvisionInstanceRequest) (*ProvisionInstanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProvisionInstance not implemented")
}
func (*UnimplementedTitusAgentVPCServiceServer) ProvisionInstanceV3(ctx context.Context, req *ProvisionInstanceRequestV3) (*ProvisionInstanceResponseV3, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProvisionInstanceV3 not implemented")
}
func (*UnimplementedTitusAgentVPCServiceServer) AssignIP(ctx context.Context, req *AssignIPRequest) (*AssignIPResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssignIP not implemented")
}
func (*UnimplementedTitusAgentVPCServiceServer) AssignIPV3(ctx context.Context, req *AssignIPRequestV3) (*AssignIPResponseV3, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssignIPV3 not implemented")
}
func (*UnimplementedTitusAgentVPCServiceServer) UnassignIPV3(ctx context.Context, req *UnassignIPRequestV3) (*UnassignIPResponseV3, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnassignIPV3 not implemented")
}
func (*UnimplementedTitusAgentVPCServiceServer) GetAssignment(ctx context.Context, req *GetAssignmentRequest) (*GetAssignmentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAssignment not implemented")
}
func (*UnimplementedTitusAgentVPCServiceServer) GCV3(ctx context.Context, req *GCRequestV3) (*GCResponseV3, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GCV3 not implemented")
}
func (*UnimplementedTitusAgentVPCServiceServer) GetLocks(ctx context.Context, req *GetLocksRequest) (*GetLocksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLocks not implemented")
}
func (*UnimplementedTitusAgentVPCServiceServer) GetLock(ctx context.Context, req *LockId) (*Lock, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLock not implemented")
}
func (*UnimplementedTitusAgentVPCServiceServer) DeleteLock(ctx context.Context, req *LockId) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLock not implemented")
}
func (*UnimplementedTitusAgentVPCServiceServer) PreemptLock(ctx context.Context, req *PreemptLockRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PreemptLock not implemented")
}
func (*UnimplementedTitusAgentVPCServiceServer) AssociateTrunkNetworkInterface(ctx context.Context, req *AssociateTrunkNetworkInterfaceRequest) (*AssociateTrunkNetworkInterfaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssociateTrunkNetworkInterface not implemented")
}
func (*UnimplementedTitusAgentVPCServiceServer) DisassociateTrunkNetworkInterface(ctx context.Context, req *DisassociateTrunkNetworkInterfaceRequest) (*DisassociateTrunkNetworkInterfaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisassociateTrunkNetworkInterface not implemented")
}
func (*UnimplementedTitusAgentVPCServiceServer) DescribeTrunkNetworkInterface(ctx context.Context, req *DescribeTrunkNetworkInterfaceRequest) (*DescribeTrunkNetworkInterfaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DescribeTrunkNetworkInterface not implemented")
}
func (*UnimplementedTitusAgentVPCServiceServer) DetachBranchNetworkInterface(ctx context.Context, req *DetachBranchNetworkInterfaceRequest) (*DetachBranchNetworkInterfaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DetachBranchNetworkInterface not implemented")
}

func RegisterTitusAgentVPCServiceServer(s *grpc.Server, srv TitusAgentVPCServiceServer) {
	s.RegisterService(&_TitusAgentVPCService_serviceDesc, srv)
}

func _TitusAgentVPCService_ProvisionInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProvisionInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TitusAgentVPCServiceServer).ProvisionInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.netflix.titus.executor.vpc.TitusAgentVPCService/ProvisionInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TitusAgentVPCServiceServer).ProvisionInstance(ctx, req.(*ProvisionInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TitusAgentVPCService_ProvisionInstanceV3_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProvisionInstanceRequestV3)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TitusAgentVPCServiceServer).ProvisionInstanceV3(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.netflix.titus.executor.vpc.TitusAgentVPCService/ProvisionInstanceV3",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TitusAgentVPCServiceServer).ProvisionInstanceV3(ctx, req.(*ProvisionInstanceRequestV3))
	}
	return interceptor(ctx, in, info, handler)
}

func _TitusAgentVPCService_AssignIP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssignIPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TitusAgentVPCServiceServer).AssignIP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.netflix.titus.executor.vpc.TitusAgentVPCService/AssignIP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TitusAgentVPCServiceServer).AssignIP(ctx, req.(*AssignIPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TitusAgentVPCService_AssignIPV3_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssignIPRequestV3)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TitusAgentVPCServiceServer).AssignIPV3(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.netflix.titus.executor.vpc.TitusAgentVPCService/AssignIPV3",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TitusAgentVPCServiceServer).AssignIPV3(ctx, req.(*AssignIPRequestV3))
	}
	return interceptor(ctx, in, info, handler)
}

func _TitusAgentVPCService_UnassignIPV3_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnassignIPRequestV3)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TitusAgentVPCServiceServer).UnassignIPV3(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.netflix.titus.executor.vpc.TitusAgentVPCService/UnassignIPV3",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TitusAgentVPCServiceServer).UnassignIPV3(ctx, req.(*UnassignIPRequestV3))
	}
	return interceptor(ctx, in, info, handler)
}

func _TitusAgentVPCService_GetAssignment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssignmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TitusAgentVPCServiceServer).GetAssignment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.netflix.titus.executor.vpc.TitusAgentVPCService/GetAssignment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TitusAgentVPCServiceServer).GetAssignment(ctx, req.(*GetAssignmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TitusAgentVPCService_GCV3_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GCRequestV3)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TitusAgentVPCServiceServer).GCV3(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.netflix.titus.executor.vpc.TitusAgentVPCService/GCV3",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TitusAgentVPCServiceServer).GCV3(ctx, req.(*GCRequestV3))
	}
	return interceptor(ctx, in, info, handler)
}

func _TitusAgentVPCService_GetLocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLocksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TitusAgentVPCServiceServer).GetLocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.netflix.titus.executor.vpc.TitusAgentVPCService/GetLocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TitusAgentVPCServiceServer).GetLocks(ctx, req.(*GetLocksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TitusAgentVPCService_GetLock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LockId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TitusAgentVPCServiceServer).GetLock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.netflix.titus.executor.vpc.TitusAgentVPCService/GetLock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TitusAgentVPCServiceServer).GetLock(ctx, req.(*LockId))
	}
	return interceptor(ctx, in, info, handler)
}

func _TitusAgentVPCService_DeleteLock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LockId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TitusAgentVPCServiceServer).DeleteLock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.netflix.titus.executor.vpc.TitusAgentVPCService/DeleteLock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TitusAgentVPCServiceServer).DeleteLock(ctx, req.(*LockId))
	}
	return interceptor(ctx, in, info, handler)
}

func _TitusAgentVPCService_PreemptLock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PreemptLockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TitusAgentVPCServiceServer).PreemptLock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.netflix.titus.executor.vpc.TitusAgentVPCService/PreemptLock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TitusAgentVPCServiceServer).PreemptLock(ctx, req.(*PreemptLockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TitusAgentVPCService_AssociateTrunkNetworkInterface_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssociateTrunkNetworkInterfaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TitusAgentVPCServiceServer).AssociateTrunkNetworkInterface(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.netflix.titus.executor.vpc.TitusAgentVPCService/AssociateTrunkNetworkInterface",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TitusAgentVPCServiceServer).AssociateTrunkNetworkInterface(ctx, req.(*AssociateTrunkNetworkInterfaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TitusAgentVPCService_DisassociateTrunkNetworkInterface_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisassociateTrunkNetworkInterfaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TitusAgentVPCServiceServer).DisassociateTrunkNetworkInterface(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.netflix.titus.executor.vpc.TitusAgentVPCService/DisassociateTrunkNetworkInterface",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TitusAgentVPCServiceServer).DisassociateTrunkNetworkInterface(ctx, req.(*DisassociateTrunkNetworkInterfaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TitusAgentVPCService_DescribeTrunkNetworkInterface_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeTrunkNetworkInterfaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TitusAgentVPCServiceServer).DescribeTrunkNetworkInterface(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.netflix.titus.executor.vpc.TitusAgentVPCService/DescribeTrunkNetworkInterface",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TitusAgentVPCServiceServer).DescribeTrunkNetworkInterface(ctx, req.(*DescribeTrunkNetworkInterfaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TitusAgentVPCService_DetachBranchNetworkInterface_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetachBranchNetworkInterfaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TitusAgentVPCServiceServer).DetachBranchNetworkInterface(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.netflix.titus.executor.vpc.TitusAgentVPCService/DetachBranchNetworkInterface",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TitusAgentVPCServiceServer).DetachBranchNetworkInterface(ctx, req.(*DetachBranchNetworkInterfaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TitusAgentVPCService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.netflix.titus.executor.vpc.TitusAgentVPCService",
	HandlerType: (*TitusAgentVPCServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProvisionInstance",
			Handler:    _TitusAgentVPCService_ProvisionInstance_Handler,
		},
		{
			MethodName: "ProvisionInstanceV3",
			Handler:    _TitusAgentVPCService_ProvisionInstanceV3_Handler,
		},
		{
			MethodName: "AssignIP",
			Handler:    _TitusAgentVPCService_AssignIP_Handler,
		},
		{
			MethodName: "AssignIPV3",
			Handler:    _TitusAgentVPCService_AssignIPV3_Handler,
		},
		{
			MethodName: "UnassignIPV3",
			Handler:    _TitusAgentVPCService_UnassignIPV3_Handler,
		},
		{
			MethodName: "GetAssignment",
			Handler:    _TitusAgentVPCService_GetAssignment_Handler,
		},
		{
			MethodName: "GCV3",
			Handler:    _TitusAgentVPCService_GCV3_Handler,
		},
		{
			MethodName: "GetLocks",
			Handler:    _TitusAgentVPCService_GetLocks_Handler,
		},
		{
			MethodName: "GetLock",
			Handler:    _TitusAgentVPCService_GetLock_Handler,
		},
		{
			MethodName: "DeleteLock",
			Handler:    _TitusAgentVPCService_DeleteLock_Handler,
		},
		{
			MethodName: "PreemptLock",
			Handler:    _TitusAgentVPCService_PreemptLock_Handler,
		},
		{
			MethodName: "AssociateTrunkNetworkInterface",
			Handler:    _TitusAgentVPCService_AssociateTrunkNetworkInterface_Handler,
		},
		{
			MethodName: "DisassociateTrunkNetworkInterface",
			Handler:    _TitusAgentVPCService_DisassociateTrunkNetworkInterface_Handler,
		},
		{
			MethodName: "DescribeTrunkNetworkInterface",
			Handler:    _TitusAgentVPCService_DescribeTrunkNetworkInterface_Handler,
		},
		{
			MethodName: "DetachBranchNetworkInterface",
			Handler:    _TitusAgentVPCService_DetachBranchNetworkInterface_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vpc.proto",
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: iam.proto

package iamapi

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AssumeRoleRequest_CredentialUseCase int32

const (
	AssumeRoleRequest_ForTask    AssumeRoleRequest_CredentialUseCase = 0
	AssumeRoleRequest_ForLogging AssumeRoleRequest_CredentialUseCase = 1
)

var AssumeRoleRequest_CredentialUseCase_name = map[int32]string{
	0: "ForTask",
	1: "ForLogging",
}

var AssumeRoleRequest_CredentialUseCase_value = map[string]int32{
	"ForTask":    0,
	"ForLogging": 1,
}

func (x AssumeRoleRequest_CredentialUseCase) String() string {
	return proto.EnumName(AssumeRoleRequest_CredentialUseCase_name, int32(x))
}

func (AssumeRoleRequest_CredentialUseCase) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0a2c201915207782, []int{0, 0}
}

type AssumeRoleRequest struct {
	RoleARN              string                              `protobuf:"bytes,1,opt,name=roleARN,proto3" json:"roleARN,omitempty"`
	TaskId               string                              `protobuf:"bytes,2,opt,name=taskId,proto3" json:"taskId,omitempty"`
	CredentialUseCase    AssumeRoleRequest_CredentialUseCase `protobuf:"varint,3,opt,name=credentialUseCase,proto3,enum=com.netflix.titus.executor.metadataserver.AssumeRoleRequest_CredentialUseCase" json:"credentialUseCase,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *AssumeRoleRequest) Reset()         { *m = AssumeRoleRequest{} }
func (m *AssumeRoleRequest) String() string { return proto.CompactTextString(m) }
func (*AssumeRoleRequest) ProtoMessage()    {}
func (*AssumeRoleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a2c201915207782, []int{0}
}

func (m *AssumeRoleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssumeRoleRequest.Unmarshal(m, b)
}
func (m *AssumeRoleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssumeRoleRequest.Marshal(b, m, deterministic)
}
func (m *AssumeRoleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssumeRoleRequest.Merge(m, src)
}
func (m *AssumeRoleRequest) XXX_Size() int {
	return xxx_messageInfo_AssumeRoleRequest.Size(m)
}
func (m *AssumeRoleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssumeRoleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AssumeRoleRequest proto.InternalMessageInfo

func (m *AssumeRoleRequest) GetRoleARN() string {
	if m != nil {
		return m.RoleARN
	}
	return ""
}

func (m *AssumeRoleRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *AssumeRoleRequest) GetCredentialUseCase() AssumeRoleRequest_CredentialUseCase {
	if m != nil {
		return m.CredentialUseCase
	}
	return AssumeRoleRequest_ForTask
}

type AssumeRoleResponse struct {
	AssumedRoleUser      *AssumeRoleResponse_AssumedRoleUser `protobuf:"bytes,1,opt,name=assumedRoleUser,proto3" json:"assumedRoleUser,omitempty"`
	Credentials          *AssumeRoleResponse_Credentials     `protobuf:"bytes,2,opt,name=credentials,proto3" json:"credentials,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *AssumeRoleResponse) Reset()         { *m = AssumeRoleResponse{} }
func (m *AssumeRoleResponse) String() string { return proto.CompactTextString(m) }
func (*AssumeRoleResponse) ProtoMessage()    {}
func (*AssumeRoleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a2c201915207782, []int{1}
}

func (m *AssumeRoleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssumeRoleResponse.Unmarshal(m, b)
}
func (m *AssumeRoleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssumeRoleResponse.Marshal(b, m, deterministic)
}
func (m *AssumeRoleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssumeRoleResponse.Merge(m, src)
}
func (m *AssumeRoleResponse) XXX_Size() int {
	return xxx_messageInfo_AssumeRoleResponse.Size(m)
}
func (m *AssumeRoleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AssumeRoleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AssumeRoleResponse proto.InternalMessageInfo

func (m *AssumeRoleResponse) GetAssumedRoleUser() *AssumeRoleResponse_AssumedRoleUser {
	if m != nil {
		return m.AssumedRoleUser
	}
	return nil
}

func (m *AssumeRoleResponse) GetCredentials() *AssumeRoleResponse_Credentials {
	if m != nil {
		return m.Credentials
	}
	return nil
}

type AssumeRoleResponse_AssumedRoleUser struct {
	AssumedRoleId        string   `protobuf:"bytes,1,opt,name=assumedRoleId,proto3" json:"assumedRoleId,omitempty"`
	Arn                  string   `protobuf:"bytes,2,opt,name=arn,proto3" json:"arn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssumeRoleResponse_AssumedRoleUser) Reset()         { *m = AssumeRoleResponse_AssumedRoleUser{} }
func (m *AssumeRoleResponse_AssumedRoleUser) String() string { return proto.CompactTextString(m) }
func (*AssumeRoleResponse_AssumedRoleUser) ProtoMessage()    {}
func (*AssumeRoleResponse_AssumedRoleUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a2c201915207782, []int{1, 0}
}

func (m *AssumeRoleResponse_AssumedRoleUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssumeRoleResponse_AssumedRoleUser.Unmarshal(m, b)
}
func (m *AssumeRoleResponse_AssumedRoleUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssumeRoleResponse_AssumedRoleUser.Marshal(b, m, deterministic)
}
func (m *AssumeRoleResponse_AssumedRoleUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssumeRoleResponse_AssumedRoleUser.Merge(m, src)
}
func (m *AssumeRoleResponse_AssumedRoleUser) XXX_Size() int {
	return xxx_messageInfo_AssumeRoleResponse_AssumedRoleUser.Size(m)
}
func (m *AssumeRoleResponse_AssumedRoleUser) XXX_DiscardUnknown() {
	xxx_messageInfo_AssumeRoleResponse_AssumedRoleUser.DiscardUnknown(m)
}

var xxx_messageInfo_AssumeRoleResponse_AssumedRoleUser proto.InternalMessageInfo

func (m *AssumeRoleResponse_AssumedRoleUser) GetAssumedRoleId() string {
	if m != nil {
		return m.AssumedRoleId
	}
	return ""
}

func (m *AssumeRoleResponse_AssumedRoleUser) GetArn() string {
	if m != nil {
		return m.Arn
	}
	return ""
}

type AssumeRoleResponse_Credentials struct {
	SecretAccessKey      string               `protobuf:"bytes,1,opt,name=secretAccessKey,proto3" json:"secretAccessKey,omitempty"`
	SessionToken         string               `protobuf:"bytes,2,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"`
	Expiration           *timestamp.Timestamp `protobuf:"bytes,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
	AccessKeyId          string               `protobuf:"bytes,4,opt,name=accessKeyId,proto3" json:"accessKeyId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AssumeRoleResponse_Credentials) Reset()         { *m = AssumeRoleResponse_Credentials{} }
func (m *AssumeRoleResponse_Credentials) String() string { return proto.CompactTextString(m) }
func (*AssumeRoleResponse_Credentials) ProtoMessage()    {}
func (*AssumeRoleResponse_Credentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a2c201915207782, []int{1, 1}
}

func (m *AssumeRoleResponse_Credentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssumeRoleResponse_Credentials.Unmarshal(m, b)
}
func (m *AssumeRoleResponse_Credentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssumeRoleResponse_Credentials.Marshal(b, m, deterministic)
}
func (m *AssumeRoleResponse_Credentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssumeRoleResponse_Credentials.Merge(m, src)
}
func (m *AssumeRoleResponse_Credentials) XXX_Size() int {
	return xxx_messageInfo_AssumeRoleResponse_Credentials.Size(m)
}
func (m *AssumeRoleResponse_Credentials) XXX_DiscardUnknown() {
	xxx_messageInfo_AssumeRoleResponse_Credentials.DiscardUnknown(m)
}

var xxx_messageInfo_AssumeRoleResponse_Credentials proto.InternalMessageInfo

func (m *AssumeRoleResponse_Credentials) GetSecretAccessKey() string {
	if m != nil {
		return m.SecretAccessKey
	}
	return ""
}

func (m *AssumeRoleResponse_Credentials) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *AssumeRoleResponse_Credentials) GetExpiration() *timestamp.Timestamp {
	if m != nil {
		return m.Expiration
	}
	return nil
}

func (m *AssumeRoleResponse_Credentials) GetAccessKeyId() string {
	if m != nil {
		return m.AccessKeyId
	}
	return ""
}

func init() {
	proto.RegisterEnum("com.netflix.titus.executor.metadataserver.AssumeRoleRequest_CredentialUseCase", AssumeRoleRequest_CredentialUseCase_name, AssumeRoleRequest_CredentialUseCase_value)
	proto.RegisterType((*AssumeRoleRequest)(nil), "com.netflix.titus.executor.metadataserver.AssumeRoleRequest")
	proto.RegisterType((*AssumeRoleResponse)(nil), "com.netflix.titus.executor.metadataserver.AssumeRoleResponse")
	proto.RegisterType((*AssumeRoleResponse_AssumedRoleUser)(nil), "com.netflix.titus.executor.metadataserver.AssumeRoleResponse.AssumedRoleUser")
	proto.RegisterType((*AssumeRoleResponse_Credentials)(nil), "com.netflix.titus.executor.metadataserver.AssumeRoleResponse.Credentials")
}

func init() { proto.RegisterFile("iam.proto", fileDescriptor_0a2c201915207782) }

var fileDescriptor_0a2c201915207782 = []byte{
	// 437 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0xbf, 0x6f, 0xd3, 0x40,
	0x14, 0xc7, 0x31, 0xa9, 0x52, 0xfa, 0x0c, 0x4d, 0xf2, 0x06, 0x64, 0x79, 0x21, 0x8a, 0x18, 0xc2,
	0x72, 0x45, 0x66, 0x43, 0x30, 0x84, 0x4a, 0x95, 0x2c, 0x68, 0x07, 0x2b, 0x5d, 0xd8, 0xae, 0xf6,
	0xab, 0x75, 0x8a, 0xed, 0x33, 0xf7, 0xce, 0x10, 0x24, 0x16, 0x46, 0x46, 0xfe, 0x1c, 0xfe, 0x30,
	0x76, 0xd4, 0x8b, 0x4d, 0xdc, 0x64, 0x41, 0x64, 0xf3, 0x7d, 0x7d, 0xf7, 0xf9, 0xbe, 0x1f, 0x5f,
	0x38, 0x51, 0xb2, 0x14, 0xb5, 0xd1, 0x56, 0xe3, 0x8b, 0x54, 0x97, 0xa2, 0x22, 0x7b, 0x5b, 0xa8,
	0xb5, 0xb0, 0xca, 0x36, 0x2c, 0x68, 0x4d, 0x69, 0x63, 0xb5, 0x11, 0x25, 0x59, 0x99, 0x49, 0x2b,
	0x99, 0xcc, 0x67, 0x32, 0xe1, 0xb3, 0x5c, 0xeb, 0xbc, 0xa0, 0x33, 0xf7, 0xf0, 0xa6, 0xb9, 0x3d,
	0xb3, 0xaa, 0x24, 0xb6, 0xb2, 0xac, 0x37, 0xac, 0xd9, 0x6f, 0x0f, 0x26, 0x0b, 0xe6, 0xa6, 0xa4,
	0x44, 0x17, 0x94, 0xd0, 0xa7, 0x86, 0xd8, 0x62, 0x00, 0xc7, 0x46, 0x17, 0xb4, 0x48, 0xae, 0x02,
	0x6f, 0xea, 0xcd, 0x4f, 0x92, 0xee, 0x88, 0x4f, 0x61, 0x68, 0x25, 0xaf, 0xe2, 0x2c, 0x78, 0xe8,
	0x7e, 0xb4, 0x27, 0xfc, 0x06, 0x93, 0xd4, 0x50, 0x46, 0x95, 0x55, 0xb2, 0xb8, 0x66, 0x3a, 0x97,
	0x4c, 0xc1, 0x60, 0xea, 0xcd, 0x4f, 0xa3, 0x2b, 0xf1, 0xcf, 0xf5, 0x8a, 0xbd, 0x52, 0xc4, 0xf9,
	0x2e, 0x35, 0xd9, 0x37, 0x9a, 0xbd, 0x84, 0xc9, 0xde, 0x3d, 0xf4, 0xe1, 0xf8, 0x42, 0x9b, 0xa5,
	0xe4, 0xd5, 0xf8, 0x01, 0x9e, 0x02, 0x5c, 0x68, 0xf3, 0x41, 0xe7, 0xb9, 0xaa, 0xf2, 0xb1, 0x37,
	0xfb, 0x7e, 0x04, 0xd8, 0x37, 0xe3, 0x5a, 0x57, 0x4c, 0xf8, 0x05, 0x46, 0xd2, 0xa9, 0xd9, 0x9d,
	0x7c, 0xcd, 0x64, 0xdc, 0x00, 0xfc, 0xe8, 0xf2, 0x3f, 0x9b, 0xd8, 0x70, 0x5b, 0xe9, 0x2f, 0x34,
	0xd9, 0x75, 0xc1, 0x15, 0xf8, 0xdb, 0xb6, 0xd8, 0x0d, 0xd7, 0x8f, 0xe2, 0xc3, 0x4c, 0xb7, 0x23,
	0xe1, 0xa4, 0x4f, 0x0f, 0x63, 0x18, 0xed, 0x14, 0x84, 0xcf, 0xe1, 0x49, 0xaf, 0xa4, 0x38, 0x6b,
	0xf7, 0x7e, 0x5f, 0xc4, 0x31, 0x0c, 0xa4, 0xa9, 0xda, 0xd5, 0xdf, 0x7d, 0x86, 0xbf, 0x3c, 0xf0,
	0x7b, 0x3e, 0x38, 0x87, 0x11, 0x53, 0x6a, 0xc8, 0x2e, 0xd2, 0x94, 0x98, 0xdf, 0xd3, 0xd7, 0x96,
	0xb4, 0x2b, 0xe3, 0x0c, 0x1e, 0x33, 0x31, 0x2b, 0x5d, 0x2d, 0xf5, 0x8a, 0x3a, 0xe8, 0x3d, 0x0d,
	0x5f, 0x03, 0xd0, 0xba, 0x56, 0x46, 0x5a, 0xa5, 0x2b, 0x17, 0x27, 0x3f, 0x0a, 0xc5, 0x26, 0xd3,
	0xa2, 0xcb, 0xb4, 0x58, 0x76, 0x99, 0x4e, 0x7a, 0xb7, 0x71, 0x0a, 0xbe, 0xec, 0xcc, 0xe2, 0x2c,
	0x38, 0x72, 0xf8, 0xbe, 0x14, 0xfd, 0xf4, 0x60, 0x10, 0x2f, 0x2e, 0xf1, 0x87, 0x07, 0xb0, 0x1d,
	0x1f, 0xbe, 0x39, 0x24, 0xaf, 0xe1, 0xdb, 0x83, 0x76, 0xf6, 0xee, 0xd1, 0xc7, 0xa1, 0x92, 0xa5,
	0xac, 0xd5, 0xcd, 0xd0, 0xf5, 0xf7, 0xea, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xde, 0xf3, 0x82,
	0x92, 0xf9, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IAMClient is the client API for IAM service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IAMClient interface {
	AssumeRole(ctx context.Context, in *AssumeRoleRequest, opts ...grpc.CallOption) (*AssumeRoleResponse, error)
}

type iAMClient struct {
	cc grpc.ClientConnInterface
}

func NewIAMClient(cc grpc.ClientConnInterface) IAMClient {
	return &iAMClient{cc}
}

func (c *iAMClient) AssumeRole(ctx context.Context, in *AssumeRoleRequest, opts ...grpc.CallOption) (*AssumeRoleResponse, error) {
	out := new(AssumeRoleResponse)
	err := c.cc.Invoke(ctx, "/com.netflix.titus.executor.metadataserver.IAM/AssumeRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IAMServer is the server API for IAM service.
type IAMServer interface {
	AssumeRole(context.Context, *AssumeRoleRequest) (*AssumeRoleResponse, error)
}

// UnimplementedIAMServer can be embedded to have forward compatible implementations.
type UnimplementedIAMServer struct {
}

func (*UnimplementedIAMServer) AssumeRole(ctx context.Context, req *AssumeRoleRequest) (*AssumeRoleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssumeRole not implemented")
}

func RegisterIAMServer(s *grpc.Server, srv IAMServer) {
	s.RegisterService(&_IAM_serviceDesc, srv)
}

func _IAM_AssumeRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssumeRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServer).AssumeRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.netflix.titus.executor.metadataserver.IAM/AssumeRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServer).AssumeRole(ctx, req.(*AssumeRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IAM_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.netflix.titus.executor.metadataserver.IAM",
	HandlerType: (*IAMServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AssumeRole",
			Handler:    _IAM_AssumeRole_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "iam.proto",
}
